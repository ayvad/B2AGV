
bin\Debug\B2AGVMainCodeV1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  00003eb0  00003f64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003eb0  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800308  00800308  0000406c  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000406c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000200  00000000  00000000  0000406f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000360  00000000  00000000  0000426f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002f57  00000000  00000000  000045cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000016f6  00000000  00000000  00007526  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002937  00000000  00000000  00008c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f0  00000000  00000000  0000b554  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d9  00000000  00000000  0000b844  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000096e  00000000  00000000  0000bd1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000c68b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 8e 17 	jmp	0x2f1c	; 0x2f1c <__vector_9>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 15 18 	jmp	0x302a	; 0x302a <__vector_50>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e0 eb       	ldi	r30, 0xB0	; 176
      fc:	fe e3       	ldi	r31, 0x3E	; 62
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	13 e0       	ldi	r17, 0x03	; 3
     110:	a8 e0       	ldi	r26, 0x08	; 8
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a2 31       	cpi	r26, 0x12	; 18
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 b5 02 	call	0x56a	; 0x56a <main>
     122:	0c 94 56 1f 	jmp	0x3eac	; 0x3eac <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <LED>:

#define PINIRsensor1 PINJ
#define PINIRsensor2 PINJ

void LED(int Richting)
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	00 d0       	rcall	.+0      	; 0x130 <LED+0x6>
     130:	0f 92       	push	r0
     132:	cd b7       	in	r28, 0x3d	; 61
     134:	de b7       	in	r29, 0x3e	; 62
     136:	9a 83       	std	Y+2, r25	; 0x02
     138:	89 83       	std	Y+1, r24	; 0x01
    switch (Richting)
     13a:	89 81       	ldd	r24, Y+1	; 0x01
     13c:	9a 81       	ldd	r25, Y+2	; 0x02
     13e:	9c 83       	std	Y+4, r25	; 0x04
     140:	8b 83       	std	Y+3, r24	; 0x03
     142:	8b 81       	ldd	r24, Y+3	; 0x03
     144:	9c 81       	ldd	r25, Y+4	; 0x04
     146:	83 30       	cpi	r24, 0x03	; 3
     148:	91 05       	cpc	r25, r1
     14a:	09 f4       	brne	.+2      	; 0x14e <LED+0x24>
     14c:	96 c0       	rjmp	.+300    	; 0x27a <LED+0x150>
     14e:	8b 81       	ldd	r24, Y+3	; 0x03
     150:	9c 81       	ldd	r25, Y+4	; 0x04
     152:	84 30       	cpi	r24, 0x04	; 4
     154:	91 05       	cpc	r25, r1
     156:	64 f4       	brge	.+24     	; 0x170 <LED+0x46>
     158:	8b 81       	ldd	r24, Y+3	; 0x03
     15a:	9c 81       	ldd	r25, Y+4	; 0x04
     15c:	81 30       	cpi	r24, 0x01	; 1
     15e:	91 05       	cpc	r25, r1
     160:	d1 f0       	breq	.+52     	; 0x196 <LED+0x6c>
     162:	8b 81       	ldd	r24, Y+3	; 0x03
     164:	9c 81       	ldd	r25, Y+4	; 0x04
     166:	82 30       	cpi	r24, 0x02	; 2
     168:	91 05       	cpc	r25, r1
     16a:	09 f4       	brne	.+2      	; 0x16e <LED+0x44>
     16c:	4d c0       	rjmp	.+154    	; 0x208 <LED+0xde>
     16e:	69 c1       	rjmp	.+722    	; 0x442 <LED+0x318>
     170:	8b 81       	ldd	r24, Y+3	; 0x03
     172:	9c 81       	ldd	r25, Y+4	; 0x04
     174:	85 30       	cpi	r24, 0x05	; 5
     176:	91 05       	cpc	r25, r1
     178:	09 f4       	brne	.+2      	; 0x17c <LED+0x52>
     17a:	f1 c0       	rjmp	.+482    	; 0x35e <LED+0x234>
     17c:	8b 81       	ldd	r24, Y+3	; 0x03
     17e:	9c 81       	ldd	r25, Y+4	; 0x04
     180:	85 30       	cpi	r24, 0x05	; 5
     182:	91 05       	cpc	r25, r1
     184:	0c f4       	brge	.+2      	; 0x188 <LED+0x5e>
     186:	b2 c0       	rjmp	.+356    	; 0x2ec <LED+0x1c2>
     188:	8b 81       	ldd	r24, Y+3	; 0x03
     18a:	9c 81       	ldd	r25, Y+4	; 0x04
     18c:	86 30       	cpi	r24, 0x06	; 6
     18e:	91 05       	cpc	r25, r1
     190:	09 f4       	brne	.+2      	; 0x194 <LED+0x6a>
     192:	1e c1       	rjmp	.+572    	; 0x3d0 <LED+0x2a6>
     194:	56 c1       	rjmp	.+684    	; 0x442 <LED+0x318>
    {
    case 1 :		//Vooruit
        PORTLEDRood &= ~(1 << PLEDRoodVoor);
     196:	a2 e2       	ldi	r26, 0x22	; 34
     198:	b0 e0       	ldi	r27, 0x00	; 0
     19a:	e2 e2       	ldi	r30, 0x22	; 34
     19c:	f0 e0       	ldi	r31, 0x00	; 0
     19e:	80 81       	ld	r24, Z
     1a0:	8e 7f       	andi	r24, 0xFE	; 254
     1a2:	8c 93       	st	X, r24
        PORTLEDRood |= (1 << PLEDRoodAchter);
     1a4:	a2 e2       	ldi	r26, 0x22	; 34
     1a6:	b0 e0       	ldi	r27, 0x00	; 0
     1a8:	e2 e2       	ldi	r30, 0x22	; 34
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	80 81       	ld	r24, Z
     1ae:	82 60       	ori	r24, 0x02	; 2
     1b0:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodRechts);
     1b2:	a2 e2       	ldi	r26, 0x22	; 34
     1b4:	b0 e0       	ldi	r27, 0x00	; 0
     1b6:	e2 e2       	ldi	r30, 0x22	; 34
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	80 81       	ld	r24, Z
     1bc:	8b 7f       	andi	r24, 0xFB	; 251
     1be:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodLinks);
     1c0:	a2 e2       	ldi	r26, 0x22	; 34
     1c2:	b0 e0       	ldi	r27, 0x00	; 0
     1c4:	e2 e2       	ldi	r30, 0x22	; 34
     1c6:	f0 e0       	ldi	r31, 0x00	; 0
     1c8:	80 81       	ld	r24, Z
     1ca:	87 7f       	andi	r24, 0xF7	; 247
     1cc:	8c 93       	st	X, r24

        PORTLEDGeel |= (1 << PLEDGeelVoor);
     1ce:	a2 e2       	ldi	r26, 0x22	; 34
     1d0:	b0 e0       	ldi	r27, 0x00	; 0
     1d2:	e2 e2       	ldi	r30, 0x22	; 34
     1d4:	f0 e0       	ldi	r31, 0x00	; 0
     1d6:	80 81       	ld	r24, Z
     1d8:	80 61       	ori	r24, 0x10	; 16
     1da:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelAchter);
     1dc:	a2 e2       	ldi	r26, 0x22	; 34
     1de:	b0 e0       	ldi	r27, 0x00	; 0
     1e0:	e2 e2       	ldi	r30, 0x22	; 34
     1e2:	f0 e0       	ldi	r31, 0x00	; 0
     1e4:	80 81       	ld	r24, Z
     1e6:	8f 7d       	andi	r24, 0xDF	; 223
     1e8:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelRechts);
     1ea:	a2 e2       	ldi	r26, 0x22	; 34
     1ec:	b0 e0       	ldi	r27, 0x00	; 0
     1ee:	e2 e2       	ldi	r30, 0x22	; 34
     1f0:	f0 e0       	ldi	r31, 0x00	; 0
     1f2:	80 81       	ld	r24, Z
     1f4:	8f 7b       	andi	r24, 0xBF	; 191
     1f6:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelLinks);
     1f8:	a2 e2       	ldi	r26, 0x22	; 34
     1fa:	b0 e0       	ldi	r27, 0x00	; 0
     1fc:	e2 e2       	ldi	r30, 0x22	; 34
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	8f 77       	andi	r24, 0x7F	; 127
     204:	8c 93       	st	X, r24
     206:	55 c1       	rjmp	.+682    	; 0x4b2 <LED+0x388>
        break;
    case 2 :		//Achteruit
        PORTLEDRood |= (1 << PLEDRoodVoor);
     208:	a2 e2       	ldi	r26, 0x22	; 34
     20a:	b0 e0       	ldi	r27, 0x00	; 0
     20c:	e2 e2       	ldi	r30, 0x22	; 34
     20e:	f0 e0       	ldi	r31, 0x00	; 0
     210:	80 81       	ld	r24, Z
     212:	81 60       	ori	r24, 0x01	; 1
     214:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodAchter);
     216:	a2 e2       	ldi	r26, 0x22	; 34
     218:	b0 e0       	ldi	r27, 0x00	; 0
     21a:	e2 e2       	ldi	r30, 0x22	; 34
     21c:	f0 e0       	ldi	r31, 0x00	; 0
     21e:	80 81       	ld	r24, Z
     220:	8d 7f       	andi	r24, 0xFD	; 253
     222:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodRechts);
     224:	a2 e2       	ldi	r26, 0x22	; 34
     226:	b0 e0       	ldi	r27, 0x00	; 0
     228:	e2 e2       	ldi	r30, 0x22	; 34
     22a:	f0 e0       	ldi	r31, 0x00	; 0
     22c:	80 81       	ld	r24, Z
     22e:	8b 7f       	andi	r24, 0xFB	; 251
     230:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodLinks);
     232:	a2 e2       	ldi	r26, 0x22	; 34
     234:	b0 e0       	ldi	r27, 0x00	; 0
     236:	e2 e2       	ldi	r30, 0x22	; 34
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	80 81       	ld	r24, Z
     23c:	87 7f       	andi	r24, 0xF7	; 247
     23e:	8c 93       	st	X, r24

        PORTLEDGeel &= ~(1 << PLEDGeelVoor);
     240:	a2 e2       	ldi	r26, 0x22	; 34
     242:	b0 e0       	ldi	r27, 0x00	; 0
     244:	e2 e2       	ldi	r30, 0x22	; 34
     246:	f0 e0       	ldi	r31, 0x00	; 0
     248:	80 81       	ld	r24, Z
     24a:	8f 7e       	andi	r24, 0xEF	; 239
     24c:	8c 93       	st	X, r24
        PORTLEDGeel |= (1 << PLEDGeelAchter);
     24e:	a2 e2       	ldi	r26, 0x22	; 34
     250:	b0 e0       	ldi	r27, 0x00	; 0
     252:	e2 e2       	ldi	r30, 0x22	; 34
     254:	f0 e0       	ldi	r31, 0x00	; 0
     256:	80 81       	ld	r24, Z
     258:	80 62       	ori	r24, 0x20	; 32
     25a:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelRechts);
     25c:	a2 e2       	ldi	r26, 0x22	; 34
     25e:	b0 e0       	ldi	r27, 0x00	; 0
     260:	e2 e2       	ldi	r30, 0x22	; 34
     262:	f0 e0       	ldi	r31, 0x00	; 0
     264:	80 81       	ld	r24, Z
     266:	8f 7b       	andi	r24, 0xBF	; 191
     268:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelLinks);
     26a:	a2 e2       	ldi	r26, 0x22	; 34
     26c:	b0 e0       	ldi	r27, 0x00	; 0
     26e:	e2 e2       	ldi	r30, 0x22	; 34
     270:	f0 e0       	ldi	r31, 0x00	; 0
     272:	80 81       	ld	r24, Z
     274:	8f 77       	andi	r24, 0x7F	; 127
     276:	8c 93       	st	X, r24
     278:	1c c1       	rjmp	.+568    	; 0x4b2 <LED+0x388>
        break;
    case 3 :		//Rechtsaf
        PORTLEDRood &= ~(1 << PLEDRoodVoor);
     27a:	a2 e2       	ldi	r26, 0x22	; 34
     27c:	b0 e0       	ldi	r27, 0x00	; 0
     27e:	e2 e2       	ldi	r30, 0x22	; 34
     280:	f0 e0       	ldi	r31, 0x00	; 0
     282:	80 81       	ld	r24, Z
     284:	8e 7f       	andi	r24, 0xFE	; 254
     286:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodAchter);
     288:	a2 e2       	ldi	r26, 0x22	; 34
     28a:	b0 e0       	ldi	r27, 0x00	; 0
     28c:	e2 e2       	ldi	r30, 0x22	; 34
     28e:	f0 e0       	ldi	r31, 0x00	; 0
     290:	80 81       	ld	r24, Z
     292:	8d 7f       	andi	r24, 0xFD	; 253
     294:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodRechts);
     296:	a2 e2       	ldi	r26, 0x22	; 34
     298:	b0 e0       	ldi	r27, 0x00	; 0
     29a:	e2 e2       	ldi	r30, 0x22	; 34
     29c:	f0 e0       	ldi	r31, 0x00	; 0
     29e:	80 81       	ld	r24, Z
     2a0:	8b 7f       	andi	r24, 0xFB	; 251
     2a2:	8c 93       	st	X, r24
        PORTLEDRood |= (1 << PLEDRoodLinks);
     2a4:	a2 e2       	ldi	r26, 0x22	; 34
     2a6:	b0 e0       	ldi	r27, 0x00	; 0
     2a8:	e2 e2       	ldi	r30, 0x22	; 34
     2aa:	f0 e0       	ldi	r31, 0x00	; 0
     2ac:	80 81       	ld	r24, Z
     2ae:	88 60       	ori	r24, 0x08	; 8
     2b0:	8c 93       	st	X, r24

        PORTLEDGeel &= ~(1 << PLEDGeelVoor);
     2b2:	a2 e2       	ldi	r26, 0x22	; 34
     2b4:	b0 e0       	ldi	r27, 0x00	; 0
     2b6:	e2 e2       	ldi	r30, 0x22	; 34
     2b8:	f0 e0       	ldi	r31, 0x00	; 0
     2ba:	80 81       	ld	r24, Z
     2bc:	8f 7e       	andi	r24, 0xEF	; 239
     2be:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelAchter);
     2c0:	a2 e2       	ldi	r26, 0x22	; 34
     2c2:	b0 e0       	ldi	r27, 0x00	; 0
     2c4:	e2 e2       	ldi	r30, 0x22	; 34
     2c6:	f0 e0       	ldi	r31, 0x00	; 0
     2c8:	80 81       	ld	r24, Z
     2ca:	8f 7d       	andi	r24, 0xDF	; 223
     2cc:	8c 93       	st	X, r24
        PORTLEDGeel |= (1 << PLEDGeelRechts);
     2ce:	a2 e2       	ldi	r26, 0x22	; 34
     2d0:	b0 e0       	ldi	r27, 0x00	; 0
     2d2:	e2 e2       	ldi	r30, 0x22	; 34
     2d4:	f0 e0       	ldi	r31, 0x00	; 0
     2d6:	80 81       	ld	r24, Z
     2d8:	80 64       	ori	r24, 0x40	; 64
     2da:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelLinks);
     2dc:	a2 e2       	ldi	r26, 0x22	; 34
     2de:	b0 e0       	ldi	r27, 0x00	; 0
     2e0:	e2 e2       	ldi	r30, 0x22	; 34
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	80 81       	ld	r24, Z
     2e6:	8f 77       	andi	r24, 0x7F	; 127
     2e8:	8c 93       	st	X, r24
     2ea:	e3 c0       	rjmp	.+454    	; 0x4b2 <LED+0x388>
        break;
    case 4 :		//Linkaf
        PORTLEDRood &= ~(1 << PLEDRoodVoor);
     2ec:	a2 e2       	ldi	r26, 0x22	; 34
     2ee:	b0 e0       	ldi	r27, 0x00	; 0
     2f0:	e2 e2       	ldi	r30, 0x22	; 34
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	80 81       	ld	r24, Z
     2f6:	8e 7f       	andi	r24, 0xFE	; 254
     2f8:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodAchter);
     2fa:	a2 e2       	ldi	r26, 0x22	; 34
     2fc:	b0 e0       	ldi	r27, 0x00	; 0
     2fe:	e2 e2       	ldi	r30, 0x22	; 34
     300:	f0 e0       	ldi	r31, 0x00	; 0
     302:	80 81       	ld	r24, Z
     304:	8d 7f       	andi	r24, 0xFD	; 253
     306:	8c 93       	st	X, r24
        PORTLEDRood |= (1 << PLEDRoodRechts);
     308:	a2 e2       	ldi	r26, 0x22	; 34
     30a:	b0 e0       	ldi	r27, 0x00	; 0
     30c:	e2 e2       	ldi	r30, 0x22	; 34
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	80 81       	ld	r24, Z
     312:	84 60       	ori	r24, 0x04	; 4
     314:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodLinks);
     316:	a2 e2       	ldi	r26, 0x22	; 34
     318:	b0 e0       	ldi	r27, 0x00	; 0
     31a:	e2 e2       	ldi	r30, 0x22	; 34
     31c:	f0 e0       	ldi	r31, 0x00	; 0
     31e:	80 81       	ld	r24, Z
     320:	87 7f       	andi	r24, 0xF7	; 247
     322:	8c 93       	st	X, r24

        PORTLEDGeel &= ~(1 << PLEDGeelVoor);
     324:	a2 e2       	ldi	r26, 0x22	; 34
     326:	b0 e0       	ldi	r27, 0x00	; 0
     328:	e2 e2       	ldi	r30, 0x22	; 34
     32a:	f0 e0       	ldi	r31, 0x00	; 0
     32c:	80 81       	ld	r24, Z
     32e:	8f 7e       	andi	r24, 0xEF	; 239
     330:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelAchter);
     332:	a2 e2       	ldi	r26, 0x22	; 34
     334:	b0 e0       	ldi	r27, 0x00	; 0
     336:	e2 e2       	ldi	r30, 0x22	; 34
     338:	f0 e0       	ldi	r31, 0x00	; 0
     33a:	80 81       	ld	r24, Z
     33c:	8f 7d       	andi	r24, 0xDF	; 223
     33e:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelRechts);
     340:	a2 e2       	ldi	r26, 0x22	; 34
     342:	b0 e0       	ldi	r27, 0x00	; 0
     344:	e2 e2       	ldi	r30, 0x22	; 34
     346:	f0 e0       	ldi	r31, 0x00	; 0
     348:	80 81       	ld	r24, Z
     34a:	8f 7b       	andi	r24, 0xBF	; 191
     34c:	8c 93       	st	X, r24
        PORTLEDGeel |= (1 << PLEDGeelLinks);
     34e:	a2 e2       	ldi	r26, 0x22	; 34
     350:	b0 e0       	ldi	r27, 0x00	; 0
     352:	e2 e2       	ldi	r30, 0x22	; 34
     354:	f0 e0       	ldi	r31, 0x00	; 0
     356:	80 81       	ld	r24, Z
     358:	80 68       	ori	r24, 0x80	; 128
     35a:	8c 93       	st	X, r24
     35c:	aa c0       	rjmp	.+340    	; 0x4b2 <LED+0x388>
        break;
    case 5 :		//Stop/stilstand
        PORTLEDRood |= (1 << PLEDRoodVoor);
     35e:	a2 e2       	ldi	r26, 0x22	; 34
     360:	b0 e0       	ldi	r27, 0x00	; 0
     362:	e2 e2       	ldi	r30, 0x22	; 34
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 81       	ld	r24, Z
     368:	81 60       	ori	r24, 0x01	; 1
     36a:	8c 93       	st	X, r24
        PORTLEDRood |= (1 << PLEDRoodAchter);
     36c:	a2 e2       	ldi	r26, 0x22	; 34
     36e:	b0 e0       	ldi	r27, 0x00	; 0
     370:	e2 e2       	ldi	r30, 0x22	; 34
     372:	f0 e0       	ldi	r31, 0x00	; 0
     374:	80 81       	ld	r24, Z
     376:	82 60       	ori	r24, 0x02	; 2
     378:	8c 93       	st	X, r24
        PORTLEDRood |= (1 << PLEDRoodRechts);
     37a:	a2 e2       	ldi	r26, 0x22	; 34
     37c:	b0 e0       	ldi	r27, 0x00	; 0
     37e:	e2 e2       	ldi	r30, 0x22	; 34
     380:	f0 e0       	ldi	r31, 0x00	; 0
     382:	80 81       	ld	r24, Z
     384:	84 60       	ori	r24, 0x04	; 4
     386:	8c 93       	st	X, r24
        PORTLEDRood |= (1 << PLEDRoodLinks);
     388:	a2 e2       	ldi	r26, 0x22	; 34
     38a:	b0 e0       	ldi	r27, 0x00	; 0
     38c:	e2 e2       	ldi	r30, 0x22	; 34
     38e:	f0 e0       	ldi	r31, 0x00	; 0
     390:	80 81       	ld	r24, Z
     392:	88 60       	ori	r24, 0x08	; 8
     394:	8c 93       	st	X, r24

        PORTLEDGeel &= ~(1 << PLEDGeelVoor);
     396:	a2 e2       	ldi	r26, 0x22	; 34
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	e2 e2       	ldi	r30, 0x22	; 34
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	80 81       	ld	r24, Z
     3a0:	8f 7e       	andi	r24, 0xEF	; 239
     3a2:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelAchter);
     3a4:	a2 e2       	ldi	r26, 0x22	; 34
     3a6:	b0 e0       	ldi	r27, 0x00	; 0
     3a8:	e2 e2       	ldi	r30, 0x22	; 34
     3aa:	f0 e0       	ldi	r31, 0x00	; 0
     3ac:	80 81       	ld	r24, Z
     3ae:	8f 7d       	andi	r24, 0xDF	; 223
     3b0:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelRechts);
     3b2:	a2 e2       	ldi	r26, 0x22	; 34
     3b4:	b0 e0       	ldi	r27, 0x00	; 0
     3b6:	e2 e2       	ldi	r30, 0x22	; 34
     3b8:	f0 e0       	ldi	r31, 0x00	; 0
     3ba:	80 81       	ld	r24, Z
     3bc:	8f 7b       	andi	r24, 0xBF	; 191
     3be:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelLinks);
     3c0:	a2 e2       	ldi	r26, 0x22	; 34
     3c2:	b0 e0       	ldi	r27, 0x00	; 0
     3c4:	e2 e2       	ldi	r30, 0x22	; 34
     3c6:	f0 e0       	ldi	r31, 0x00	; 0
     3c8:	80 81       	ld	r24, Z
     3ca:	8f 77       	andi	r24, 0x7F	; 127
     3cc:	8c 93       	st	X, r24
     3ce:	71 c0       	rjmp	.+226    	; 0x4b2 <LED+0x388>
        break;
    case 6 :		//Stoppen voor boom
        PORTLEDRood |= (1 << PLEDRoodVoor);
     3d0:	a2 e2       	ldi	r26, 0x22	; 34
     3d2:	b0 e0       	ldi	r27, 0x00	; 0
     3d4:	e2 e2       	ldi	r30, 0x22	; 34
     3d6:	f0 e0       	ldi	r31, 0x00	; 0
     3d8:	80 81       	ld	r24, Z
     3da:	81 60       	ori	r24, 0x01	; 1
     3dc:	8c 93       	st	X, r24
        PORTLEDRood |= (1 << PLEDRoodAchter);
     3de:	a2 e2       	ldi	r26, 0x22	; 34
     3e0:	b0 e0       	ldi	r27, 0x00	; 0
     3e2:	e2 e2       	ldi	r30, 0x22	; 34
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 81       	ld	r24, Z
     3e8:	82 60       	ori	r24, 0x02	; 2
     3ea:	8c 93       	st	X, r24
        PORTLEDRood |= (1 << PLEDRoodRechts);
     3ec:	a2 e2       	ldi	r26, 0x22	; 34
     3ee:	b0 e0       	ldi	r27, 0x00	; 0
     3f0:	e2 e2       	ldi	r30, 0x22	; 34
     3f2:	f0 e0       	ldi	r31, 0x00	; 0
     3f4:	80 81       	ld	r24, Z
     3f6:	84 60       	ori	r24, 0x04	; 4
     3f8:	8c 93       	st	X, r24
        PORTLEDRood |= (1 << PLEDRoodLinks);
     3fa:	a2 e2       	ldi	r26, 0x22	; 34
     3fc:	b0 e0       	ldi	r27, 0x00	; 0
     3fe:	e2 e2       	ldi	r30, 0x22	; 34
     400:	f0 e0       	ldi	r31, 0x00	; 0
     402:	80 81       	ld	r24, Z
     404:	88 60       	ori	r24, 0x08	; 8
     406:	8c 93       	st	X, r24

        PORTLEDGeel |= (1 << PLEDGeelVoor);
     408:	a2 e2       	ldi	r26, 0x22	; 34
     40a:	b0 e0       	ldi	r27, 0x00	; 0
     40c:	e2 e2       	ldi	r30, 0x22	; 34
     40e:	f0 e0       	ldi	r31, 0x00	; 0
     410:	80 81       	ld	r24, Z
     412:	80 61       	ori	r24, 0x10	; 16
     414:	8c 93       	st	X, r24
        PORTLEDGeel |= (1 << PLEDGeelAchter);
     416:	a2 e2       	ldi	r26, 0x22	; 34
     418:	b0 e0       	ldi	r27, 0x00	; 0
     41a:	e2 e2       	ldi	r30, 0x22	; 34
     41c:	f0 e0       	ldi	r31, 0x00	; 0
     41e:	80 81       	ld	r24, Z
     420:	80 62       	ori	r24, 0x20	; 32
     422:	8c 93       	st	X, r24
        PORTLEDGeel |= (1 << PLEDGeelRechts);
     424:	a2 e2       	ldi	r26, 0x22	; 34
     426:	b0 e0       	ldi	r27, 0x00	; 0
     428:	e2 e2       	ldi	r30, 0x22	; 34
     42a:	f0 e0       	ldi	r31, 0x00	; 0
     42c:	80 81       	ld	r24, Z
     42e:	80 64       	ori	r24, 0x40	; 64
     430:	8c 93       	st	X, r24
        PORTLEDGeel |= (1 << PLEDGeelLinks);
     432:	a2 e2       	ldi	r26, 0x22	; 34
     434:	b0 e0       	ldi	r27, 0x00	; 0
     436:	e2 e2       	ldi	r30, 0x22	; 34
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	80 81       	ld	r24, Z
     43c:	80 68       	ori	r24, 0x80	; 128
     43e:	8c 93       	st	X, r24
     440:	38 c0       	rjmp	.+112    	; 0x4b2 <LED+0x388>
        break;
    default :		//Alles uit
        PORTLEDRood &= ~(1 << PLEDRoodVoor);
     442:	a2 e2       	ldi	r26, 0x22	; 34
     444:	b0 e0       	ldi	r27, 0x00	; 0
     446:	e2 e2       	ldi	r30, 0x22	; 34
     448:	f0 e0       	ldi	r31, 0x00	; 0
     44a:	80 81       	ld	r24, Z
     44c:	8e 7f       	andi	r24, 0xFE	; 254
     44e:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodAchter);
     450:	a2 e2       	ldi	r26, 0x22	; 34
     452:	b0 e0       	ldi	r27, 0x00	; 0
     454:	e2 e2       	ldi	r30, 0x22	; 34
     456:	f0 e0       	ldi	r31, 0x00	; 0
     458:	80 81       	ld	r24, Z
     45a:	8d 7f       	andi	r24, 0xFD	; 253
     45c:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodRechts);
     45e:	a2 e2       	ldi	r26, 0x22	; 34
     460:	b0 e0       	ldi	r27, 0x00	; 0
     462:	e2 e2       	ldi	r30, 0x22	; 34
     464:	f0 e0       	ldi	r31, 0x00	; 0
     466:	80 81       	ld	r24, Z
     468:	8b 7f       	andi	r24, 0xFB	; 251
     46a:	8c 93       	st	X, r24
        PORTLEDRood &= ~(1 << PLEDRoodLinks);
     46c:	a2 e2       	ldi	r26, 0x22	; 34
     46e:	b0 e0       	ldi	r27, 0x00	; 0
     470:	e2 e2       	ldi	r30, 0x22	; 34
     472:	f0 e0       	ldi	r31, 0x00	; 0
     474:	80 81       	ld	r24, Z
     476:	87 7f       	andi	r24, 0xF7	; 247
     478:	8c 93       	st	X, r24

        PORTLEDGeel &= ~(1 << PLEDGeelVoor);
     47a:	a2 e2       	ldi	r26, 0x22	; 34
     47c:	b0 e0       	ldi	r27, 0x00	; 0
     47e:	e2 e2       	ldi	r30, 0x22	; 34
     480:	f0 e0       	ldi	r31, 0x00	; 0
     482:	80 81       	ld	r24, Z
     484:	8f 7e       	andi	r24, 0xEF	; 239
     486:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelAchter);
     488:	a2 e2       	ldi	r26, 0x22	; 34
     48a:	b0 e0       	ldi	r27, 0x00	; 0
     48c:	e2 e2       	ldi	r30, 0x22	; 34
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	80 81       	ld	r24, Z
     492:	8f 7d       	andi	r24, 0xDF	; 223
     494:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelRechts);
     496:	a2 e2       	ldi	r26, 0x22	; 34
     498:	b0 e0       	ldi	r27, 0x00	; 0
     49a:	e2 e2       	ldi	r30, 0x22	; 34
     49c:	f0 e0       	ldi	r31, 0x00	; 0
     49e:	80 81       	ld	r24, Z
     4a0:	8f 7b       	andi	r24, 0xBF	; 191
     4a2:	8c 93       	st	X, r24
        PORTLEDGeel &= ~(1 << PLEDGeelLinks);
     4a4:	a2 e2       	ldi	r26, 0x22	; 34
     4a6:	b0 e0       	ldi	r27, 0x00	; 0
     4a8:	e2 e2       	ldi	r30, 0x22	; 34
     4aa:	f0 e0       	ldi	r31, 0x00	; 0
     4ac:	80 81       	ld	r24, Z
     4ae:	8f 77       	andi	r24, 0x7F	; 127
     4b0:	8c 93       	st	X, r24
    }
}
     4b2:	0f 90       	pop	r0
     4b4:	0f 90       	pop	r0
     4b6:	0f 90       	pop	r0
     4b8:	0f 90       	pop	r0
     4ba:	cf 91       	pop	r28
     4bc:	df 91       	pop	r29
     4be:	08 95       	ret

000004c0 <init>:


void init(void)
{
     4c0:	df 93       	push	r29
     4c2:	cf 93       	push	r28
     4c4:	0f 92       	push	r0
     4c6:	0f 92       	push	r0
     4c8:	cd b7       	in	r28, 0x3d	; 61
     4ca:	de b7       	in	r29, 0x3e	; 62
    LED(5);
     4cc:	85 e0       	ldi	r24, 0x05	; 5
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
    DDRLEDRood |= (1 << PLEDRoodVoor);
     4d4:	a1 e2       	ldi	r26, 0x21	; 33
     4d6:	b0 e0       	ldi	r27, 0x00	; 0
     4d8:	e1 e2       	ldi	r30, 0x21	; 33
     4da:	f0 e0       	ldi	r31, 0x00	; 0
     4dc:	80 81       	ld	r24, Z
     4de:	81 60       	ori	r24, 0x01	; 1
     4e0:	8c 93       	st	X, r24
    DDRLEDRood |= (1 << PLEDRoodAchter);
     4e2:	a1 e2       	ldi	r26, 0x21	; 33
     4e4:	b0 e0       	ldi	r27, 0x00	; 0
     4e6:	e1 e2       	ldi	r30, 0x21	; 33
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	80 81       	ld	r24, Z
     4ec:	82 60       	ori	r24, 0x02	; 2
     4ee:	8c 93       	st	X, r24
    DDRLEDRood |= (1 << PLEDRoodRechts);
     4f0:	a1 e2       	ldi	r26, 0x21	; 33
     4f2:	b0 e0       	ldi	r27, 0x00	; 0
     4f4:	e1 e2       	ldi	r30, 0x21	; 33
     4f6:	f0 e0       	ldi	r31, 0x00	; 0
     4f8:	80 81       	ld	r24, Z
     4fa:	84 60       	ori	r24, 0x04	; 4
     4fc:	8c 93       	st	X, r24
    DDRLEDRood |= (1 << PLEDRoodLinks);
     4fe:	a1 e2       	ldi	r26, 0x21	; 33
     500:	b0 e0       	ldi	r27, 0x00	; 0
     502:	e1 e2       	ldi	r30, 0x21	; 33
     504:	f0 e0       	ldi	r31, 0x00	; 0
     506:	80 81       	ld	r24, Z
     508:	88 60       	ori	r24, 0x08	; 8
     50a:	8c 93       	st	X, r24

    DDRLEDGeel |= (1 << PLEDGeelVoor);
     50c:	a1 e2       	ldi	r26, 0x21	; 33
     50e:	b0 e0       	ldi	r27, 0x00	; 0
     510:	e1 e2       	ldi	r30, 0x21	; 33
     512:	f0 e0       	ldi	r31, 0x00	; 0
     514:	80 81       	ld	r24, Z
     516:	80 61       	ori	r24, 0x10	; 16
     518:	8c 93       	st	X, r24
    DDRLEDGeel |= (1 << PLEDGeelAchter);
     51a:	a1 e2       	ldi	r26, 0x21	; 33
     51c:	b0 e0       	ldi	r27, 0x00	; 0
     51e:	e1 e2       	ldi	r30, 0x21	; 33
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	80 81       	ld	r24, Z
     524:	80 62       	ori	r24, 0x20	; 32
     526:	8c 93       	st	X, r24
    DDRLEDGeel |= (1 << PLEDGeelRechts);
     528:	a1 e2       	ldi	r26, 0x21	; 33
     52a:	b0 e0       	ldi	r27, 0x00	; 0
     52c:	e1 e2       	ldi	r30, 0x21	; 33
     52e:	f0 e0       	ldi	r31, 0x00	; 0
     530:	80 81       	ld	r24, Z
     532:	80 64       	ori	r24, 0x40	; 64
     534:	8c 93       	st	X, r24
    DDRLEDGeel |= (1 << PLEDGeelLinks);
     536:	a1 e2       	ldi	r26, 0x21	; 33
     538:	b0 e0       	ldi	r27, 0x00	; 0
     53a:	e1 e2       	ldi	r30, 0x21	; 33
     53c:	f0 e0       	ldi	r31, 0x00	; 0
     53e:	80 81       	ld	r24, Z
     540:	80 68       	ori	r24, 0x80	; 128
     542:	8c 93       	st	X, r24

    DDRLEDRood |= (1 << PLEDNoodstop);
     544:	a1 e2       	ldi	r26, 0x21	; 33
     546:	b0 e0       	ldi	r27, 0x00	; 0
     548:	e1 e2       	ldi	r30, 0x21	; 33
     54a:	f0 e0       	ldi	r31, 0x00	; 0
     54c:	80 81       	ld	r24, Z
     54e:	80 61       	ori	r24, 0x10	; 16
     550:	8c 93       	st	X, r24

    init_steppermotor();
     552:	0e 94 88 09 	call	0x1310	; 0x1310 <init_steppermotor>
    init_ultrasoon();
     556:	0e 94 68 17 	call	0x2ed0	; 0x2ed0 <init_ultrasoon>
    sei();      //enabling global interupts
     55a:	78 94       	sei
    int TreeCounter = 0;
     55c:	1a 82       	std	Y+2, r1	; 0x02
     55e:	19 82       	std	Y+1, r1	; 0x01

}
     560:	0f 90       	pop	r0
     562:	0f 90       	pop	r0
     564:	cf 91       	pop	r28
     566:	df 91       	pop	r29
     568:	08 95       	ret

0000056a <main>:

int main(void)
{
     56a:	0f 93       	push	r16
     56c:	1f 93       	push	r17
     56e:	df 93       	push	r29
     570:	cf 93       	push	r28
     572:	cd b7       	in	r28, 0x3d	; 61
     574:	de b7       	in	r29, 0x3e	; 62
     576:	ca 59       	subi	r28, 0x9A	; 154
     578:	d0 40       	sbci	r29, 0x00	; 0
     57a:	0f b6       	in	r0, 0x3f	; 63
     57c:	f8 94       	cli
     57e:	de bf       	out	0x3e, r29	; 62
     580:	0f be       	out	0x3f, r0	; 63
     582:	cd bf       	out	0x3d, r28	; 61
  //  double distanceUS1 = 0;
    init();
     584:	0e 94 60 02 	call	0x4c0	; 0x4c0 <init>
    LED(1);
     588:	81 e0       	ldi	r24, 0x01	; 1
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
     590:	fe 01       	movw	r30, r28
     592:	e9 56       	subi	r30, 0x69	; 105
     594:	ff 4f       	sbci	r31, 0xFF	; 255
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	a8 e4       	ldi	r26, 0x48	; 72
     59c:	b3 e4       	ldi	r27, 0x43	; 67
     59e:	80 83       	st	Z, r24
     5a0:	91 83       	std	Z+1, r25	; 0x01
     5a2:	a2 83       	std	Z+2, r26	; 0x02
     5a4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     5a6:	8e 01       	movw	r16, r28
     5a8:	0d 56       	subi	r16, 0x6D	; 109
     5aa:	1f 4f       	sbci	r17, 0xFF	; 255
     5ac:	fe 01       	movw	r30, r28
     5ae:	e9 56       	subi	r30, 0x69	; 105
     5b0:	ff 4f       	sbci	r31, 0xFF	; 255
     5b2:	60 81       	ld	r22, Z
     5b4:	71 81       	ldd	r23, Z+1	; 0x01
     5b6:	82 81       	ldd	r24, Z+2	; 0x02
     5b8:	93 81       	ldd	r25, Z+3	; 0x03
     5ba:	20 e0       	ldi	r18, 0x00	; 0
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	4a e7       	ldi	r20, 0x7A	; 122
     5c0:	55 e4       	ldi	r21, 0x45	; 69
     5c2:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     5c6:	dc 01       	movw	r26, r24
     5c8:	cb 01       	movw	r24, r22
     5ca:	f8 01       	movw	r30, r16
     5cc:	80 83       	st	Z, r24
     5ce:	91 83       	std	Z+1, r25	; 0x01
     5d0:	a2 83       	std	Z+2, r26	; 0x02
     5d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     5d4:	fe 01       	movw	r30, r28
     5d6:	ed 56       	subi	r30, 0x6D	; 109
     5d8:	ff 4f       	sbci	r31, 0xFF	; 255
     5da:	60 81       	ld	r22, Z
     5dc:	71 81       	ldd	r23, Z+1	; 0x01
     5de:	82 81       	ldd	r24, Z+2	; 0x02
     5e0:	93 81       	ldd	r25, Z+3	; 0x03
     5e2:	20 e0       	ldi	r18, 0x00	; 0
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	40 e8       	ldi	r20, 0x80	; 128
     5e8:	5f e3       	ldi	r21, 0x3F	; 63
     5ea:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
     5ee:	88 23       	and	r24, r24
     5f0:	44 f4       	brge	.+16     	; 0x602 <main+0x98>
		__ticks = 1;
     5f2:	fe 01       	movw	r30, r28
     5f4:	ef 56       	subi	r30, 0x6F	; 111
     5f6:	ff 4f       	sbci	r31, 0xFF	; 255
     5f8:	81 e0       	ldi	r24, 0x01	; 1
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	91 83       	std	Z+1, r25	; 0x01
     5fe:	80 83       	st	Z, r24
     600:	64 c0       	rjmp	.+200    	; 0x6ca <main+0x160>
	else if (__tmp > 65535)
     602:	fe 01       	movw	r30, r28
     604:	ed 56       	subi	r30, 0x6D	; 109
     606:	ff 4f       	sbci	r31, 0xFF	; 255
     608:	60 81       	ld	r22, Z
     60a:	71 81       	ldd	r23, Z+1	; 0x01
     60c:	82 81       	ldd	r24, Z+2	; 0x02
     60e:	93 81       	ldd	r25, Z+3	; 0x03
     610:	20 e0       	ldi	r18, 0x00	; 0
     612:	3f ef       	ldi	r19, 0xFF	; 255
     614:	4f e7       	ldi	r20, 0x7F	; 127
     616:	57 e4       	ldi	r21, 0x47	; 71
     618:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
     61c:	18 16       	cp	r1, r24
     61e:	0c f0       	brlt	.+2      	; 0x622 <main+0xb8>
     620:	43 c0       	rjmp	.+134    	; 0x6a8 <main+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     622:	fe 01       	movw	r30, r28
     624:	e9 56       	subi	r30, 0x69	; 105
     626:	ff 4f       	sbci	r31, 0xFF	; 255
     628:	60 81       	ld	r22, Z
     62a:	71 81       	ldd	r23, Z+1	; 0x01
     62c:	82 81       	ldd	r24, Z+2	; 0x02
     62e:	93 81       	ldd	r25, Z+3	; 0x03
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	40 e2       	ldi	r20, 0x20	; 32
     636:	51 e4       	ldi	r21, 0x41	; 65
     638:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     63c:	dc 01       	movw	r26, r24
     63e:	cb 01       	movw	r24, r22
     640:	8e 01       	movw	r16, r28
     642:	0f 56       	subi	r16, 0x6F	; 111
     644:	1f 4f       	sbci	r17, 0xFF	; 255
     646:	bc 01       	movw	r22, r24
     648:	cd 01       	movw	r24, r26
     64a:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     64e:	dc 01       	movw	r26, r24
     650:	cb 01       	movw	r24, r22
     652:	f8 01       	movw	r30, r16
     654:	91 83       	std	Z+1, r25	; 0x01
     656:	80 83       	st	Z, r24
     658:	1f c0       	rjmp	.+62     	; 0x698 <main+0x12e>
     65a:	fe 01       	movw	r30, r28
     65c:	e1 57       	subi	r30, 0x71	; 113
     65e:	ff 4f       	sbci	r31, 0xFF	; 255
     660:	80 e9       	ldi	r24, 0x90	; 144
     662:	91 e0       	ldi	r25, 0x01	; 1
     664:	91 83       	std	Z+1, r25	; 0x01
     666:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     668:	fe 01       	movw	r30, r28
     66a:	e1 57       	subi	r30, 0x71	; 113
     66c:	ff 4f       	sbci	r31, 0xFF	; 255
     66e:	80 81       	ld	r24, Z
     670:	91 81       	ldd	r25, Z+1	; 0x01
     672:	01 97       	sbiw	r24, 0x01	; 1
     674:	f1 f7       	brne	.-4      	; 0x672 <main+0x108>
     676:	fe 01       	movw	r30, r28
     678:	e1 57       	subi	r30, 0x71	; 113
     67a:	ff 4f       	sbci	r31, 0xFF	; 255
     67c:	91 83       	std	Z+1, r25	; 0x01
     67e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     680:	de 01       	movw	r26, r28
     682:	af 56       	subi	r26, 0x6F	; 111
     684:	bf 4f       	sbci	r27, 0xFF	; 255
     686:	fe 01       	movw	r30, r28
     688:	ef 56       	subi	r30, 0x6F	; 111
     68a:	ff 4f       	sbci	r31, 0xFF	; 255
     68c:	80 81       	ld	r24, Z
     68e:	91 81       	ldd	r25, Z+1	; 0x01
     690:	01 97       	sbiw	r24, 0x01	; 1
     692:	11 96       	adiw	r26, 0x01	; 1
     694:	9c 93       	st	X, r25
     696:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     698:	fe 01       	movw	r30, r28
     69a:	ef 56       	subi	r30, 0x6F	; 111
     69c:	ff 4f       	sbci	r31, 0xFF	; 255
     69e:	80 81       	ld	r24, Z
     6a0:	91 81       	ldd	r25, Z+1	; 0x01
     6a2:	00 97       	sbiw	r24, 0x00	; 0
     6a4:	d1 f6       	brne	.-76     	; 0x65a <main+0xf0>
     6a6:	27 c0       	rjmp	.+78     	; 0x6f6 <main+0x18c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6a8:	8e 01       	movw	r16, r28
     6aa:	0f 56       	subi	r16, 0x6F	; 111
     6ac:	1f 4f       	sbci	r17, 0xFF	; 255
     6ae:	fe 01       	movw	r30, r28
     6b0:	ed 56       	subi	r30, 0x6D	; 109
     6b2:	ff 4f       	sbci	r31, 0xFF	; 255
     6b4:	60 81       	ld	r22, Z
     6b6:	71 81       	ldd	r23, Z+1	; 0x01
     6b8:	82 81       	ldd	r24, Z+2	; 0x02
     6ba:	93 81       	ldd	r25, Z+3	; 0x03
     6bc:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     6c0:	dc 01       	movw	r26, r24
     6c2:	cb 01       	movw	r24, r22
     6c4:	f8 01       	movw	r30, r16
     6c6:	91 83       	std	Z+1, r25	; 0x01
     6c8:	80 83       	st	Z, r24
     6ca:	de 01       	movw	r26, r28
     6cc:	a3 57       	subi	r26, 0x73	; 115
     6ce:	bf 4f       	sbci	r27, 0xFF	; 255
     6d0:	fe 01       	movw	r30, r28
     6d2:	ef 56       	subi	r30, 0x6F	; 111
     6d4:	ff 4f       	sbci	r31, 0xFF	; 255
     6d6:	80 81       	ld	r24, Z
     6d8:	91 81       	ldd	r25, Z+1	; 0x01
     6da:	8d 93       	st	X+, r24
     6dc:	9c 93       	st	X, r25
     6de:	fe 01       	movw	r30, r28
     6e0:	e3 57       	subi	r30, 0x73	; 115
     6e2:	ff 4f       	sbci	r31, 0xFF	; 255
     6e4:	80 81       	ld	r24, Z
     6e6:	91 81       	ldd	r25, Z+1	; 0x01
     6e8:	01 97       	sbiw	r24, 0x01	; 1
     6ea:	f1 f7       	brne	.-4      	; 0x6e8 <main+0x17e>
     6ec:	fe 01       	movw	r30, r28
     6ee:	e3 57       	subi	r30, 0x73	; 115
     6f0:	ff 4f       	sbci	r31, 0xFF	; 255
     6f2:	91 83       	std	Z+1, r25	; 0x01
     6f4:	80 83       	st	Z, r24
    _delay_ms(200);
    LED(3);
     6f6:	83 e0       	ldi	r24, 0x03	; 3
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
     6fe:	fe 01       	movw	r30, r28
     700:	e7 57       	subi	r30, 0x77	; 119
     702:	ff 4f       	sbci	r31, 0xFF	; 255
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	a8 e4       	ldi	r26, 0x48	; 72
     70a:	b3 e4       	ldi	r27, 0x43	; 67
     70c:	80 83       	st	Z, r24
     70e:	91 83       	std	Z+1, r25	; 0x01
     710:	a2 83       	std	Z+2, r26	; 0x02
     712:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     714:	8e 01       	movw	r16, r28
     716:	0b 57       	subi	r16, 0x7B	; 123
     718:	1f 4f       	sbci	r17, 0xFF	; 255
     71a:	fe 01       	movw	r30, r28
     71c:	e7 57       	subi	r30, 0x77	; 119
     71e:	ff 4f       	sbci	r31, 0xFF	; 255
     720:	60 81       	ld	r22, Z
     722:	71 81       	ldd	r23, Z+1	; 0x01
     724:	82 81       	ldd	r24, Z+2	; 0x02
     726:	93 81       	ldd	r25, Z+3	; 0x03
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	4a e7       	ldi	r20, 0x7A	; 122
     72e:	55 e4       	ldi	r21, 0x45	; 69
     730:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     734:	dc 01       	movw	r26, r24
     736:	cb 01       	movw	r24, r22
     738:	f8 01       	movw	r30, r16
     73a:	80 83       	st	Z, r24
     73c:	91 83       	std	Z+1, r25	; 0x01
     73e:	a2 83       	std	Z+2, r26	; 0x02
     740:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     742:	fe 01       	movw	r30, r28
     744:	eb 57       	subi	r30, 0x7B	; 123
     746:	ff 4f       	sbci	r31, 0xFF	; 255
     748:	60 81       	ld	r22, Z
     74a:	71 81       	ldd	r23, Z+1	; 0x01
     74c:	82 81       	ldd	r24, Z+2	; 0x02
     74e:	93 81       	ldd	r25, Z+3	; 0x03
     750:	20 e0       	ldi	r18, 0x00	; 0
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	40 e8       	ldi	r20, 0x80	; 128
     756:	5f e3       	ldi	r21, 0x3F	; 63
     758:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
     75c:	88 23       	and	r24, r24
     75e:	44 f4       	brge	.+16     	; 0x770 <main+0x206>
		__ticks = 1;
     760:	fe 01       	movw	r30, r28
     762:	ed 57       	subi	r30, 0x7D	; 125
     764:	ff 4f       	sbci	r31, 0xFF	; 255
     766:	81 e0       	ldi	r24, 0x01	; 1
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	91 83       	std	Z+1, r25	; 0x01
     76c:	80 83       	st	Z, r24
     76e:	64 c0       	rjmp	.+200    	; 0x838 <main+0x2ce>
	else if (__tmp > 65535)
     770:	fe 01       	movw	r30, r28
     772:	eb 57       	subi	r30, 0x7B	; 123
     774:	ff 4f       	sbci	r31, 0xFF	; 255
     776:	60 81       	ld	r22, Z
     778:	71 81       	ldd	r23, Z+1	; 0x01
     77a:	82 81       	ldd	r24, Z+2	; 0x02
     77c:	93 81       	ldd	r25, Z+3	; 0x03
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	3f ef       	ldi	r19, 0xFF	; 255
     782:	4f e7       	ldi	r20, 0x7F	; 127
     784:	57 e4       	ldi	r21, 0x47	; 71
     786:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
     78a:	18 16       	cp	r1, r24
     78c:	0c f0       	brlt	.+2      	; 0x790 <main+0x226>
     78e:	43 c0       	rjmp	.+134    	; 0x816 <main+0x2ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     790:	fe 01       	movw	r30, r28
     792:	e7 57       	subi	r30, 0x77	; 119
     794:	ff 4f       	sbci	r31, 0xFF	; 255
     796:	60 81       	ld	r22, Z
     798:	71 81       	ldd	r23, Z+1	; 0x01
     79a:	82 81       	ldd	r24, Z+2	; 0x02
     79c:	93 81       	ldd	r25, Z+3	; 0x03
     79e:	20 e0       	ldi	r18, 0x00	; 0
     7a0:	30 e0       	ldi	r19, 0x00	; 0
     7a2:	40 e2       	ldi	r20, 0x20	; 32
     7a4:	51 e4       	ldi	r21, 0x41	; 65
     7a6:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     7aa:	dc 01       	movw	r26, r24
     7ac:	cb 01       	movw	r24, r22
     7ae:	8e 01       	movw	r16, r28
     7b0:	0d 57       	subi	r16, 0x7D	; 125
     7b2:	1f 4f       	sbci	r17, 0xFF	; 255
     7b4:	bc 01       	movw	r22, r24
     7b6:	cd 01       	movw	r24, r26
     7b8:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     7bc:	dc 01       	movw	r26, r24
     7be:	cb 01       	movw	r24, r22
     7c0:	f8 01       	movw	r30, r16
     7c2:	91 83       	std	Z+1, r25	; 0x01
     7c4:	80 83       	st	Z, r24
     7c6:	1f c0       	rjmp	.+62     	; 0x806 <main+0x29c>
     7c8:	fe 01       	movw	r30, r28
     7ca:	ef 57       	subi	r30, 0x7F	; 127
     7cc:	ff 4f       	sbci	r31, 0xFF	; 255
     7ce:	80 e9       	ldi	r24, 0x90	; 144
     7d0:	91 e0       	ldi	r25, 0x01	; 1
     7d2:	91 83       	std	Z+1, r25	; 0x01
     7d4:	80 83       	st	Z, r24
     7d6:	fe 01       	movw	r30, r28
     7d8:	ef 57       	subi	r30, 0x7F	; 127
     7da:	ff 4f       	sbci	r31, 0xFF	; 255
     7dc:	80 81       	ld	r24, Z
     7de:	91 81       	ldd	r25, Z+1	; 0x01
     7e0:	01 97       	sbiw	r24, 0x01	; 1
     7e2:	f1 f7       	brne	.-4      	; 0x7e0 <main+0x276>
     7e4:	fe 01       	movw	r30, r28
     7e6:	ef 57       	subi	r30, 0x7F	; 127
     7e8:	ff 4f       	sbci	r31, 0xFF	; 255
     7ea:	91 83       	std	Z+1, r25	; 0x01
     7ec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7ee:	de 01       	movw	r26, r28
     7f0:	ad 57       	subi	r26, 0x7D	; 125
     7f2:	bf 4f       	sbci	r27, 0xFF	; 255
     7f4:	fe 01       	movw	r30, r28
     7f6:	ed 57       	subi	r30, 0x7D	; 125
     7f8:	ff 4f       	sbci	r31, 0xFF	; 255
     7fa:	80 81       	ld	r24, Z
     7fc:	91 81       	ldd	r25, Z+1	; 0x01
     7fe:	01 97       	sbiw	r24, 0x01	; 1
     800:	11 96       	adiw	r26, 0x01	; 1
     802:	9c 93       	st	X, r25
     804:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     806:	fe 01       	movw	r30, r28
     808:	ed 57       	subi	r30, 0x7D	; 125
     80a:	ff 4f       	sbci	r31, 0xFF	; 255
     80c:	80 81       	ld	r24, Z
     80e:	91 81       	ldd	r25, Z+1	; 0x01
     810:	00 97       	sbiw	r24, 0x00	; 0
     812:	d1 f6       	brne	.-76     	; 0x7c8 <main+0x25e>
     814:	27 c0       	rjmp	.+78     	; 0x864 <main+0x2fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     816:	8e 01       	movw	r16, r28
     818:	0d 57       	subi	r16, 0x7D	; 125
     81a:	1f 4f       	sbci	r17, 0xFF	; 255
     81c:	fe 01       	movw	r30, r28
     81e:	eb 57       	subi	r30, 0x7B	; 123
     820:	ff 4f       	sbci	r31, 0xFF	; 255
     822:	60 81       	ld	r22, Z
     824:	71 81       	ldd	r23, Z+1	; 0x01
     826:	82 81       	ldd	r24, Z+2	; 0x02
     828:	93 81       	ldd	r25, Z+3	; 0x03
     82a:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     82e:	dc 01       	movw	r26, r24
     830:	cb 01       	movw	r24, r22
     832:	f8 01       	movw	r30, r16
     834:	91 83       	std	Z+1, r25	; 0x01
     836:	80 83       	st	Z, r24
     838:	de 01       	movw	r26, r28
     83a:	a1 58       	subi	r26, 0x81	; 129
     83c:	bf 4f       	sbci	r27, 0xFF	; 255
     83e:	fe 01       	movw	r30, r28
     840:	ed 57       	subi	r30, 0x7D	; 125
     842:	ff 4f       	sbci	r31, 0xFF	; 255
     844:	80 81       	ld	r24, Z
     846:	91 81       	ldd	r25, Z+1	; 0x01
     848:	8d 93       	st	X+, r24
     84a:	9c 93       	st	X, r25
     84c:	fe 01       	movw	r30, r28
     84e:	e1 58       	subi	r30, 0x81	; 129
     850:	ff 4f       	sbci	r31, 0xFF	; 255
     852:	80 81       	ld	r24, Z
     854:	91 81       	ldd	r25, Z+1	; 0x01
     856:	01 97       	sbiw	r24, 0x01	; 1
     858:	f1 f7       	brne	.-4      	; 0x856 <main+0x2ec>
     85a:	fe 01       	movw	r30, r28
     85c:	e1 58       	subi	r30, 0x81	; 129
     85e:	ff 4f       	sbci	r31, 0xFF	; 255
     860:	91 83       	std	Z+1, r25	; 0x01
     862:	80 83       	st	Z, r24
    _delay_ms(200);
    LED(2);
     864:	82 e0       	ldi	r24, 0x02	; 2
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
     86c:	fe 01       	movw	r30, r28
     86e:	e5 58       	subi	r30, 0x85	; 133
     870:	ff 4f       	sbci	r31, 0xFF	; 255
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	a8 e4       	ldi	r26, 0x48	; 72
     878:	b3 e4       	ldi	r27, 0x43	; 67
     87a:	80 83       	st	Z, r24
     87c:	91 83       	std	Z+1, r25	; 0x01
     87e:	a2 83       	std	Z+2, r26	; 0x02
     880:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     882:	8e 01       	movw	r16, r28
     884:	09 58       	subi	r16, 0x89	; 137
     886:	1f 4f       	sbci	r17, 0xFF	; 255
     888:	fe 01       	movw	r30, r28
     88a:	e5 58       	subi	r30, 0x85	; 133
     88c:	ff 4f       	sbci	r31, 0xFF	; 255
     88e:	60 81       	ld	r22, Z
     890:	71 81       	ldd	r23, Z+1	; 0x01
     892:	82 81       	ldd	r24, Z+2	; 0x02
     894:	93 81       	ldd	r25, Z+3	; 0x03
     896:	20 e0       	ldi	r18, 0x00	; 0
     898:	30 e0       	ldi	r19, 0x00	; 0
     89a:	4a e7       	ldi	r20, 0x7A	; 122
     89c:	55 e4       	ldi	r21, 0x45	; 69
     89e:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     8a2:	dc 01       	movw	r26, r24
     8a4:	cb 01       	movw	r24, r22
     8a6:	f8 01       	movw	r30, r16
     8a8:	80 83       	st	Z, r24
     8aa:	91 83       	std	Z+1, r25	; 0x01
     8ac:	a2 83       	std	Z+2, r26	; 0x02
     8ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     8b0:	fe 01       	movw	r30, r28
     8b2:	e9 58       	subi	r30, 0x89	; 137
     8b4:	ff 4f       	sbci	r31, 0xFF	; 255
     8b6:	60 81       	ld	r22, Z
     8b8:	71 81       	ldd	r23, Z+1	; 0x01
     8ba:	82 81       	ldd	r24, Z+2	; 0x02
     8bc:	93 81       	ldd	r25, Z+3	; 0x03
     8be:	20 e0       	ldi	r18, 0x00	; 0
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	40 e8       	ldi	r20, 0x80	; 128
     8c4:	5f e3       	ldi	r21, 0x3F	; 63
     8c6:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
     8ca:	88 23       	and	r24, r24
     8cc:	44 f4       	brge	.+16     	; 0x8de <main+0x374>
		__ticks = 1;
     8ce:	fe 01       	movw	r30, r28
     8d0:	eb 58       	subi	r30, 0x8B	; 139
     8d2:	ff 4f       	sbci	r31, 0xFF	; 255
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	91 83       	std	Z+1, r25	; 0x01
     8da:	80 83       	st	Z, r24
     8dc:	64 c0       	rjmp	.+200    	; 0x9a6 <main+0x43c>
	else if (__tmp > 65535)
     8de:	fe 01       	movw	r30, r28
     8e0:	e9 58       	subi	r30, 0x89	; 137
     8e2:	ff 4f       	sbci	r31, 0xFF	; 255
     8e4:	60 81       	ld	r22, Z
     8e6:	71 81       	ldd	r23, Z+1	; 0x01
     8e8:	82 81       	ldd	r24, Z+2	; 0x02
     8ea:	93 81       	ldd	r25, Z+3	; 0x03
     8ec:	20 e0       	ldi	r18, 0x00	; 0
     8ee:	3f ef       	ldi	r19, 0xFF	; 255
     8f0:	4f e7       	ldi	r20, 0x7F	; 127
     8f2:	57 e4       	ldi	r21, 0x47	; 71
     8f4:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
     8f8:	18 16       	cp	r1, r24
     8fa:	0c f0       	brlt	.+2      	; 0x8fe <main+0x394>
     8fc:	43 c0       	rjmp	.+134    	; 0x984 <main+0x41a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8fe:	fe 01       	movw	r30, r28
     900:	e5 58       	subi	r30, 0x85	; 133
     902:	ff 4f       	sbci	r31, 0xFF	; 255
     904:	60 81       	ld	r22, Z
     906:	71 81       	ldd	r23, Z+1	; 0x01
     908:	82 81       	ldd	r24, Z+2	; 0x02
     90a:	93 81       	ldd	r25, Z+3	; 0x03
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	40 e2       	ldi	r20, 0x20	; 32
     912:	51 e4       	ldi	r21, 0x41	; 65
     914:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     918:	dc 01       	movw	r26, r24
     91a:	cb 01       	movw	r24, r22
     91c:	8e 01       	movw	r16, r28
     91e:	0b 58       	subi	r16, 0x8B	; 139
     920:	1f 4f       	sbci	r17, 0xFF	; 255
     922:	bc 01       	movw	r22, r24
     924:	cd 01       	movw	r24, r26
     926:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     92a:	dc 01       	movw	r26, r24
     92c:	cb 01       	movw	r24, r22
     92e:	f8 01       	movw	r30, r16
     930:	91 83       	std	Z+1, r25	; 0x01
     932:	80 83       	st	Z, r24
     934:	1f c0       	rjmp	.+62     	; 0x974 <main+0x40a>
     936:	fe 01       	movw	r30, r28
     938:	ed 58       	subi	r30, 0x8D	; 141
     93a:	ff 4f       	sbci	r31, 0xFF	; 255
     93c:	80 e9       	ldi	r24, 0x90	; 144
     93e:	91 e0       	ldi	r25, 0x01	; 1
     940:	91 83       	std	Z+1, r25	; 0x01
     942:	80 83       	st	Z, r24
     944:	fe 01       	movw	r30, r28
     946:	ed 58       	subi	r30, 0x8D	; 141
     948:	ff 4f       	sbci	r31, 0xFF	; 255
     94a:	80 81       	ld	r24, Z
     94c:	91 81       	ldd	r25, Z+1	; 0x01
     94e:	01 97       	sbiw	r24, 0x01	; 1
     950:	f1 f7       	brne	.-4      	; 0x94e <main+0x3e4>
     952:	fe 01       	movw	r30, r28
     954:	ed 58       	subi	r30, 0x8D	; 141
     956:	ff 4f       	sbci	r31, 0xFF	; 255
     958:	91 83       	std	Z+1, r25	; 0x01
     95a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     95c:	de 01       	movw	r26, r28
     95e:	ab 58       	subi	r26, 0x8B	; 139
     960:	bf 4f       	sbci	r27, 0xFF	; 255
     962:	fe 01       	movw	r30, r28
     964:	eb 58       	subi	r30, 0x8B	; 139
     966:	ff 4f       	sbci	r31, 0xFF	; 255
     968:	80 81       	ld	r24, Z
     96a:	91 81       	ldd	r25, Z+1	; 0x01
     96c:	01 97       	sbiw	r24, 0x01	; 1
     96e:	11 96       	adiw	r26, 0x01	; 1
     970:	9c 93       	st	X, r25
     972:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     974:	fe 01       	movw	r30, r28
     976:	eb 58       	subi	r30, 0x8B	; 139
     978:	ff 4f       	sbci	r31, 0xFF	; 255
     97a:	80 81       	ld	r24, Z
     97c:	91 81       	ldd	r25, Z+1	; 0x01
     97e:	00 97       	sbiw	r24, 0x00	; 0
     980:	d1 f6       	brne	.-76     	; 0x936 <main+0x3cc>
     982:	27 c0       	rjmp	.+78     	; 0x9d2 <main+0x468>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     984:	8e 01       	movw	r16, r28
     986:	0b 58       	subi	r16, 0x8B	; 139
     988:	1f 4f       	sbci	r17, 0xFF	; 255
     98a:	fe 01       	movw	r30, r28
     98c:	e9 58       	subi	r30, 0x89	; 137
     98e:	ff 4f       	sbci	r31, 0xFF	; 255
     990:	60 81       	ld	r22, Z
     992:	71 81       	ldd	r23, Z+1	; 0x01
     994:	82 81       	ldd	r24, Z+2	; 0x02
     996:	93 81       	ldd	r25, Z+3	; 0x03
     998:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     99c:	dc 01       	movw	r26, r24
     99e:	cb 01       	movw	r24, r22
     9a0:	f8 01       	movw	r30, r16
     9a2:	91 83       	std	Z+1, r25	; 0x01
     9a4:	80 83       	st	Z, r24
     9a6:	de 01       	movw	r26, r28
     9a8:	af 58       	subi	r26, 0x8F	; 143
     9aa:	bf 4f       	sbci	r27, 0xFF	; 255
     9ac:	fe 01       	movw	r30, r28
     9ae:	eb 58       	subi	r30, 0x8B	; 139
     9b0:	ff 4f       	sbci	r31, 0xFF	; 255
     9b2:	80 81       	ld	r24, Z
     9b4:	91 81       	ldd	r25, Z+1	; 0x01
     9b6:	8d 93       	st	X+, r24
     9b8:	9c 93       	st	X, r25
     9ba:	fe 01       	movw	r30, r28
     9bc:	ef 58       	subi	r30, 0x8F	; 143
     9be:	ff 4f       	sbci	r31, 0xFF	; 255
     9c0:	80 81       	ld	r24, Z
     9c2:	91 81       	ldd	r25, Z+1	; 0x01
     9c4:	01 97       	sbiw	r24, 0x01	; 1
     9c6:	f1 f7       	brne	.-4      	; 0x9c4 <main+0x45a>
     9c8:	fe 01       	movw	r30, r28
     9ca:	ef 58       	subi	r30, 0x8F	; 143
     9cc:	ff 4f       	sbci	r31, 0xFF	; 255
     9ce:	91 83       	std	Z+1, r25	; 0x01
     9d0:	80 83       	st	Z, r24
    _delay_ms(200);
    LED(4);
     9d2:	84 e0       	ldi	r24, 0x04	; 4
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
     9da:	fe 01       	movw	r30, r28
     9dc:	e3 59       	subi	r30, 0x93	; 147
     9de:	ff 4f       	sbci	r31, 0xFF	; 255
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	a8 e4       	ldi	r26, 0x48	; 72
     9e6:	b3 e4       	ldi	r27, 0x43	; 67
     9e8:	80 83       	st	Z, r24
     9ea:	91 83       	std	Z+1, r25	; 0x01
     9ec:	a2 83       	std	Z+2, r26	; 0x02
     9ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     9f0:	8e 01       	movw	r16, r28
     9f2:	07 59       	subi	r16, 0x97	; 151
     9f4:	1f 4f       	sbci	r17, 0xFF	; 255
     9f6:	fe 01       	movw	r30, r28
     9f8:	e3 59       	subi	r30, 0x93	; 147
     9fa:	ff 4f       	sbci	r31, 0xFF	; 255
     9fc:	60 81       	ld	r22, Z
     9fe:	71 81       	ldd	r23, Z+1	; 0x01
     a00:	82 81       	ldd	r24, Z+2	; 0x02
     a02:	93 81       	ldd	r25, Z+3	; 0x03
     a04:	20 e0       	ldi	r18, 0x00	; 0
     a06:	30 e0       	ldi	r19, 0x00	; 0
     a08:	4a e7       	ldi	r20, 0x7A	; 122
     a0a:	55 e4       	ldi	r21, 0x45	; 69
     a0c:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     a10:	dc 01       	movw	r26, r24
     a12:	cb 01       	movw	r24, r22
     a14:	f8 01       	movw	r30, r16
     a16:	80 83       	st	Z, r24
     a18:	91 83       	std	Z+1, r25	; 0x01
     a1a:	a2 83       	std	Z+2, r26	; 0x02
     a1c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     a1e:	fe 01       	movw	r30, r28
     a20:	e7 59       	subi	r30, 0x97	; 151
     a22:	ff 4f       	sbci	r31, 0xFF	; 255
     a24:	60 81       	ld	r22, Z
     a26:	71 81       	ldd	r23, Z+1	; 0x01
     a28:	82 81       	ldd	r24, Z+2	; 0x02
     a2a:	93 81       	ldd	r25, Z+3	; 0x03
     a2c:	20 e0       	ldi	r18, 0x00	; 0
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	40 e8       	ldi	r20, 0x80	; 128
     a32:	5f e3       	ldi	r21, 0x3F	; 63
     a34:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
     a38:	88 23       	and	r24, r24
     a3a:	44 f4       	brge	.+16     	; 0xa4c <main+0x4e2>
		__ticks = 1;
     a3c:	fe 01       	movw	r30, r28
     a3e:	e9 59       	subi	r30, 0x99	; 153
     a40:	ff 4f       	sbci	r31, 0xFF	; 255
     a42:	81 e0       	ldi	r24, 0x01	; 1
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	91 83       	std	Z+1, r25	; 0x01
     a48:	80 83       	st	Z, r24
     a4a:	64 c0       	rjmp	.+200    	; 0xb14 <main+0x5aa>
	else if (__tmp > 65535)
     a4c:	fe 01       	movw	r30, r28
     a4e:	e7 59       	subi	r30, 0x97	; 151
     a50:	ff 4f       	sbci	r31, 0xFF	; 255
     a52:	60 81       	ld	r22, Z
     a54:	71 81       	ldd	r23, Z+1	; 0x01
     a56:	82 81       	ldd	r24, Z+2	; 0x02
     a58:	93 81       	ldd	r25, Z+3	; 0x03
     a5a:	20 e0       	ldi	r18, 0x00	; 0
     a5c:	3f ef       	ldi	r19, 0xFF	; 255
     a5e:	4f e7       	ldi	r20, 0x7F	; 127
     a60:	57 e4       	ldi	r21, 0x47	; 71
     a62:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
     a66:	18 16       	cp	r1, r24
     a68:	0c f0       	brlt	.+2      	; 0xa6c <main+0x502>
     a6a:	43 c0       	rjmp	.+134    	; 0xaf2 <main+0x588>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a6c:	fe 01       	movw	r30, r28
     a6e:	e3 59       	subi	r30, 0x93	; 147
     a70:	ff 4f       	sbci	r31, 0xFF	; 255
     a72:	60 81       	ld	r22, Z
     a74:	71 81       	ldd	r23, Z+1	; 0x01
     a76:	82 81       	ldd	r24, Z+2	; 0x02
     a78:	93 81       	ldd	r25, Z+3	; 0x03
     a7a:	20 e0       	ldi	r18, 0x00	; 0
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	40 e2       	ldi	r20, 0x20	; 32
     a80:	51 e4       	ldi	r21, 0x41	; 65
     a82:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     a86:	dc 01       	movw	r26, r24
     a88:	cb 01       	movw	r24, r22
     a8a:	8e 01       	movw	r16, r28
     a8c:	09 59       	subi	r16, 0x99	; 153
     a8e:	1f 4f       	sbci	r17, 0xFF	; 255
     a90:	bc 01       	movw	r22, r24
     a92:	cd 01       	movw	r24, r26
     a94:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     a98:	dc 01       	movw	r26, r24
     a9a:	cb 01       	movw	r24, r22
     a9c:	f8 01       	movw	r30, r16
     a9e:	91 83       	std	Z+1, r25	; 0x01
     aa0:	80 83       	st	Z, r24
     aa2:	1f c0       	rjmp	.+62     	; 0xae2 <main+0x578>
     aa4:	fe 01       	movw	r30, r28
     aa6:	eb 59       	subi	r30, 0x9B	; 155
     aa8:	ff 4f       	sbci	r31, 0xFF	; 255
     aaa:	80 e9       	ldi	r24, 0x90	; 144
     aac:	91 e0       	ldi	r25, 0x01	; 1
     aae:	91 83       	std	Z+1, r25	; 0x01
     ab0:	80 83       	st	Z, r24
     ab2:	fe 01       	movw	r30, r28
     ab4:	eb 59       	subi	r30, 0x9B	; 155
     ab6:	ff 4f       	sbci	r31, 0xFF	; 255
     ab8:	80 81       	ld	r24, Z
     aba:	91 81       	ldd	r25, Z+1	; 0x01
     abc:	01 97       	sbiw	r24, 0x01	; 1
     abe:	f1 f7       	brne	.-4      	; 0xabc <main+0x552>
     ac0:	fe 01       	movw	r30, r28
     ac2:	eb 59       	subi	r30, 0x9B	; 155
     ac4:	ff 4f       	sbci	r31, 0xFF	; 255
     ac6:	91 83       	std	Z+1, r25	; 0x01
     ac8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     aca:	de 01       	movw	r26, r28
     acc:	a9 59       	subi	r26, 0x99	; 153
     ace:	bf 4f       	sbci	r27, 0xFF	; 255
     ad0:	fe 01       	movw	r30, r28
     ad2:	e9 59       	subi	r30, 0x99	; 153
     ad4:	ff 4f       	sbci	r31, 0xFF	; 255
     ad6:	80 81       	ld	r24, Z
     ad8:	91 81       	ldd	r25, Z+1	; 0x01
     ada:	01 97       	sbiw	r24, 0x01	; 1
     adc:	11 96       	adiw	r26, 0x01	; 1
     ade:	9c 93       	st	X, r25
     ae0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ae2:	fe 01       	movw	r30, r28
     ae4:	e9 59       	subi	r30, 0x99	; 153
     ae6:	ff 4f       	sbci	r31, 0xFF	; 255
     ae8:	80 81       	ld	r24, Z
     aea:	91 81       	ldd	r25, Z+1	; 0x01
     aec:	00 97       	sbiw	r24, 0x00	; 0
     aee:	d1 f6       	brne	.-76     	; 0xaa4 <main+0x53a>
     af0:	27 c0       	rjmp	.+78     	; 0xb40 <main+0x5d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     af2:	8e 01       	movw	r16, r28
     af4:	09 59       	subi	r16, 0x99	; 153
     af6:	1f 4f       	sbci	r17, 0xFF	; 255
     af8:	fe 01       	movw	r30, r28
     afa:	e7 59       	subi	r30, 0x97	; 151
     afc:	ff 4f       	sbci	r31, 0xFF	; 255
     afe:	60 81       	ld	r22, Z
     b00:	71 81       	ldd	r23, Z+1	; 0x01
     b02:	82 81       	ldd	r24, Z+2	; 0x02
     b04:	93 81       	ldd	r25, Z+3	; 0x03
     b06:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     b0a:	dc 01       	movw	r26, r24
     b0c:	cb 01       	movw	r24, r22
     b0e:	f8 01       	movw	r30, r16
     b10:	91 83       	std	Z+1, r25	; 0x01
     b12:	80 83       	st	Z, r24
     b14:	de 01       	movw	r26, r28
     b16:	ad 59       	subi	r26, 0x9D	; 157
     b18:	bf 4f       	sbci	r27, 0xFF	; 255
     b1a:	fe 01       	movw	r30, r28
     b1c:	e9 59       	subi	r30, 0x99	; 153
     b1e:	ff 4f       	sbci	r31, 0xFF	; 255
     b20:	80 81       	ld	r24, Z
     b22:	91 81       	ldd	r25, Z+1	; 0x01
     b24:	8d 93       	st	X+, r24
     b26:	9c 93       	st	X, r25
     b28:	fe 01       	movw	r30, r28
     b2a:	ed 59       	subi	r30, 0x9D	; 157
     b2c:	ff 4f       	sbci	r31, 0xFF	; 255
     b2e:	80 81       	ld	r24, Z
     b30:	91 81       	ldd	r25, Z+1	; 0x01
     b32:	01 97       	sbiw	r24, 0x01	; 1
     b34:	f1 f7       	brne	.-4      	; 0xb32 <main+0x5c8>
     b36:	fe 01       	movw	r30, r28
     b38:	ed 59       	subi	r30, 0x9D	; 157
     b3a:	ff 4f       	sbci	r31, 0xFF	; 255
     b3c:	91 83       	std	Z+1, r25	; 0x01
     b3e:	80 83       	st	Z, r24
    _delay_ms(200);
        LED(1);
     b40:	81 e0       	ldi	r24, 0x01	; 1
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
     b48:	fe 01       	movw	r30, r28
     b4a:	e1 5a       	subi	r30, 0xA1	; 161
     b4c:	ff 4f       	sbci	r31, 0xFF	; 255
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	a8 e4       	ldi	r26, 0x48	; 72
     b54:	b3 e4       	ldi	r27, 0x43	; 67
     b56:	80 83       	st	Z, r24
     b58:	91 83       	std	Z+1, r25	; 0x01
     b5a:	a2 83       	std	Z+2, r26	; 0x02
     b5c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b5e:	8e 01       	movw	r16, r28
     b60:	05 5a       	subi	r16, 0xA5	; 165
     b62:	1f 4f       	sbci	r17, 0xFF	; 255
     b64:	fe 01       	movw	r30, r28
     b66:	e1 5a       	subi	r30, 0xA1	; 161
     b68:	ff 4f       	sbci	r31, 0xFF	; 255
     b6a:	60 81       	ld	r22, Z
     b6c:	71 81       	ldd	r23, Z+1	; 0x01
     b6e:	82 81       	ldd	r24, Z+2	; 0x02
     b70:	93 81       	ldd	r25, Z+3	; 0x03
     b72:	20 e0       	ldi	r18, 0x00	; 0
     b74:	30 e0       	ldi	r19, 0x00	; 0
     b76:	4a e7       	ldi	r20, 0x7A	; 122
     b78:	55 e4       	ldi	r21, 0x45	; 69
     b7a:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     b7e:	dc 01       	movw	r26, r24
     b80:	cb 01       	movw	r24, r22
     b82:	f8 01       	movw	r30, r16
     b84:	80 83       	st	Z, r24
     b86:	91 83       	std	Z+1, r25	; 0x01
     b88:	a2 83       	std	Z+2, r26	; 0x02
     b8a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b8c:	fe 01       	movw	r30, r28
     b8e:	e5 5a       	subi	r30, 0xA5	; 165
     b90:	ff 4f       	sbci	r31, 0xFF	; 255
     b92:	60 81       	ld	r22, Z
     b94:	71 81       	ldd	r23, Z+1	; 0x01
     b96:	82 81       	ldd	r24, Z+2	; 0x02
     b98:	93 81       	ldd	r25, Z+3	; 0x03
     b9a:	20 e0       	ldi	r18, 0x00	; 0
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	40 e8       	ldi	r20, 0x80	; 128
     ba0:	5f e3       	ldi	r21, 0x3F	; 63
     ba2:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
     ba6:	88 23       	and	r24, r24
     ba8:	44 f4       	brge	.+16     	; 0xbba <main+0x650>
		__ticks = 1;
     baa:	fe 01       	movw	r30, r28
     bac:	e7 5a       	subi	r30, 0xA7	; 167
     bae:	ff 4f       	sbci	r31, 0xFF	; 255
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	91 83       	std	Z+1, r25	; 0x01
     bb6:	80 83       	st	Z, r24
     bb8:	64 c0       	rjmp	.+200    	; 0xc82 <main+0x718>
	else if (__tmp > 65535)
     bba:	fe 01       	movw	r30, r28
     bbc:	e5 5a       	subi	r30, 0xA5	; 165
     bbe:	ff 4f       	sbci	r31, 0xFF	; 255
     bc0:	60 81       	ld	r22, Z
     bc2:	71 81       	ldd	r23, Z+1	; 0x01
     bc4:	82 81       	ldd	r24, Z+2	; 0x02
     bc6:	93 81       	ldd	r25, Z+3	; 0x03
     bc8:	20 e0       	ldi	r18, 0x00	; 0
     bca:	3f ef       	ldi	r19, 0xFF	; 255
     bcc:	4f e7       	ldi	r20, 0x7F	; 127
     bce:	57 e4       	ldi	r21, 0x47	; 71
     bd0:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
     bd4:	18 16       	cp	r1, r24
     bd6:	0c f0       	brlt	.+2      	; 0xbda <main+0x670>
     bd8:	43 c0       	rjmp	.+134    	; 0xc60 <main+0x6f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bda:	fe 01       	movw	r30, r28
     bdc:	e1 5a       	subi	r30, 0xA1	; 161
     bde:	ff 4f       	sbci	r31, 0xFF	; 255
     be0:	60 81       	ld	r22, Z
     be2:	71 81       	ldd	r23, Z+1	; 0x01
     be4:	82 81       	ldd	r24, Z+2	; 0x02
     be6:	93 81       	ldd	r25, Z+3	; 0x03
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	40 e2       	ldi	r20, 0x20	; 32
     bee:	51 e4       	ldi	r21, 0x41	; 65
     bf0:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     bf4:	dc 01       	movw	r26, r24
     bf6:	cb 01       	movw	r24, r22
     bf8:	8e 01       	movw	r16, r28
     bfa:	07 5a       	subi	r16, 0xA7	; 167
     bfc:	1f 4f       	sbci	r17, 0xFF	; 255
     bfe:	bc 01       	movw	r22, r24
     c00:	cd 01       	movw	r24, r26
     c02:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     c06:	dc 01       	movw	r26, r24
     c08:	cb 01       	movw	r24, r22
     c0a:	f8 01       	movw	r30, r16
     c0c:	91 83       	std	Z+1, r25	; 0x01
     c0e:	80 83       	st	Z, r24
     c10:	1f c0       	rjmp	.+62     	; 0xc50 <main+0x6e6>
     c12:	fe 01       	movw	r30, r28
     c14:	e9 5a       	subi	r30, 0xA9	; 169
     c16:	ff 4f       	sbci	r31, 0xFF	; 255
     c18:	80 e9       	ldi	r24, 0x90	; 144
     c1a:	91 e0       	ldi	r25, 0x01	; 1
     c1c:	91 83       	std	Z+1, r25	; 0x01
     c1e:	80 83       	st	Z, r24
     c20:	fe 01       	movw	r30, r28
     c22:	e9 5a       	subi	r30, 0xA9	; 169
     c24:	ff 4f       	sbci	r31, 0xFF	; 255
     c26:	80 81       	ld	r24, Z
     c28:	91 81       	ldd	r25, Z+1	; 0x01
     c2a:	01 97       	sbiw	r24, 0x01	; 1
     c2c:	f1 f7       	brne	.-4      	; 0xc2a <main+0x6c0>
     c2e:	fe 01       	movw	r30, r28
     c30:	e9 5a       	subi	r30, 0xA9	; 169
     c32:	ff 4f       	sbci	r31, 0xFF	; 255
     c34:	91 83       	std	Z+1, r25	; 0x01
     c36:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c38:	de 01       	movw	r26, r28
     c3a:	a7 5a       	subi	r26, 0xA7	; 167
     c3c:	bf 4f       	sbci	r27, 0xFF	; 255
     c3e:	fe 01       	movw	r30, r28
     c40:	e7 5a       	subi	r30, 0xA7	; 167
     c42:	ff 4f       	sbci	r31, 0xFF	; 255
     c44:	80 81       	ld	r24, Z
     c46:	91 81       	ldd	r25, Z+1	; 0x01
     c48:	01 97       	sbiw	r24, 0x01	; 1
     c4a:	11 96       	adiw	r26, 0x01	; 1
     c4c:	9c 93       	st	X, r25
     c4e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c50:	fe 01       	movw	r30, r28
     c52:	e7 5a       	subi	r30, 0xA7	; 167
     c54:	ff 4f       	sbci	r31, 0xFF	; 255
     c56:	80 81       	ld	r24, Z
     c58:	91 81       	ldd	r25, Z+1	; 0x01
     c5a:	00 97       	sbiw	r24, 0x00	; 0
     c5c:	d1 f6       	brne	.-76     	; 0xc12 <main+0x6a8>
     c5e:	27 c0       	rjmp	.+78     	; 0xcae <main+0x744>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c60:	8e 01       	movw	r16, r28
     c62:	07 5a       	subi	r16, 0xA7	; 167
     c64:	1f 4f       	sbci	r17, 0xFF	; 255
     c66:	fe 01       	movw	r30, r28
     c68:	e5 5a       	subi	r30, 0xA5	; 165
     c6a:	ff 4f       	sbci	r31, 0xFF	; 255
     c6c:	60 81       	ld	r22, Z
     c6e:	71 81       	ldd	r23, Z+1	; 0x01
     c70:	82 81       	ldd	r24, Z+2	; 0x02
     c72:	93 81       	ldd	r25, Z+3	; 0x03
     c74:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     c78:	dc 01       	movw	r26, r24
     c7a:	cb 01       	movw	r24, r22
     c7c:	f8 01       	movw	r30, r16
     c7e:	91 83       	std	Z+1, r25	; 0x01
     c80:	80 83       	st	Z, r24
     c82:	de 01       	movw	r26, r28
     c84:	ab 5a       	subi	r26, 0xAB	; 171
     c86:	bf 4f       	sbci	r27, 0xFF	; 255
     c88:	fe 01       	movw	r30, r28
     c8a:	e7 5a       	subi	r30, 0xA7	; 167
     c8c:	ff 4f       	sbci	r31, 0xFF	; 255
     c8e:	80 81       	ld	r24, Z
     c90:	91 81       	ldd	r25, Z+1	; 0x01
     c92:	8d 93       	st	X+, r24
     c94:	9c 93       	st	X, r25
     c96:	fe 01       	movw	r30, r28
     c98:	eb 5a       	subi	r30, 0xAB	; 171
     c9a:	ff 4f       	sbci	r31, 0xFF	; 255
     c9c:	80 81       	ld	r24, Z
     c9e:	91 81       	ldd	r25, Z+1	; 0x01
     ca0:	01 97       	sbiw	r24, 0x01	; 1
     ca2:	f1 f7       	brne	.-4      	; 0xca0 <main+0x736>
     ca4:	fe 01       	movw	r30, r28
     ca6:	eb 5a       	subi	r30, 0xAB	; 171
     ca8:	ff 4f       	sbci	r31, 0xFF	; 255
     caa:	91 83       	std	Z+1, r25	; 0x01
     cac:	80 83       	st	Z, r24
    _delay_ms(200);
    LED(3);
     cae:	83 e0       	ldi	r24, 0x03	; 3
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
     cb6:	fe 01       	movw	r30, r28
     cb8:	ef 5a       	subi	r30, 0xAF	; 175
     cba:	ff 4f       	sbci	r31, 0xFF	; 255
     cbc:	80 e0       	ldi	r24, 0x00	; 0
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	a8 e4       	ldi	r26, 0x48	; 72
     cc2:	b3 e4       	ldi	r27, 0x43	; 67
     cc4:	80 83       	st	Z, r24
     cc6:	91 83       	std	Z+1, r25	; 0x01
     cc8:	a2 83       	std	Z+2, r26	; 0x02
     cca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ccc:	8e 01       	movw	r16, r28
     cce:	03 5b       	subi	r16, 0xB3	; 179
     cd0:	1f 4f       	sbci	r17, 0xFF	; 255
     cd2:	fe 01       	movw	r30, r28
     cd4:	ef 5a       	subi	r30, 0xAF	; 175
     cd6:	ff 4f       	sbci	r31, 0xFF	; 255
     cd8:	60 81       	ld	r22, Z
     cda:	71 81       	ldd	r23, Z+1	; 0x01
     cdc:	82 81       	ldd	r24, Z+2	; 0x02
     cde:	93 81       	ldd	r25, Z+3	; 0x03
     ce0:	20 e0       	ldi	r18, 0x00	; 0
     ce2:	30 e0       	ldi	r19, 0x00	; 0
     ce4:	4a e7       	ldi	r20, 0x7A	; 122
     ce6:	55 e4       	ldi	r21, 0x45	; 69
     ce8:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     cec:	dc 01       	movw	r26, r24
     cee:	cb 01       	movw	r24, r22
     cf0:	f8 01       	movw	r30, r16
     cf2:	80 83       	st	Z, r24
     cf4:	91 83       	std	Z+1, r25	; 0x01
     cf6:	a2 83       	std	Z+2, r26	; 0x02
     cf8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     cfa:	fe 01       	movw	r30, r28
     cfc:	e3 5b       	subi	r30, 0xB3	; 179
     cfe:	ff 4f       	sbci	r31, 0xFF	; 255
     d00:	60 81       	ld	r22, Z
     d02:	71 81       	ldd	r23, Z+1	; 0x01
     d04:	82 81       	ldd	r24, Z+2	; 0x02
     d06:	93 81       	ldd	r25, Z+3	; 0x03
     d08:	20 e0       	ldi	r18, 0x00	; 0
     d0a:	30 e0       	ldi	r19, 0x00	; 0
     d0c:	40 e8       	ldi	r20, 0x80	; 128
     d0e:	5f e3       	ldi	r21, 0x3F	; 63
     d10:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
     d14:	88 23       	and	r24, r24
     d16:	44 f4       	brge	.+16     	; 0xd28 <main+0x7be>
		__ticks = 1;
     d18:	fe 01       	movw	r30, r28
     d1a:	e5 5b       	subi	r30, 0xB5	; 181
     d1c:	ff 4f       	sbci	r31, 0xFF	; 255
     d1e:	81 e0       	ldi	r24, 0x01	; 1
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	91 83       	std	Z+1, r25	; 0x01
     d24:	80 83       	st	Z, r24
     d26:	64 c0       	rjmp	.+200    	; 0xdf0 <main+0x886>
	else if (__tmp > 65535)
     d28:	fe 01       	movw	r30, r28
     d2a:	e3 5b       	subi	r30, 0xB3	; 179
     d2c:	ff 4f       	sbci	r31, 0xFF	; 255
     d2e:	60 81       	ld	r22, Z
     d30:	71 81       	ldd	r23, Z+1	; 0x01
     d32:	82 81       	ldd	r24, Z+2	; 0x02
     d34:	93 81       	ldd	r25, Z+3	; 0x03
     d36:	20 e0       	ldi	r18, 0x00	; 0
     d38:	3f ef       	ldi	r19, 0xFF	; 255
     d3a:	4f e7       	ldi	r20, 0x7F	; 127
     d3c:	57 e4       	ldi	r21, 0x47	; 71
     d3e:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
     d42:	18 16       	cp	r1, r24
     d44:	0c f0       	brlt	.+2      	; 0xd48 <main+0x7de>
     d46:	43 c0       	rjmp	.+134    	; 0xdce <main+0x864>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d48:	fe 01       	movw	r30, r28
     d4a:	ef 5a       	subi	r30, 0xAF	; 175
     d4c:	ff 4f       	sbci	r31, 0xFF	; 255
     d4e:	60 81       	ld	r22, Z
     d50:	71 81       	ldd	r23, Z+1	; 0x01
     d52:	82 81       	ldd	r24, Z+2	; 0x02
     d54:	93 81       	ldd	r25, Z+3	; 0x03
     d56:	20 e0       	ldi	r18, 0x00	; 0
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	40 e2       	ldi	r20, 0x20	; 32
     d5c:	51 e4       	ldi	r21, 0x41	; 65
     d5e:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     d62:	dc 01       	movw	r26, r24
     d64:	cb 01       	movw	r24, r22
     d66:	8e 01       	movw	r16, r28
     d68:	05 5b       	subi	r16, 0xB5	; 181
     d6a:	1f 4f       	sbci	r17, 0xFF	; 255
     d6c:	bc 01       	movw	r22, r24
     d6e:	cd 01       	movw	r24, r26
     d70:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     d74:	dc 01       	movw	r26, r24
     d76:	cb 01       	movw	r24, r22
     d78:	f8 01       	movw	r30, r16
     d7a:	91 83       	std	Z+1, r25	; 0x01
     d7c:	80 83       	st	Z, r24
     d7e:	1f c0       	rjmp	.+62     	; 0xdbe <main+0x854>
     d80:	fe 01       	movw	r30, r28
     d82:	e7 5b       	subi	r30, 0xB7	; 183
     d84:	ff 4f       	sbci	r31, 0xFF	; 255
     d86:	80 e9       	ldi	r24, 0x90	; 144
     d88:	91 e0       	ldi	r25, 0x01	; 1
     d8a:	91 83       	std	Z+1, r25	; 0x01
     d8c:	80 83       	st	Z, r24
     d8e:	fe 01       	movw	r30, r28
     d90:	e7 5b       	subi	r30, 0xB7	; 183
     d92:	ff 4f       	sbci	r31, 0xFF	; 255
     d94:	80 81       	ld	r24, Z
     d96:	91 81       	ldd	r25, Z+1	; 0x01
     d98:	01 97       	sbiw	r24, 0x01	; 1
     d9a:	f1 f7       	brne	.-4      	; 0xd98 <main+0x82e>
     d9c:	fe 01       	movw	r30, r28
     d9e:	e7 5b       	subi	r30, 0xB7	; 183
     da0:	ff 4f       	sbci	r31, 0xFF	; 255
     da2:	91 83       	std	Z+1, r25	; 0x01
     da4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     da6:	de 01       	movw	r26, r28
     da8:	a5 5b       	subi	r26, 0xB5	; 181
     daa:	bf 4f       	sbci	r27, 0xFF	; 255
     dac:	fe 01       	movw	r30, r28
     dae:	e5 5b       	subi	r30, 0xB5	; 181
     db0:	ff 4f       	sbci	r31, 0xFF	; 255
     db2:	80 81       	ld	r24, Z
     db4:	91 81       	ldd	r25, Z+1	; 0x01
     db6:	01 97       	sbiw	r24, 0x01	; 1
     db8:	11 96       	adiw	r26, 0x01	; 1
     dba:	9c 93       	st	X, r25
     dbc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dbe:	fe 01       	movw	r30, r28
     dc0:	e5 5b       	subi	r30, 0xB5	; 181
     dc2:	ff 4f       	sbci	r31, 0xFF	; 255
     dc4:	80 81       	ld	r24, Z
     dc6:	91 81       	ldd	r25, Z+1	; 0x01
     dc8:	00 97       	sbiw	r24, 0x00	; 0
     dca:	d1 f6       	brne	.-76     	; 0xd80 <main+0x816>
     dcc:	27 c0       	rjmp	.+78     	; 0xe1c <main+0x8b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dce:	8e 01       	movw	r16, r28
     dd0:	05 5b       	subi	r16, 0xB5	; 181
     dd2:	1f 4f       	sbci	r17, 0xFF	; 255
     dd4:	fe 01       	movw	r30, r28
     dd6:	e3 5b       	subi	r30, 0xB3	; 179
     dd8:	ff 4f       	sbci	r31, 0xFF	; 255
     dda:	60 81       	ld	r22, Z
     ddc:	71 81       	ldd	r23, Z+1	; 0x01
     dde:	82 81       	ldd	r24, Z+2	; 0x02
     de0:	93 81       	ldd	r25, Z+3	; 0x03
     de2:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     de6:	dc 01       	movw	r26, r24
     de8:	cb 01       	movw	r24, r22
     dea:	f8 01       	movw	r30, r16
     dec:	91 83       	std	Z+1, r25	; 0x01
     dee:	80 83       	st	Z, r24
     df0:	de 01       	movw	r26, r28
     df2:	a9 5b       	subi	r26, 0xB9	; 185
     df4:	bf 4f       	sbci	r27, 0xFF	; 255
     df6:	fe 01       	movw	r30, r28
     df8:	e5 5b       	subi	r30, 0xB5	; 181
     dfa:	ff 4f       	sbci	r31, 0xFF	; 255
     dfc:	80 81       	ld	r24, Z
     dfe:	91 81       	ldd	r25, Z+1	; 0x01
     e00:	8d 93       	st	X+, r24
     e02:	9c 93       	st	X, r25
     e04:	fe 01       	movw	r30, r28
     e06:	e9 5b       	subi	r30, 0xB9	; 185
     e08:	ff 4f       	sbci	r31, 0xFF	; 255
     e0a:	80 81       	ld	r24, Z
     e0c:	91 81       	ldd	r25, Z+1	; 0x01
     e0e:	01 97       	sbiw	r24, 0x01	; 1
     e10:	f1 f7       	brne	.-4      	; 0xe0e <main+0x8a4>
     e12:	fe 01       	movw	r30, r28
     e14:	e9 5b       	subi	r30, 0xB9	; 185
     e16:	ff 4f       	sbci	r31, 0xFF	; 255
     e18:	91 83       	std	Z+1, r25	; 0x01
     e1a:	80 83       	st	Z, r24
    _delay_ms(200);
    LED(2);
     e1c:	82 e0       	ldi	r24, 0x02	; 2
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
     e24:	fe 01       	movw	r30, r28
     e26:	ed 5b       	subi	r30, 0xBD	; 189
     e28:	ff 4f       	sbci	r31, 0xFF	; 255
     e2a:	80 e0       	ldi	r24, 0x00	; 0
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	a8 e4       	ldi	r26, 0x48	; 72
     e30:	b3 e4       	ldi	r27, 0x43	; 67
     e32:	80 83       	st	Z, r24
     e34:	91 83       	std	Z+1, r25	; 0x01
     e36:	a2 83       	std	Z+2, r26	; 0x02
     e38:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e3a:	8e 01       	movw	r16, r28
     e3c:	01 5c       	subi	r16, 0xC1	; 193
     e3e:	1f 4f       	sbci	r17, 0xFF	; 255
     e40:	fe 01       	movw	r30, r28
     e42:	ed 5b       	subi	r30, 0xBD	; 189
     e44:	ff 4f       	sbci	r31, 0xFF	; 255
     e46:	60 81       	ld	r22, Z
     e48:	71 81       	ldd	r23, Z+1	; 0x01
     e4a:	82 81       	ldd	r24, Z+2	; 0x02
     e4c:	93 81       	ldd	r25, Z+3	; 0x03
     e4e:	20 e0       	ldi	r18, 0x00	; 0
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	4a e7       	ldi	r20, 0x7A	; 122
     e54:	55 e4       	ldi	r21, 0x45	; 69
     e56:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     e5a:	dc 01       	movw	r26, r24
     e5c:	cb 01       	movw	r24, r22
     e5e:	f8 01       	movw	r30, r16
     e60:	80 83       	st	Z, r24
     e62:	91 83       	std	Z+1, r25	; 0x01
     e64:	a2 83       	std	Z+2, r26	; 0x02
     e66:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e68:	fe 01       	movw	r30, r28
     e6a:	ff 96       	adiw	r30, 0x3f	; 63
     e6c:	60 81       	ld	r22, Z
     e6e:	71 81       	ldd	r23, Z+1	; 0x01
     e70:	82 81       	ldd	r24, Z+2	; 0x02
     e72:	93 81       	ldd	r25, Z+3	; 0x03
     e74:	20 e0       	ldi	r18, 0x00	; 0
     e76:	30 e0       	ldi	r19, 0x00	; 0
     e78:	40 e8       	ldi	r20, 0x80	; 128
     e7a:	5f e3       	ldi	r21, 0x3F	; 63
     e7c:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
     e80:	88 23       	and	r24, r24
     e82:	2c f4       	brge	.+10     	; 0xe8e <main+0x924>
		__ticks = 1;
     e84:	81 e0       	ldi	r24, 0x01	; 1
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	9e af       	std	Y+62, r25	; 0x3e
     e8a:	8d af       	std	Y+61, r24	; 0x3d
     e8c:	46 c0       	rjmp	.+140    	; 0xf1a <main+0x9b0>
	else if (__tmp > 65535)
     e8e:	fe 01       	movw	r30, r28
     e90:	ff 96       	adiw	r30, 0x3f	; 63
     e92:	60 81       	ld	r22, Z
     e94:	71 81       	ldd	r23, Z+1	; 0x01
     e96:	82 81       	ldd	r24, Z+2	; 0x02
     e98:	93 81       	ldd	r25, Z+3	; 0x03
     e9a:	20 e0       	ldi	r18, 0x00	; 0
     e9c:	3f ef       	ldi	r19, 0xFF	; 255
     e9e:	4f e7       	ldi	r20, 0x7F	; 127
     ea0:	57 e4       	ldi	r21, 0x47	; 71
     ea2:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
     ea6:	18 16       	cp	r1, r24
     ea8:	64 f5       	brge	.+88     	; 0xf02 <main+0x998>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     eaa:	fe 01       	movw	r30, r28
     eac:	ed 5b       	subi	r30, 0xBD	; 189
     eae:	ff 4f       	sbci	r31, 0xFF	; 255
     eb0:	60 81       	ld	r22, Z
     eb2:	71 81       	ldd	r23, Z+1	; 0x01
     eb4:	82 81       	ldd	r24, Z+2	; 0x02
     eb6:	93 81       	ldd	r25, Z+3	; 0x03
     eb8:	20 e0       	ldi	r18, 0x00	; 0
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	40 e2       	ldi	r20, 0x20	; 32
     ebe:	51 e4       	ldi	r21, 0x41	; 65
     ec0:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     ec4:	dc 01       	movw	r26, r24
     ec6:	cb 01       	movw	r24, r22
     ec8:	bc 01       	movw	r22, r24
     eca:	cd 01       	movw	r24, r26
     ecc:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     ed0:	dc 01       	movw	r26, r24
     ed2:	cb 01       	movw	r24, r22
     ed4:	9e af       	std	Y+62, r25	; 0x3e
     ed6:	8d af       	std	Y+61, r24	; 0x3d
     ed8:	0f c0       	rjmp	.+30     	; 0xef8 <main+0x98e>
     eda:	80 e9       	ldi	r24, 0x90	; 144
     edc:	91 e0       	ldi	r25, 0x01	; 1
     ede:	9c af       	std	Y+60, r25	; 0x3c
     ee0:	8b af       	std	Y+59, r24	; 0x3b
     ee2:	8b ad       	ldd	r24, Y+59	; 0x3b
     ee4:	9c ad       	ldd	r25, Y+60	; 0x3c
     ee6:	01 97       	sbiw	r24, 0x01	; 1
     ee8:	f1 f7       	brne	.-4      	; 0xee6 <main+0x97c>
     eea:	9c af       	std	Y+60, r25	; 0x3c
     eec:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     eee:	8d ad       	ldd	r24, Y+61	; 0x3d
     ef0:	9e ad       	ldd	r25, Y+62	; 0x3e
     ef2:	01 97       	sbiw	r24, 0x01	; 1
     ef4:	9e af       	std	Y+62, r25	; 0x3e
     ef6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ef8:	8d ad       	ldd	r24, Y+61	; 0x3d
     efa:	9e ad       	ldd	r25, Y+62	; 0x3e
     efc:	00 97       	sbiw	r24, 0x00	; 0
     efe:	69 f7       	brne	.-38     	; 0xeda <main+0x970>
     f00:	16 c0       	rjmp	.+44     	; 0xf2e <main+0x9c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f02:	fe 01       	movw	r30, r28
     f04:	ff 96       	adiw	r30, 0x3f	; 63
     f06:	60 81       	ld	r22, Z
     f08:	71 81       	ldd	r23, Z+1	; 0x01
     f0a:	82 81       	ldd	r24, Z+2	; 0x02
     f0c:	93 81       	ldd	r25, Z+3	; 0x03
     f0e:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     f12:	dc 01       	movw	r26, r24
     f14:	cb 01       	movw	r24, r22
     f16:	9e af       	std	Y+62, r25	; 0x3e
     f18:	8d af       	std	Y+61, r24	; 0x3d
     f1a:	8d ad       	ldd	r24, Y+61	; 0x3d
     f1c:	9e ad       	ldd	r25, Y+62	; 0x3e
     f1e:	9a af       	std	Y+58, r25	; 0x3a
     f20:	89 af       	std	Y+57, r24	; 0x39
     f22:	89 ad       	ldd	r24, Y+57	; 0x39
     f24:	9a ad       	ldd	r25, Y+58	; 0x3a
     f26:	01 97       	sbiw	r24, 0x01	; 1
     f28:	f1 f7       	brne	.-4      	; 0xf26 <main+0x9bc>
     f2a:	9a af       	std	Y+58, r25	; 0x3a
     f2c:	89 af       	std	Y+57, r24	; 0x39
    _delay_ms(200);
    LED(4);
     f2e:	84 e0       	ldi	r24, 0x04	; 4
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
     f36:	80 e0       	ldi	r24, 0x00	; 0
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	a8 e4       	ldi	r26, 0x48	; 72
     f3c:	b3 e4       	ldi	r27, 0x43	; 67
     f3e:	8d ab       	std	Y+53, r24	; 0x35
     f40:	9e ab       	std	Y+54, r25	; 0x36
     f42:	af ab       	std	Y+55, r26	; 0x37
     f44:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f46:	6d a9       	ldd	r22, Y+53	; 0x35
     f48:	7e a9       	ldd	r23, Y+54	; 0x36
     f4a:	8f a9       	ldd	r24, Y+55	; 0x37
     f4c:	98 ad       	ldd	r25, Y+56	; 0x38
     f4e:	20 e0       	ldi	r18, 0x00	; 0
     f50:	30 e0       	ldi	r19, 0x00	; 0
     f52:	4a e7       	ldi	r20, 0x7A	; 122
     f54:	55 e4       	ldi	r21, 0x45	; 69
     f56:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     f5a:	dc 01       	movw	r26, r24
     f5c:	cb 01       	movw	r24, r22
     f5e:	89 ab       	std	Y+49, r24	; 0x31
     f60:	9a ab       	std	Y+50, r25	; 0x32
     f62:	ab ab       	std	Y+51, r26	; 0x33
     f64:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     f66:	69 a9       	ldd	r22, Y+49	; 0x31
     f68:	7a a9       	ldd	r23, Y+50	; 0x32
     f6a:	8b a9       	ldd	r24, Y+51	; 0x33
     f6c:	9c a9       	ldd	r25, Y+52	; 0x34
     f6e:	20 e0       	ldi	r18, 0x00	; 0
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	40 e8       	ldi	r20, 0x80	; 128
     f74:	5f e3       	ldi	r21, 0x3F	; 63
     f76:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
     f7a:	88 23       	and	r24, r24
     f7c:	2c f4       	brge	.+10     	; 0xf88 <main+0xa1e>
		__ticks = 1;
     f7e:	81 e0       	ldi	r24, 0x01	; 1
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	98 ab       	std	Y+48, r25	; 0x30
     f84:	8f a7       	std	Y+47, r24	; 0x2f
     f86:	3f c0       	rjmp	.+126    	; 0x1006 <main+0xa9c>
	else if (__tmp > 65535)
     f88:	69 a9       	ldd	r22, Y+49	; 0x31
     f8a:	7a a9       	ldd	r23, Y+50	; 0x32
     f8c:	8b a9       	ldd	r24, Y+51	; 0x33
     f8e:	9c a9       	ldd	r25, Y+52	; 0x34
     f90:	20 e0       	ldi	r18, 0x00	; 0
     f92:	3f ef       	ldi	r19, 0xFF	; 255
     f94:	4f e7       	ldi	r20, 0x7F	; 127
     f96:	57 e4       	ldi	r21, 0x47	; 71
     f98:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
     f9c:	18 16       	cp	r1, r24
     f9e:	4c f5       	brge	.+82     	; 0xff2 <main+0xa88>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fa0:	6d a9       	ldd	r22, Y+53	; 0x35
     fa2:	7e a9       	ldd	r23, Y+54	; 0x36
     fa4:	8f a9       	ldd	r24, Y+55	; 0x37
     fa6:	98 ad       	ldd	r25, Y+56	; 0x38
     fa8:	20 e0       	ldi	r18, 0x00	; 0
     faa:	30 e0       	ldi	r19, 0x00	; 0
     fac:	40 e2       	ldi	r20, 0x20	; 32
     fae:	51 e4       	ldi	r21, 0x41	; 65
     fb0:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
     fb4:	dc 01       	movw	r26, r24
     fb6:	cb 01       	movw	r24, r22
     fb8:	bc 01       	movw	r22, r24
     fba:	cd 01       	movw	r24, r26
     fbc:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     fc0:	dc 01       	movw	r26, r24
     fc2:	cb 01       	movw	r24, r22
     fc4:	98 ab       	std	Y+48, r25	; 0x30
     fc6:	8f a7       	std	Y+47, r24	; 0x2f
     fc8:	0f c0       	rjmp	.+30     	; 0xfe8 <main+0xa7e>
     fca:	80 e9       	ldi	r24, 0x90	; 144
     fcc:	91 e0       	ldi	r25, 0x01	; 1
     fce:	9e a7       	std	Y+46, r25	; 0x2e
     fd0:	8d a7       	std	Y+45, r24	; 0x2d
     fd2:	8d a5       	ldd	r24, Y+45	; 0x2d
     fd4:	9e a5       	ldd	r25, Y+46	; 0x2e
     fd6:	01 97       	sbiw	r24, 0x01	; 1
     fd8:	f1 f7       	brne	.-4      	; 0xfd6 <main+0xa6c>
     fda:	9e a7       	std	Y+46, r25	; 0x2e
     fdc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fde:	8f a5       	ldd	r24, Y+47	; 0x2f
     fe0:	98 a9       	ldd	r25, Y+48	; 0x30
     fe2:	01 97       	sbiw	r24, 0x01	; 1
     fe4:	98 ab       	std	Y+48, r25	; 0x30
     fe6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fe8:	8f a5       	ldd	r24, Y+47	; 0x2f
     fea:	98 a9       	ldd	r25, Y+48	; 0x30
     fec:	00 97       	sbiw	r24, 0x00	; 0
     fee:	69 f7       	brne	.-38     	; 0xfca <main+0xa60>
     ff0:	14 c0       	rjmp	.+40     	; 0x101a <main+0xab0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ff2:	69 a9       	ldd	r22, Y+49	; 0x31
     ff4:	7a a9       	ldd	r23, Y+50	; 0x32
     ff6:	8b a9       	ldd	r24, Y+51	; 0x33
     ff8:	9c a9       	ldd	r25, Y+52	; 0x34
     ffa:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
     ffe:	dc 01       	movw	r26, r24
    1000:	cb 01       	movw	r24, r22
    1002:	98 ab       	std	Y+48, r25	; 0x30
    1004:	8f a7       	std	Y+47, r24	; 0x2f
    1006:	8f a5       	ldd	r24, Y+47	; 0x2f
    1008:	98 a9       	ldd	r25, Y+48	; 0x30
    100a:	9c a7       	std	Y+44, r25	; 0x2c
    100c:	8b a7       	std	Y+43, r24	; 0x2b
    100e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1010:	9c a5       	ldd	r25, Y+44	; 0x2c
    1012:	01 97       	sbiw	r24, 0x01	; 1
    1014:	f1 f7       	brne	.-4      	; 0x1012 <main+0xaa8>
    1016:	9c a7       	std	Y+44, r25	; 0x2c
    1018:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(200);
        LED(1);
    101a:	81 e0       	ldi	r24, 0x01	; 1
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
    1022:	80 e0       	ldi	r24, 0x00	; 0
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	a8 e4       	ldi	r26, 0x48	; 72
    1028:	b3 e4       	ldi	r27, 0x43	; 67
    102a:	8f a3       	std	Y+39, r24	; 0x27
    102c:	98 a7       	std	Y+40, r25	; 0x28
    102e:	a9 a7       	std	Y+41, r26	; 0x29
    1030:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1032:	6f a1       	ldd	r22, Y+39	; 0x27
    1034:	78 a5       	ldd	r23, Y+40	; 0x28
    1036:	89 a5       	ldd	r24, Y+41	; 0x29
    1038:	9a a5       	ldd	r25, Y+42	; 0x2a
    103a:	20 e0       	ldi	r18, 0x00	; 0
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	4a e7       	ldi	r20, 0x7A	; 122
    1040:	55 e4       	ldi	r21, 0x45	; 69
    1042:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    1046:	dc 01       	movw	r26, r24
    1048:	cb 01       	movw	r24, r22
    104a:	8b a3       	std	Y+35, r24	; 0x23
    104c:	9c a3       	std	Y+36, r25	; 0x24
    104e:	ad a3       	std	Y+37, r26	; 0x25
    1050:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1052:	6b a1       	ldd	r22, Y+35	; 0x23
    1054:	7c a1       	ldd	r23, Y+36	; 0x24
    1056:	8d a1       	ldd	r24, Y+37	; 0x25
    1058:	9e a1       	ldd	r25, Y+38	; 0x26
    105a:	20 e0       	ldi	r18, 0x00	; 0
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	40 e8       	ldi	r20, 0x80	; 128
    1060:	5f e3       	ldi	r21, 0x3F	; 63
    1062:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
    1066:	88 23       	and	r24, r24
    1068:	2c f4       	brge	.+10     	; 0x1074 <main+0xb0a>
		__ticks = 1;
    106a:	81 e0       	ldi	r24, 0x01	; 1
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	9a a3       	std	Y+34, r25	; 0x22
    1070:	89 a3       	std	Y+33, r24	; 0x21
    1072:	3f c0       	rjmp	.+126    	; 0x10f2 <main+0xb88>
	else if (__tmp > 65535)
    1074:	6b a1       	ldd	r22, Y+35	; 0x23
    1076:	7c a1       	ldd	r23, Y+36	; 0x24
    1078:	8d a1       	ldd	r24, Y+37	; 0x25
    107a:	9e a1       	ldd	r25, Y+38	; 0x26
    107c:	20 e0       	ldi	r18, 0x00	; 0
    107e:	3f ef       	ldi	r19, 0xFF	; 255
    1080:	4f e7       	ldi	r20, 0x7F	; 127
    1082:	57 e4       	ldi	r21, 0x47	; 71
    1084:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
    1088:	18 16       	cp	r1, r24
    108a:	4c f5       	brge	.+82     	; 0x10de <main+0xb74>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    108c:	6f a1       	ldd	r22, Y+39	; 0x27
    108e:	78 a5       	ldd	r23, Y+40	; 0x28
    1090:	89 a5       	ldd	r24, Y+41	; 0x29
    1092:	9a a5       	ldd	r25, Y+42	; 0x2a
    1094:	20 e0       	ldi	r18, 0x00	; 0
    1096:	30 e0       	ldi	r19, 0x00	; 0
    1098:	40 e2       	ldi	r20, 0x20	; 32
    109a:	51 e4       	ldi	r21, 0x41	; 65
    109c:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    10a0:	dc 01       	movw	r26, r24
    10a2:	cb 01       	movw	r24, r22
    10a4:	bc 01       	movw	r22, r24
    10a6:	cd 01       	movw	r24, r26
    10a8:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    10ac:	dc 01       	movw	r26, r24
    10ae:	cb 01       	movw	r24, r22
    10b0:	9a a3       	std	Y+34, r25	; 0x22
    10b2:	89 a3       	std	Y+33, r24	; 0x21
    10b4:	0f c0       	rjmp	.+30     	; 0x10d4 <main+0xb6a>
    10b6:	80 e9       	ldi	r24, 0x90	; 144
    10b8:	91 e0       	ldi	r25, 0x01	; 1
    10ba:	98 a3       	std	Y+32, r25	; 0x20
    10bc:	8f 8f       	std	Y+31, r24	; 0x1f
    10be:	8f 8d       	ldd	r24, Y+31	; 0x1f
    10c0:	98 a1       	ldd	r25, Y+32	; 0x20
    10c2:	01 97       	sbiw	r24, 0x01	; 1
    10c4:	f1 f7       	brne	.-4      	; 0x10c2 <main+0xb58>
    10c6:	98 a3       	std	Y+32, r25	; 0x20
    10c8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10ca:	89 a1       	ldd	r24, Y+33	; 0x21
    10cc:	9a a1       	ldd	r25, Y+34	; 0x22
    10ce:	01 97       	sbiw	r24, 0x01	; 1
    10d0:	9a a3       	std	Y+34, r25	; 0x22
    10d2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10d4:	89 a1       	ldd	r24, Y+33	; 0x21
    10d6:	9a a1       	ldd	r25, Y+34	; 0x22
    10d8:	00 97       	sbiw	r24, 0x00	; 0
    10da:	69 f7       	brne	.-38     	; 0x10b6 <main+0xb4c>
    10dc:	14 c0       	rjmp	.+40     	; 0x1106 <main+0xb9c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10de:	6b a1       	ldd	r22, Y+35	; 0x23
    10e0:	7c a1       	ldd	r23, Y+36	; 0x24
    10e2:	8d a1       	ldd	r24, Y+37	; 0x25
    10e4:	9e a1       	ldd	r25, Y+38	; 0x26
    10e6:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    10ea:	dc 01       	movw	r26, r24
    10ec:	cb 01       	movw	r24, r22
    10ee:	9a a3       	std	Y+34, r25	; 0x22
    10f0:	89 a3       	std	Y+33, r24	; 0x21
    10f2:	89 a1       	ldd	r24, Y+33	; 0x21
    10f4:	9a a1       	ldd	r25, Y+34	; 0x22
    10f6:	9e 8f       	std	Y+30, r25	; 0x1e
    10f8:	8d 8f       	std	Y+29, r24	; 0x1d
    10fa:	8d 8d       	ldd	r24, Y+29	; 0x1d
    10fc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    10fe:	01 97       	sbiw	r24, 0x01	; 1
    1100:	f1 f7       	brne	.-4      	; 0x10fe <main+0xb94>
    1102:	9e 8f       	std	Y+30, r25	; 0x1e
    1104:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(200);
    LED(3);
    1106:	83 e0       	ldi	r24, 0x03	; 3
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
    110e:	80 e0       	ldi	r24, 0x00	; 0
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	a8 e4       	ldi	r26, 0x48	; 72
    1114:	b3 e4       	ldi	r27, 0x43	; 67
    1116:	89 8f       	std	Y+25, r24	; 0x19
    1118:	9a 8f       	std	Y+26, r25	; 0x1a
    111a:	ab 8f       	std	Y+27, r26	; 0x1b
    111c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    111e:	69 8d       	ldd	r22, Y+25	; 0x19
    1120:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1122:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1124:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1126:	20 e0       	ldi	r18, 0x00	; 0
    1128:	30 e0       	ldi	r19, 0x00	; 0
    112a:	4a e7       	ldi	r20, 0x7A	; 122
    112c:	55 e4       	ldi	r21, 0x45	; 69
    112e:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    1132:	dc 01       	movw	r26, r24
    1134:	cb 01       	movw	r24, r22
    1136:	8d 8b       	std	Y+21, r24	; 0x15
    1138:	9e 8b       	std	Y+22, r25	; 0x16
    113a:	af 8b       	std	Y+23, r26	; 0x17
    113c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    113e:	6d 89       	ldd	r22, Y+21	; 0x15
    1140:	7e 89       	ldd	r23, Y+22	; 0x16
    1142:	8f 89       	ldd	r24, Y+23	; 0x17
    1144:	98 8d       	ldd	r25, Y+24	; 0x18
    1146:	20 e0       	ldi	r18, 0x00	; 0
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	40 e8       	ldi	r20, 0x80	; 128
    114c:	5f e3       	ldi	r21, 0x3F	; 63
    114e:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
    1152:	88 23       	and	r24, r24
    1154:	2c f4       	brge	.+10     	; 0x1160 <main+0xbf6>
		__ticks = 1;
    1156:	81 e0       	ldi	r24, 0x01	; 1
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	9c 8b       	std	Y+20, r25	; 0x14
    115c:	8b 8b       	std	Y+19, r24	; 0x13
    115e:	3f c0       	rjmp	.+126    	; 0x11de <main+0xc74>
	else if (__tmp > 65535)
    1160:	6d 89       	ldd	r22, Y+21	; 0x15
    1162:	7e 89       	ldd	r23, Y+22	; 0x16
    1164:	8f 89       	ldd	r24, Y+23	; 0x17
    1166:	98 8d       	ldd	r25, Y+24	; 0x18
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	3f ef       	ldi	r19, 0xFF	; 255
    116c:	4f e7       	ldi	r20, 0x7F	; 127
    116e:	57 e4       	ldi	r21, 0x47	; 71
    1170:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
    1174:	18 16       	cp	r1, r24
    1176:	4c f5       	brge	.+82     	; 0x11ca <main+0xc60>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1178:	69 8d       	ldd	r22, Y+25	; 0x19
    117a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    117c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    117e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	40 e2       	ldi	r20, 0x20	; 32
    1186:	51 e4       	ldi	r21, 0x41	; 65
    1188:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    118c:	dc 01       	movw	r26, r24
    118e:	cb 01       	movw	r24, r22
    1190:	bc 01       	movw	r22, r24
    1192:	cd 01       	movw	r24, r26
    1194:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    1198:	dc 01       	movw	r26, r24
    119a:	cb 01       	movw	r24, r22
    119c:	9c 8b       	std	Y+20, r25	; 0x14
    119e:	8b 8b       	std	Y+19, r24	; 0x13
    11a0:	0f c0       	rjmp	.+30     	; 0x11c0 <main+0xc56>
    11a2:	80 e9       	ldi	r24, 0x90	; 144
    11a4:	91 e0       	ldi	r25, 0x01	; 1
    11a6:	9a 8b       	std	Y+18, r25	; 0x12
    11a8:	89 8b       	std	Y+17, r24	; 0x11
    11aa:	89 89       	ldd	r24, Y+17	; 0x11
    11ac:	9a 89       	ldd	r25, Y+18	; 0x12
    11ae:	01 97       	sbiw	r24, 0x01	; 1
    11b0:	f1 f7       	brne	.-4      	; 0x11ae <main+0xc44>
    11b2:	9a 8b       	std	Y+18, r25	; 0x12
    11b4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11b6:	8b 89       	ldd	r24, Y+19	; 0x13
    11b8:	9c 89       	ldd	r25, Y+20	; 0x14
    11ba:	01 97       	sbiw	r24, 0x01	; 1
    11bc:	9c 8b       	std	Y+20, r25	; 0x14
    11be:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11c0:	8b 89       	ldd	r24, Y+19	; 0x13
    11c2:	9c 89       	ldd	r25, Y+20	; 0x14
    11c4:	00 97       	sbiw	r24, 0x00	; 0
    11c6:	69 f7       	brne	.-38     	; 0x11a2 <main+0xc38>
    11c8:	14 c0       	rjmp	.+40     	; 0x11f2 <main+0xc88>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11ca:	6d 89       	ldd	r22, Y+21	; 0x15
    11cc:	7e 89       	ldd	r23, Y+22	; 0x16
    11ce:	8f 89       	ldd	r24, Y+23	; 0x17
    11d0:	98 8d       	ldd	r25, Y+24	; 0x18
    11d2:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	9c 8b       	std	Y+20, r25	; 0x14
    11dc:	8b 8b       	std	Y+19, r24	; 0x13
    11de:	8b 89       	ldd	r24, Y+19	; 0x13
    11e0:	9c 89       	ldd	r25, Y+20	; 0x14
    11e2:	98 8b       	std	Y+16, r25	; 0x10
    11e4:	8f 87       	std	Y+15, r24	; 0x0f
    11e6:	8f 85       	ldd	r24, Y+15	; 0x0f
    11e8:	98 89       	ldd	r25, Y+16	; 0x10
    11ea:	01 97       	sbiw	r24, 0x01	; 1
    11ec:	f1 f7       	brne	.-4      	; 0x11ea <main+0xc80>
    11ee:	98 8b       	std	Y+16, r25	; 0x10
    11f0:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(200);
    LED(2);
    11f2:	82 e0       	ldi	r24, 0x02	; 2
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
    11fa:	80 e0       	ldi	r24, 0x00	; 0
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	a8 e4       	ldi	r26, 0x48	; 72
    1200:	b3 e4       	ldi	r27, 0x43	; 67
    1202:	8b 87       	std	Y+11, r24	; 0x0b
    1204:	9c 87       	std	Y+12, r25	; 0x0c
    1206:	ad 87       	std	Y+13, r26	; 0x0d
    1208:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    120a:	6b 85       	ldd	r22, Y+11	; 0x0b
    120c:	7c 85       	ldd	r23, Y+12	; 0x0c
    120e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1210:	9e 85       	ldd	r25, Y+14	; 0x0e
    1212:	20 e0       	ldi	r18, 0x00	; 0
    1214:	30 e0       	ldi	r19, 0x00	; 0
    1216:	4a e7       	ldi	r20, 0x7A	; 122
    1218:	55 e4       	ldi	r21, 0x45	; 69
    121a:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    121e:	dc 01       	movw	r26, r24
    1220:	cb 01       	movw	r24, r22
    1222:	8f 83       	std	Y+7, r24	; 0x07
    1224:	98 87       	std	Y+8, r25	; 0x08
    1226:	a9 87       	std	Y+9, r26	; 0x09
    1228:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    122a:	6f 81       	ldd	r22, Y+7	; 0x07
    122c:	78 85       	ldd	r23, Y+8	; 0x08
    122e:	89 85       	ldd	r24, Y+9	; 0x09
    1230:	9a 85       	ldd	r25, Y+10	; 0x0a
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	40 e8       	ldi	r20, 0x80	; 128
    1238:	5f e3       	ldi	r21, 0x3F	; 63
    123a:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
    123e:	88 23       	and	r24, r24
    1240:	2c f4       	brge	.+10     	; 0x124c <main+0xce2>
		__ticks = 1;
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	9e 83       	std	Y+6, r25	; 0x06
    1248:	8d 83       	std	Y+5, r24	; 0x05
    124a:	3f c0       	rjmp	.+126    	; 0x12ca <main+0xd60>
	else if (__tmp > 65535)
    124c:	6f 81       	ldd	r22, Y+7	; 0x07
    124e:	78 85       	ldd	r23, Y+8	; 0x08
    1250:	89 85       	ldd	r24, Y+9	; 0x09
    1252:	9a 85       	ldd	r25, Y+10	; 0x0a
    1254:	20 e0       	ldi	r18, 0x00	; 0
    1256:	3f ef       	ldi	r19, 0xFF	; 255
    1258:	4f e7       	ldi	r20, 0x7F	; 127
    125a:	57 e4       	ldi	r21, 0x47	; 71
    125c:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
    1260:	18 16       	cp	r1, r24
    1262:	4c f5       	brge	.+82     	; 0x12b6 <main+0xd4c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1264:	6b 85       	ldd	r22, Y+11	; 0x0b
    1266:	7c 85       	ldd	r23, Y+12	; 0x0c
    1268:	8d 85       	ldd	r24, Y+13	; 0x0d
    126a:	9e 85       	ldd	r25, Y+14	; 0x0e
    126c:	20 e0       	ldi	r18, 0x00	; 0
    126e:	30 e0       	ldi	r19, 0x00	; 0
    1270:	40 e2       	ldi	r20, 0x20	; 32
    1272:	51 e4       	ldi	r21, 0x41	; 65
    1274:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    1278:	dc 01       	movw	r26, r24
    127a:	cb 01       	movw	r24, r22
    127c:	bc 01       	movw	r22, r24
    127e:	cd 01       	movw	r24, r26
    1280:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    1284:	dc 01       	movw	r26, r24
    1286:	cb 01       	movw	r24, r22
    1288:	9e 83       	std	Y+6, r25	; 0x06
    128a:	8d 83       	std	Y+5, r24	; 0x05
    128c:	0f c0       	rjmp	.+30     	; 0x12ac <main+0xd42>
    128e:	80 e9       	ldi	r24, 0x90	; 144
    1290:	91 e0       	ldi	r25, 0x01	; 1
    1292:	9c 83       	std	Y+4, r25	; 0x04
    1294:	8b 83       	std	Y+3, r24	; 0x03
    1296:	8b 81       	ldd	r24, Y+3	; 0x03
    1298:	9c 81       	ldd	r25, Y+4	; 0x04
    129a:	01 97       	sbiw	r24, 0x01	; 1
    129c:	f1 f7       	brne	.-4      	; 0x129a <main+0xd30>
    129e:	9c 83       	std	Y+4, r25	; 0x04
    12a0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12a2:	8d 81       	ldd	r24, Y+5	; 0x05
    12a4:	9e 81       	ldd	r25, Y+6	; 0x06
    12a6:	01 97       	sbiw	r24, 0x01	; 1
    12a8:	9e 83       	std	Y+6, r25	; 0x06
    12aa:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12ac:	8d 81       	ldd	r24, Y+5	; 0x05
    12ae:	9e 81       	ldd	r25, Y+6	; 0x06
    12b0:	00 97       	sbiw	r24, 0x00	; 0
    12b2:	69 f7       	brne	.-38     	; 0x128e <main+0xd24>
    12b4:	14 c0       	rjmp	.+40     	; 0x12de <main+0xd74>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12b6:	6f 81       	ldd	r22, Y+7	; 0x07
    12b8:	78 85       	ldd	r23, Y+8	; 0x08
    12ba:	89 85       	ldd	r24, Y+9	; 0x09
    12bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    12be:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    12c2:	dc 01       	movw	r26, r24
    12c4:	cb 01       	movw	r24, r22
    12c6:	9e 83       	std	Y+6, r25	; 0x06
    12c8:	8d 83       	std	Y+5, r24	; 0x05
    12ca:	8d 81       	ldd	r24, Y+5	; 0x05
    12cc:	9e 81       	ldd	r25, Y+6	; 0x06
    12ce:	9a 83       	std	Y+2, r25	; 0x02
    12d0:	89 83       	std	Y+1, r24	; 0x01
    12d2:	89 81       	ldd	r24, Y+1	; 0x01
    12d4:	9a 81       	ldd	r25, Y+2	; 0x02
    12d6:	01 97       	sbiw	r24, 0x01	; 1
    12d8:	f1 f7       	brne	.-4      	; 0x12d6 <main+0xd6c>
    12da:	9a 83       	std	Y+2, r25	; 0x02
    12dc:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(200);
    LED(4);
    12de:	84 e0       	ldi	r24, 0x04	; 4
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
    12e6:	08 c0       	rjmp	.+16     	; 0x12f8 <main+0xd8e>
     //   distanceUS1 = distance(ultra_1_trigger);
        //distanceUS2 = distance(ultra_2_trigger);

            while ((distance(ultra_1_trigger) < distance_dangerzone)== 0)     //Zolang US sensor geen boom ziet
            {
				LED(1);
    12e8:	81 e0       	ldi	r24, 0x01	; 1
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
                Vooruit(100);
    12f0:	84 e6       	ldi	r24, 0x64	; 100
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	0e 94 8f 14 	call	0x291e	; 0x291e <Vooruit>
    {
      //  double distanceUS2 = 0;
     //   distanceUS1 = distance(ultra_1_trigger);
        //distanceUS2 = distance(ultra_2_trigger);

            while ((distance(ultra_1_trigger) < distance_dangerzone)== 0)     //Zolang US sensor geen boom ziet
    12f8:	80 e0       	ldi	r24, 0x00	; 0
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	0e 94 47 15 	call	0x2a8e	; 0x2a8e <distance>
    1300:	84 31       	cpi	r24, 0x14	; 20
    1302:	91 05       	cpc	r25, r1
    1304:	8c f7       	brge	.-30     	; 0x12e8 <main+0xd7e>
            {
				LED(1);
                Vooruit(100);
				//distanceUS1 = distance(ultra_1_trigger);
            }
            LED(6);
    1306:	86 e0       	ldi	r24, 0x06	; 6
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	0e 94 95 00 	call	0x12a	; 0x12a <LED>
    130e:	f4 cf       	rjmp	.-24     	; 0x12f8 <main+0xd8e>

00001310 <init_steppermotor>:
#include <avr/io.h>
#include <util/delay.h>
#include "steppermotor.h"

void init_steppermotor(void)
{
    1310:	df 93       	push	r29
    1312:	cf 93       	push	r28
    1314:	cd b7       	in	r28, 0x3d	; 61
    1316:	de b7       	in	r29, 0x3e	; 62
    DDRStepper1 |= (1 << PStepper1_1); // PIN 30
    1318:	a7 e2       	ldi	r26, 0x27	; 39
    131a:	b0 e0       	ldi	r27, 0x00	; 0
    131c:	e7 e2       	ldi	r30, 0x27	; 39
    131e:	f0 e0       	ldi	r31, 0x00	; 0
    1320:	80 81       	ld	r24, Z
    1322:	80 68       	ori	r24, 0x80	; 128
    1324:	8c 93       	st	X, r24
    DDRStepper1 |= (1 << PStepper1_2); // PIN 32
    1326:	a7 e2       	ldi	r26, 0x27	; 39
    1328:	b0 e0       	ldi	r27, 0x00	; 0
    132a:	e7 e2       	ldi	r30, 0x27	; 39
    132c:	f0 e0       	ldi	r31, 0x00	; 0
    132e:	80 81       	ld	r24, Z
    1330:	80 62       	ori	r24, 0x20	; 32
    1332:	8c 93       	st	X, r24
    DDRStepper1 |= (1 << PStepper1_3); // PIN 34
    1334:	a7 e2       	ldi	r26, 0x27	; 39
    1336:	b0 e0       	ldi	r27, 0x00	; 0
    1338:	e7 e2       	ldi	r30, 0x27	; 39
    133a:	f0 e0       	ldi	r31, 0x00	; 0
    133c:	80 81       	ld	r24, Z
    133e:	88 60       	ori	r24, 0x08	; 8
    1340:	8c 93       	st	X, r24
    DDRStepper1 |= (1 << PStepper1_4); // PIN 36
    1342:	a7 e2       	ldi	r26, 0x27	; 39
    1344:	b0 e0       	ldi	r27, 0x00	; 0
    1346:	e7 e2       	ldi	r30, 0x27	; 39
    1348:	f0 e0       	ldi	r31, 0x00	; 0
    134a:	80 81       	ld	r24, Z
    134c:	82 60       	ori	r24, 0x02	; 2
    134e:	8c 93       	st	X, r24

    DDRStepper2 |= (1 << PStepper2_1); // PIN 31
    1350:	a7 e2       	ldi	r26, 0x27	; 39
    1352:	b0 e0       	ldi	r27, 0x00	; 0
    1354:	e7 e2       	ldi	r30, 0x27	; 39
    1356:	f0 e0       	ldi	r31, 0x00	; 0
    1358:	80 81       	ld	r24, Z
    135a:	80 64       	ori	r24, 0x40	; 64
    135c:	8c 93       	st	X, r24
    DDRStepper2 |= (1 << PStepper2_2); // PIN 33
    135e:	a7 e2       	ldi	r26, 0x27	; 39
    1360:	b0 e0       	ldi	r27, 0x00	; 0
    1362:	e7 e2       	ldi	r30, 0x27	; 39
    1364:	f0 e0       	ldi	r31, 0x00	; 0
    1366:	80 81       	ld	r24, Z
    1368:	80 61       	ori	r24, 0x10	; 16
    136a:	8c 93       	st	X, r24
    DDRStepper2 |= (1 << PStepper2_3); // PIN 35
    136c:	a7 e2       	ldi	r26, 0x27	; 39
    136e:	b0 e0       	ldi	r27, 0x00	; 0
    1370:	e7 e2       	ldi	r30, 0x27	; 39
    1372:	f0 e0       	ldi	r31, 0x00	; 0
    1374:	80 81       	ld	r24, Z
    1376:	84 60       	ori	r24, 0x04	; 4
    1378:	8c 93       	st	X, r24
    DDRStepper2 |= (1 << PStepper2_4); // PIN 37
    137a:	a7 e2       	ldi	r26, 0x27	; 39
    137c:	b0 e0       	ldi	r27, 0x00	; 0
    137e:	e7 e2       	ldi	r30, 0x27	; 39
    1380:	f0 e0       	ldi	r31, 0x00	; 0
    1382:	80 81       	ld	r24, Z
    1384:	81 60       	ori	r24, 0x01	; 1
    1386:	8c 93       	st	X, r24

    DDRStepper3 |= (1 << PStepper3_1); // PIN 42
    1388:	aa e0       	ldi	r26, 0x0A	; 10
    138a:	b1 e0       	ldi	r27, 0x01	; 1
    138c:	ea e0       	ldi	r30, 0x0A	; 10
    138e:	f1 e0       	ldi	r31, 0x01	; 1
    1390:	80 81       	ld	r24, Z
    1392:	80 68       	ori	r24, 0x80	; 128
    1394:	8c 93       	st	X, r24
    DDRStepper3 |= (1 << PStepper3_2); // PIN 44
    1396:	aa e0       	ldi	r26, 0x0A	; 10
    1398:	b1 e0       	ldi	r27, 0x01	; 1
    139a:	ea e0       	ldi	r30, 0x0A	; 10
    139c:	f1 e0       	ldi	r31, 0x01	; 1
    139e:	80 81       	ld	r24, Z
    13a0:	80 62       	ori	r24, 0x20	; 32
    13a2:	8c 93       	st	X, r24
    DDRStepper3 |= (1 << PStepper3_3); // PIN 46
    13a4:	aa e0       	ldi	r26, 0x0A	; 10
    13a6:	b1 e0       	ldi	r27, 0x01	; 1
    13a8:	ea e0       	ldi	r30, 0x0A	; 10
    13aa:	f1 e0       	ldi	r31, 0x01	; 1
    13ac:	80 81       	ld	r24, Z
    13ae:	88 60       	ori	r24, 0x08	; 8
    13b0:	8c 93       	st	X, r24
    DDRStepper3 |= (1 << PStepper3_4); // PIN 48
    13b2:	aa e0       	ldi	r26, 0x0A	; 10
    13b4:	b1 e0       	ldi	r27, 0x01	; 1
    13b6:	ea e0       	ldi	r30, 0x0A	; 10
    13b8:	f1 e0       	ldi	r31, 0x01	; 1
    13ba:	80 81       	ld	r24, Z
    13bc:	82 60       	ori	r24, 0x02	; 2
    13be:	8c 93       	st	X, r24

    DDRStepper3 |= (1 << PStepper3_1); // PIN 43
    13c0:	aa e0       	ldi	r26, 0x0A	; 10
    13c2:	b1 e0       	ldi	r27, 0x01	; 1
    13c4:	ea e0       	ldi	r30, 0x0A	; 10
    13c6:	f1 e0       	ldi	r31, 0x01	; 1
    13c8:	80 81       	ld	r24, Z
    13ca:	80 68       	ori	r24, 0x80	; 128
    13cc:	8c 93       	st	X, r24
    DDRStepper3 |= (1 << PStepper3_2); // PIN 45
    13ce:	aa e0       	ldi	r26, 0x0A	; 10
    13d0:	b1 e0       	ldi	r27, 0x01	; 1
    13d2:	ea e0       	ldi	r30, 0x0A	; 10
    13d4:	f1 e0       	ldi	r31, 0x01	; 1
    13d6:	80 81       	ld	r24, Z
    13d8:	80 62       	ori	r24, 0x20	; 32
    13da:	8c 93       	st	X, r24
    DDRStepper3 |= (1 << PStepper3_3); // PIN 47
    13dc:	aa e0       	ldi	r26, 0x0A	; 10
    13de:	b1 e0       	ldi	r27, 0x01	; 1
    13e0:	ea e0       	ldi	r30, 0x0A	; 10
    13e2:	f1 e0       	ldi	r31, 0x01	; 1
    13e4:	80 81       	ld	r24, Z
    13e6:	88 60       	ori	r24, 0x08	; 8
    13e8:	8c 93       	st	X, r24
    DDRStepper3 |= (1 << PStepper3_4); // PIN 49
    13ea:	aa e0       	ldi	r26, 0x0A	; 10
    13ec:	b1 e0       	ldi	r27, 0x01	; 1
    13ee:	ea e0       	ldi	r30, 0x0A	; 10
    13f0:	f1 e0       	ldi	r31, 0x01	; 1
    13f2:	80 81       	ld	r24, Z
    13f4:	82 60       	ori	r24, 0x02	; 2
    13f6:	8c 93       	st	X, r24
}
    13f8:	cf 91       	pop	r28
    13fa:	df 91       	pop	r29
    13fc:	08 95       	ret

000013fe <steppermotor1Write>:

void steppermotor1Write(int a)
{
    13fe:	df 93       	push	r29
    1400:	cf 93       	push	r28
    1402:	cd b7       	in	r28, 0x3d	; 61
    1404:	de b7       	in	r29, 0x3e	; 62
    1406:	2e 97       	sbiw	r28, 0x0e	; 14
    1408:	0f b6       	in	r0, 0x3f	; 63
    140a:	f8 94       	cli
    140c:	de bf       	out	0x3e, r29	; 62
    140e:	0f be       	out	0x3f, r0	; 63
    1410:	cd bf       	out	0x3d, r28	; 61
    1412:	9a 87       	std	Y+10, r25	; 0x0a
    1414:	89 87       	std	Y+9, r24	; 0x09
    1416:	41 c1       	rjmp	.+642    	; 0x169a <steppermotor1Write+0x29c>
    while(a  == 1)
    {
        int i;
        for(i = 1; i < 8; i=i+1)
    1418:	81 e0       	ldi	r24, 0x01	; 1
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	98 87       	std	Y+8, r25	; 0x08
    141e:	8f 83       	std	Y+7, r24	; 0x07
    1420:	34 c1       	rjmp	.+616    	; 0x168a <steppermotor1Write+0x28c>
        {
            switch (i)
    1422:	8f 81       	ldd	r24, Y+7	; 0x07
    1424:	98 85       	ldd	r25, Y+8	; 0x08
    1426:	9c 87       	std	Y+12, r25	; 0x0c
    1428:	8b 87       	std	Y+11, r24	; 0x0b
    142a:	8b 85       	ldd	r24, Y+11	; 0x0b
    142c:	9c 85       	ldd	r25, Y+12	; 0x0c
    142e:	84 30       	cpi	r24, 0x04	; 4
    1430:	91 05       	cpc	r25, r1
    1432:	09 f4       	brne	.+2      	; 0x1436 <steppermotor1Write+0x38>
    1434:	87 c0       	rjmp	.+270    	; 0x1544 <steppermotor1Write+0x146>
    1436:	8b 85       	ldd	r24, Y+11	; 0x0b
    1438:	9c 85       	ldd	r25, Y+12	; 0x0c
    143a:	85 30       	cpi	r24, 0x05	; 5
    143c:	91 05       	cpc	r25, r1
    143e:	94 f4       	brge	.+36     	; 0x1464 <steppermotor1Write+0x66>
    1440:	8b 85       	ldd	r24, Y+11	; 0x0b
    1442:	9c 85       	ldd	r25, Y+12	; 0x0c
    1444:	82 30       	cpi	r24, 0x02	; 2
    1446:	91 05       	cpc	r25, r1
    1448:	09 f4       	brne	.+2      	; 0x144c <steppermotor1Write+0x4e>
    144a:	42 c0       	rjmp	.+132    	; 0x14d0 <steppermotor1Write+0xd2>
    144c:	8b 85       	ldd	r24, Y+11	; 0x0b
    144e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1450:	83 30       	cpi	r24, 0x03	; 3
    1452:	91 05       	cpc	r25, r1
    1454:	0c f0       	brlt	.+2      	; 0x1458 <steppermotor1Write+0x5a>
    1456:	59 c0       	rjmp	.+178    	; 0x150a <steppermotor1Write+0x10c>
    1458:	8b 85       	ldd	r24, Y+11	; 0x0b
    145a:	9c 85       	ldd	r25, Y+12	; 0x0c
    145c:	81 30       	cpi	r24, 0x01	; 1
    145e:	91 05       	cpc	r25, r1
    1460:	d1 f0       	breq	.+52     	; 0x1496 <steppermotor1Write+0x98>
    1462:	00 c1       	rjmp	.+512    	; 0x1664 <steppermotor1Write+0x266>
    1464:	8b 85       	ldd	r24, Y+11	; 0x0b
    1466:	9c 85       	ldd	r25, Y+12	; 0x0c
    1468:	86 30       	cpi	r24, 0x06	; 6
    146a:	91 05       	cpc	r25, r1
    146c:	09 f4       	brne	.+2      	; 0x1470 <steppermotor1Write+0x72>
    146e:	a4 c0       	rjmp	.+328    	; 0x15b8 <steppermotor1Write+0x1ba>
    1470:	8b 85       	ldd	r24, Y+11	; 0x0b
    1472:	9c 85       	ldd	r25, Y+12	; 0x0c
    1474:	86 30       	cpi	r24, 0x06	; 6
    1476:	91 05       	cpc	r25, r1
    1478:	0c f4       	brge	.+2      	; 0x147c <steppermotor1Write+0x7e>
    147a:	81 c0       	rjmp	.+258    	; 0x157e <steppermotor1Write+0x180>
    147c:	8b 85       	ldd	r24, Y+11	; 0x0b
    147e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1480:	87 30       	cpi	r24, 0x07	; 7
    1482:	91 05       	cpc	r25, r1
    1484:	09 f4       	brne	.+2      	; 0x1488 <steppermotor1Write+0x8a>
    1486:	b5 c0       	rjmp	.+362    	; 0x15f2 <steppermotor1Write+0x1f4>
    1488:	8b 85       	ldd	r24, Y+11	; 0x0b
    148a:	9c 85       	ldd	r25, Y+12	; 0x0c
    148c:	88 30       	cpi	r24, 0x08	; 8
    148e:	91 05       	cpc	r25, r1
    1490:	09 f4       	brne	.+2      	; 0x1494 <steppermotor1Write+0x96>
    1492:	cc c0       	rjmp	.+408    	; 0x162c <steppermotor1Write+0x22e>
    1494:	e7 c0       	rjmp	.+462    	; 0x1664 <steppermotor1Write+0x266>
            {
            case 1 :
                PORTStepper1 |= (1 << PStepper1_1);
    1496:	a8 e2       	ldi	r26, 0x28	; 40
    1498:	b0 e0       	ldi	r27, 0x00	; 0
    149a:	e8 e2       	ldi	r30, 0x28	; 40
    149c:	f0 e0       	ldi	r31, 0x00	; 0
    149e:	80 81       	ld	r24, Z
    14a0:	80 68       	ori	r24, 0x80	; 128
    14a2:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_2);
    14a4:	a8 e2       	ldi	r26, 0x28	; 40
    14a6:	b0 e0       	ldi	r27, 0x00	; 0
    14a8:	e8 e2       	ldi	r30, 0x28	; 40
    14aa:	f0 e0       	ldi	r31, 0x00	; 0
    14ac:	80 81       	ld	r24, Z
    14ae:	8f 7d       	andi	r24, 0xDF	; 223
    14b0:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_3);
    14b2:	a8 e2       	ldi	r26, 0x28	; 40
    14b4:	b0 e0       	ldi	r27, 0x00	; 0
    14b6:	e8 e2       	ldi	r30, 0x28	; 40
    14b8:	f0 e0       	ldi	r31, 0x00	; 0
    14ba:	80 81       	ld	r24, Z
    14bc:	87 7f       	andi	r24, 0xF7	; 247
    14be:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_4);
    14c0:	a8 e2       	ldi	r26, 0x28	; 40
    14c2:	b0 e0       	ldi	r27, 0x00	; 0
    14c4:	e8 e2       	ldi	r30, 0x28	; 40
    14c6:	f0 e0       	ldi	r31, 0x00	; 0
    14c8:	80 81       	ld	r24, Z
    14ca:	8d 7f       	andi	r24, 0xFD	; 253
    14cc:	8c 93       	st	X, r24
    14ce:	ca c0       	rjmp	.+404    	; 0x1664 <steppermotor1Write+0x266>
                break;
            case 2 :
                PORTStepper1 |= (1 << PStepper1_1);
    14d0:	a8 e2       	ldi	r26, 0x28	; 40
    14d2:	b0 e0       	ldi	r27, 0x00	; 0
    14d4:	e8 e2       	ldi	r30, 0x28	; 40
    14d6:	f0 e0       	ldi	r31, 0x00	; 0
    14d8:	80 81       	ld	r24, Z
    14da:	80 68       	ori	r24, 0x80	; 128
    14dc:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_2);
    14de:	a8 e2       	ldi	r26, 0x28	; 40
    14e0:	b0 e0       	ldi	r27, 0x00	; 0
    14e2:	e8 e2       	ldi	r30, 0x28	; 40
    14e4:	f0 e0       	ldi	r31, 0x00	; 0
    14e6:	80 81       	ld	r24, Z
    14e8:	80 62       	ori	r24, 0x20	; 32
    14ea:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_3);
    14ec:	a8 e2       	ldi	r26, 0x28	; 40
    14ee:	b0 e0       	ldi	r27, 0x00	; 0
    14f0:	e8 e2       	ldi	r30, 0x28	; 40
    14f2:	f0 e0       	ldi	r31, 0x00	; 0
    14f4:	80 81       	ld	r24, Z
    14f6:	87 7f       	andi	r24, 0xF7	; 247
    14f8:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_4);
    14fa:	a8 e2       	ldi	r26, 0x28	; 40
    14fc:	b0 e0       	ldi	r27, 0x00	; 0
    14fe:	e8 e2       	ldi	r30, 0x28	; 40
    1500:	f0 e0       	ldi	r31, 0x00	; 0
    1502:	80 81       	ld	r24, Z
    1504:	8d 7f       	andi	r24, 0xFD	; 253
    1506:	8c 93       	st	X, r24
    1508:	ad c0       	rjmp	.+346    	; 0x1664 <steppermotor1Write+0x266>
                break;
            case 3 :
                PORTStepper1 &= ~(1 << PStepper1_1);
    150a:	a8 e2       	ldi	r26, 0x28	; 40
    150c:	b0 e0       	ldi	r27, 0x00	; 0
    150e:	e8 e2       	ldi	r30, 0x28	; 40
    1510:	f0 e0       	ldi	r31, 0x00	; 0
    1512:	80 81       	ld	r24, Z
    1514:	8f 77       	andi	r24, 0x7F	; 127
    1516:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_2);
    1518:	a8 e2       	ldi	r26, 0x28	; 40
    151a:	b0 e0       	ldi	r27, 0x00	; 0
    151c:	e8 e2       	ldi	r30, 0x28	; 40
    151e:	f0 e0       	ldi	r31, 0x00	; 0
    1520:	80 81       	ld	r24, Z
    1522:	80 62       	ori	r24, 0x20	; 32
    1524:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_3);
    1526:	a8 e2       	ldi	r26, 0x28	; 40
    1528:	b0 e0       	ldi	r27, 0x00	; 0
    152a:	e8 e2       	ldi	r30, 0x28	; 40
    152c:	f0 e0       	ldi	r31, 0x00	; 0
    152e:	80 81       	ld	r24, Z
    1530:	87 7f       	andi	r24, 0xF7	; 247
    1532:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_4);
    1534:	a8 e2       	ldi	r26, 0x28	; 40
    1536:	b0 e0       	ldi	r27, 0x00	; 0
    1538:	e8 e2       	ldi	r30, 0x28	; 40
    153a:	f0 e0       	ldi	r31, 0x00	; 0
    153c:	80 81       	ld	r24, Z
    153e:	8d 7f       	andi	r24, 0xFD	; 253
    1540:	8c 93       	st	X, r24
    1542:	90 c0       	rjmp	.+288    	; 0x1664 <steppermotor1Write+0x266>
                break;
            case 4 :
                PORTStepper1 &= ~(1 << PStepper1_1);
    1544:	a8 e2       	ldi	r26, 0x28	; 40
    1546:	b0 e0       	ldi	r27, 0x00	; 0
    1548:	e8 e2       	ldi	r30, 0x28	; 40
    154a:	f0 e0       	ldi	r31, 0x00	; 0
    154c:	80 81       	ld	r24, Z
    154e:	8f 77       	andi	r24, 0x7F	; 127
    1550:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_2);
    1552:	a8 e2       	ldi	r26, 0x28	; 40
    1554:	b0 e0       	ldi	r27, 0x00	; 0
    1556:	e8 e2       	ldi	r30, 0x28	; 40
    1558:	f0 e0       	ldi	r31, 0x00	; 0
    155a:	80 81       	ld	r24, Z
    155c:	80 62       	ori	r24, 0x20	; 32
    155e:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_3);
    1560:	a8 e2       	ldi	r26, 0x28	; 40
    1562:	b0 e0       	ldi	r27, 0x00	; 0
    1564:	e8 e2       	ldi	r30, 0x28	; 40
    1566:	f0 e0       	ldi	r31, 0x00	; 0
    1568:	80 81       	ld	r24, Z
    156a:	88 60       	ori	r24, 0x08	; 8
    156c:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_4);
    156e:	a8 e2       	ldi	r26, 0x28	; 40
    1570:	b0 e0       	ldi	r27, 0x00	; 0
    1572:	e8 e2       	ldi	r30, 0x28	; 40
    1574:	f0 e0       	ldi	r31, 0x00	; 0
    1576:	80 81       	ld	r24, Z
    1578:	8d 7f       	andi	r24, 0xFD	; 253
    157a:	8c 93       	st	X, r24
    157c:	73 c0       	rjmp	.+230    	; 0x1664 <steppermotor1Write+0x266>
                break;
            case 5 :
                PORTStepper1 &= ~(1 << PStepper1_1);
    157e:	a8 e2       	ldi	r26, 0x28	; 40
    1580:	b0 e0       	ldi	r27, 0x00	; 0
    1582:	e8 e2       	ldi	r30, 0x28	; 40
    1584:	f0 e0       	ldi	r31, 0x00	; 0
    1586:	80 81       	ld	r24, Z
    1588:	8f 77       	andi	r24, 0x7F	; 127
    158a:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_2);
    158c:	a8 e2       	ldi	r26, 0x28	; 40
    158e:	b0 e0       	ldi	r27, 0x00	; 0
    1590:	e8 e2       	ldi	r30, 0x28	; 40
    1592:	f0 e0       	ldi	r31, 0x00	; 0
    1594:	80 81       	ld	r24, Z
    1596:	8f 7d       	andi	r24, 0xDF	; 223
    1598:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_3);
    159a:	a8 e2       	ldi	r26, 0x28	; 40
    159c:	b0 e0       	ldi	r27, 0x00	; 0
    159e:	e8 e2       	ldi	r30, 0x28	; 40
    15a0:	f0 e0       	ldi	r31, 0x00	; 0
    15a2:	80 81       	ld	r24, Z
    15a4:	88 60       	ori	r24, 0x08	; 8
    15a6:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_4);
    15a8:	a8 e2       	ldi	r26, 0x28	; 40
    15aa:	b0 e0       	ldi	r27, 0x00	; 0
    15ac:	e8 e2       	ldi	r30, 0x28	; 40
    15ae:	f0 e0       	ldi	r31, 0x00	; 0
    15b0:	80 81       	ld	r24, Z
    15b2:	8d 7f       	andi	r24, 0xFD	; 253
    15b4:	8c 93       	st	X, r24
    15b6:	56 c0       	rjmp	.+172    	; 0x1664 <steppermotor1Write+0x266>
                break;
            case 6 :
                PORTStepper1 &= ~(1 << PStepper1_1);
    15b8:	a8 e2       	ldi	r26, 0x28	; 40
    15ba:	b0 e0       	ldi	r27, 0x00	; 0
    15bc:	e8 e2       	ldi	r30, 0x28	; 40
    15be:	f0 e0       	ldi	r31, 0x00	; 0
    15c0:	80 81       	ld	r24, Z
    15c2:	8f 77       	andi	r24, 0x7F	; 127
    15c4:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_2);
    15c6:	a8 e2       	ldi	r26, 0x28	; 40
    15c8:	b0 e0       	ldi	r27, 0x00	; 0
    15ca:	e8 e2       	ldi	r30, 0x28	; 40
    15cc:	f0 e0       	ldi	r31, 0x00	; 0
    15ce:	80 81       	ld	r24, Z
    15d0:	8f 7d       	andi	r24, 0xDF	; 223
    15d2:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_3);
    15d4:	a8 e2       	ldi	r26, 0x28	; 40
    15d6:	b0 e0       	ldi	r27, 0x00	; 0
    15d8:	e8 e2       	ldi	r30, 0x28	; 40
    15da:	f0 e0       	ldi	r31, 0x00	; 0
    15dc:	80 81       	ld	r24, Z
    15de:	88 60       	ori	r24, 0x08	; 8
    15e0:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_4);
    15e2:	a8 e2       	ldi	r26, 0x28	; 40
    15e4:	b0 e0       	ldi	r27, 0x00	; 0
    15e6:	e8 e2       	ldi	r30, 0x28	; 40
    15e8:	f0 e0       	ldi	r31, 0x00	; 0
    15ea:	80 81       	ld	r24, Z
    15ec:	82 60       	ori	r24, 0x02	; 2
    15ee:	8c 93       	st	X, r24
    15f0:	39 c0       	rjmp	.+114    	; 0x1664 <steppermotor1Write+0x266>
                break;
            case 7 :
                PORTStepper1 &= ~(1 << PStepper1_1);
    15f2:	a8 e2       	ldi	r26, 0x28	; 40
    15f4:	b0 e0       	ldi	r27, 0x00	; 0
    15f6:	e8 e2       	ldi	r30, 0x28	; 40
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	80 81       	ld	r24, Z
    15fc:	8f 77       	andi	r24, 0x7F	; 127
    15fe:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_2);
    1600:	a8 e2       	ldi	r26, 0x28	; 40
    1602:	b0 e0       	ldi	r27, 0x00	; 0
    1604:	e8 e2       	ldi	r30, 0x28	; 40
    1606:	f0 e0       	ldi	r31, 0x00	; 0
    1608:	80 81       	ld	r24, Z
    160a:	8f 7d       	andi	r24, 0xDF	; 223
    160c:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_3);
    160e:	a8 e2       	ldi	r26, 0x28	; 40
    1610:	b0 e0       	ldi	r27, 0x00	; 0
    1612:	e8 e2       	ldi	r30, 0x28	; 40
    1614:	f0 e0       	ldi	r31, 0x00	; 0
    1616:	80 81       	ld	r24, Z
    1618:	87 7f       	andi	r24, 0xF7	; 247
    161a:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_4);
    161c:	a8 e2       	ldi	r26, 0x28	; 40
    161e:	b0 e0       	ldi	r27, 0x00	; 0
    1620:	e8 e2       	ldi	r30, 0x28	; 40
    1622:	f0 e0       	ldi	r31, 0x00	; 0
    1624:	80 81       	ld	r24, Z
    1626:	82 60       	ori	r24, 0x02	; 2
    1628:	8c 93       	st	X, r24
    162a:	1c c0       	rjmp	.+56     	; 0x1664 <steppermotor1Write+0x266>
                break;
            case 8 :
                PORTStepper1 |= (1 << PStepper1_1);
    162c:	a8 e2       	ldi	r26, 0x28	; 40
    162e:	b0 e0       	ldi	r27, 0x00	; 0
    1630:	e8 e2       	ldi	r30, 0x28	; 40
    1632:	f0 e0       	ldi	r31, 0x00	; 0
    1634:	80 81       	ld	r24, Z
    1636:	80 68       	ori	r24, 0x80	; 128
    1638:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_2);
    163a:	a8 e2       	ldi	r26, 0x28	; 40
    163c:	b0 e0       	ldi	r27, 0x00	; 0
    163e:	e8 e2       	ldi	r30, 0x28	; 40
    1640:	f0 e0       	ldi	r31, 0x00	; 0
    1642:	80 81       	ld	r24, Z
    1644:	8f 7d       	andi	r24, 0xDF	; 223
    1646:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_3);
    1648:	a8 e2       	ldi	r26, 0x28	; 40
    164a:	b0 e0       	ldi	r27, 0x00	; 0
    164c:	e8 e2       	ldi	r30, 0x28	; 40
    164e:	f0 e0       	ldi	r31, 0x00	; 0
    1650:	80 81       	ld	r24, Z
    1652:	87 7f       	andi	r24, 0xF7	; 247
    1654:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_4);
    1656:	a8 e2       	ldi	r26, 0x28	; 40
    1658:	b0 e0       	ldi	r27, 0x00	; 0
    165a:	e8 e2       	ldi	r30, 0x28	; 40
    165c:	f0 e0       	ldi	r31, 0x00	; 0
    165e:	80 81       	ld	r24, Z
    1660:	82 60       	ori	r24, 0x02	; 2
    1662:	8c 93       	st	X, r24
                break;
            }
           // _delay_us(delaytime_stepper);
           for(int d = 0; d < delaytime_StepperForLoop;d++)
    1664:	1e 82       	std	Y+6, r1	; 0x06
    1666:	1d 82       	std	Y+5, r1	; 0x05
    1668:	05 c0       	rjmp	.+10     	; 0x1674 <steppermotor1Write+0x276>
    166a:	8d 81       	ldd	r24, Y+5	; 0x05
    166c:	9e 81       	ldd	r25, Y+6	; 0x06
    166e:	01 96       	adiw	r24, 0x01	; 1
    1670:	9e 83       	std	Y+6, r25	; 0x06
    1672:	8d 83       	std	Y+5, r24	; 0x05
    1674:	8d 81       	ldd	r24, Y+5	; 0x05
    1676:	9e 81       	ldd	r25, Y+6	; 0x06
    1678:	23 e0       	ldi	r18, 0x03	; 3
    167a:	84 38       	cpi	r24, 0x84	; 132
    167c:	92 07       	cpc	r25, r18
    167e:	ac f3       	brlt	.-22     	; 0x166a <steppermotor1Write+0x26c>
void steppermotor1Write(int a)
{
    while(a  == 1)
    {
        int i;
        for(i = 1; i < 8; i=i+1)
    1680:	8f 81       	ldd	r24, Y+7	; 0x07
    1682:	98 85       	ldd	r25, Y+8	; 0x08
    1684:	01 96       	adiw	r24, 0x01	; 1
    1686:	98 87       	std	Y+8, r25	; 0x08
    1688:	8f 83       	std	Y+7, r24	; 0x07
    168a:	8f 81       	ldd	r24, Y+7	; 0x07
    168c:	98 85       	ldd	r25, Y+8	; 0x08
    168e:	88 30       	cpi	r24, 0x08	; 8
    1690:	91 05       	cpc	r25, r1
    1692:	0c f4       	brge	.+2      	; 0x1696 <steppermotor1Write+0x298>
    1694:	c6 ce       	rjmp	.-628    	; 0x1422 <steppermotor1Write+0x24>
           for(int d = 0; d < delaytime_StepperForLoop;d++)
           {

           }
        }
        a = 0;
    1696:	1a 86       	std	Y+10, r1	; 0x0a
    1698:	19 86       	std	Y+9, r1	; 0x09
    DDRStepper3 |= (1 << PStepper3_4); // PIN 49
}

void steppermotor1Write(int a)
{
    while(a  == 1)
    169a:	89 85       	ldd	r24, Y+9	; 0x09
    169c:	9a 85       	ldd	r25, Y+10	; 0x0a
    169e:	81 30       	cpi	r24, 0x01	; 1
    16a0:	91 05       	cpc	r25, r1
    16a2:	09 f4       	brne	.+2      	; 0x16a6 <steppermotor1Write+0x2a8>
    16a4:	b9 ce       	rjmp	.-654    	; 0x1418 <steppermotor1Write+0x1a>
    16a6:	40 c1       	rjmp	.+640    	; 0x1928 <steppermotor1Write+0x52a>
        a = 0;
    }
    while(a  == 2)
    {
        int i;
        for(i = 8; i > 0; --i)
    16a8:	88 e0       	ldi	r24, 0x08	; 8
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	9c 83       	std	Y+4, r25	; 0x04
    16ae:	8b 83       	std	Y+3, r24	; 0x03
    16b0:	33 c1       	rjmp	.+614    	; 0x1918 <steppermotor1Write+0x51a>
        {
            switch (i)
    16b2:	8b 81       	ldd	r24, Y+3	; 0x03
    16b4:	9c 81       	ldd	r25, Y+4	; 0x04
    16b6:	9e 87       	std	Y+14, r25	; 0x0e
    16b8:	8d 87       	std	Y+13, r24	; 0x0d
    16ba:	8d 85       	ldd	r24, Y+13	; 0x0d
    16bc:	9e 85       	ldd	r25, Y+14	; 0x0e
    16be:	84 30       	cpi	r24, 0x04	; 4
    16c0:	91 05       	cpc	r25, r1
    16c2:	09 f4       	brne	.+2      	; 0x16c6 <steppermotor1Write+0x2c8>
    16c4:	a3 c0       	rjmp	.+326    	; 0x180c <steppermotor1Write+0x40e>
    16c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    16c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    16ca:	85 30       	cpi	r24, 0x05	; 5
    16cc:	91 05       	cpc	r25, r1
    16ce:	94 f4       	brge	.+36     	; 0x16f4 <steppermotor1Write+0x2f6>
    16d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    16d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    16d4:	82 30       	cpi	r24, 0x02	; 2
    16d6:	91 05       	cpc	r25, r1
    16d8:	09 f4       	brne	.+2      	; 0x16dc <steppermotor1Write+0x2de>
    16da:	5e c0       	rjmp	.+188    	; 0x1798 <steppermotor1Write+0x39a>
    16dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    16de:	9e 85       	ldd	r25, Y+14	; 0x0e
    16e0:	83 30       	cpi	r24, 0x03	; 3
    16e2:	91 05       	cpc	r25, r1
    16e4:	0c f0       	brlt	.+2      	; 0x16e8 <steppermotor1Write+0x2ea>
    16e6:	75 c0       	rjmp	.+234    	; 0x17d2 <steppermotor1Write+0x3d4>
    16e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    16ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    16ec:	81 30       	cpi	r24, 0x01	; 1
    16ee:	91 05       	cpc	r25, r1
    16f0:	b1 f1       	breq	.+108    	; 0x175e <steppermotor1Write+0x360>
    16f2:	ff c0       	rjmp	.+510    	; 0x18f2 <steppermotor1Write+0x4f4>
    16f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    16f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    16f8:	86 30       	cpi	r24, 0x06	; 6
    16fa:	91 05       	cpc	r25, r1
    16fc:	09 f4       	brne	.+2      	; 0x1700 <steppermotor1Write+0x302>
    16fe:	c0 c0       	rjmp	.+384    	; 0x1880 <steppermotor1Write+0x482>
    1700:	8d 85       	ldd	r24, Y+13	; 0x0d
    1702:	9e 85       	ldd	r25, Y+14	; 0x0e
    1704:	86 30       	cpi	r24, 0x06	; 6
    1706:	91 05       	cpc	r25, r1
    1708:	0c f4       	brge	.+2      	; 0x170c <steppermotor1Write+0x30e>
    170a:	9d c0       	rjmp	.+314    	; 0x1846 <steppermotor1Write+0x448>
    170c:	8d 85       	ldd	r24, Y+13	; 0x0d
    170e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1710:	87 30       	cpi	r24, 0x07	; 7
    1712:	91 05       	cpc	r25, r1
    1714:	09 f4       	brne	.+2      	; 0x1718 <steppermotor1Write+0x31a>
    1716:	d1 c0       	rjmp	.+418    	; 0x18ba <steppermotor1Write+0x4bc>
    1718:	8d 85       	ldd	r24, Y+13	; 0x0d
    171a:	9e 85       	ldd	r25, Y+14	; 0x0e
    171c:	88 30       	cpi	r24, 0x08	; 8
    171e:	91 05       	cpc	r25, r1
    1720:	09 f0       	breq	.+2      	; 0x1724 <steppermotor1Write+0x326>
    1722:	e7 c0       	rjmp	.+462    	; 0x18f2 <steppermotor1Write+0x4f4>
            {
            case 8 :
                PORTStepper1 |= (1 << PStepper1_1);
    1724:	a8 e2       	ldi	r26, 0x28	; 40
    1726:	b0 e0       	ldi	r27, 0x00	; 0
    1728:	e8 e2       	ldi	r30, 0x28	; 40
    172a:	f0 e0       	ldi	r31, 0x00	; 0
    172c:	80 81       	ld	r24, Z
    172e:	80 68       	ori	r24, 0x80	; 128
    1730:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_2);
    1732:	a8 e2       	ldi	r26, 0x28	; 40
    1734:	b0 e0       	ldi	r27, 0x00	; 0
    1736:	e8 e2       	ldi	r30, 0x28	; 40
    1738:	f0 e0       	ldi	r31, 0x00	; 0
    173a:	80 81       	ld	r24, Z
    173c:	8f 7d       	andi	r24, 0xDF	; 223
    173e:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_3);
    1740:	a8 e2       	ldi	r26, 0x28	; 40
    1742:	b0 e0       	ldi	r27, 0x00	; 0
    1744:	e8 e2       	ldi	r30, 0x28	; 40
    1746:	f0 e0       	ldi	r31, 0x00	; 0
    1748:	80 81       	ld	r24, Z
    174a:	87 7f       	andi	r24, 0xF7	; 247
    174c:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_4);
    174e:	a8 e2       	ldi	r26, 0x28	; 40
    1750:	b0 e0       	ldi	r27, 0x00	; 0
    1752:	e8 e2       	ldi	r30, 0x28	; 40
    1754:	f0 e0       	ldi	r31, 0x00	; 0
    1756:	80 81       	ld	r24, Z
    1758:	8d 7f       	andi	r24, 0xFD	; 253
    175a:	8c 93       	st	X, r24
    175c:	ca c0       	rjmp	.+404    	; 0x18f2 <steppermotor1Write+0x4f4>
                break;
            case 1 :
                PORTStepper1 |= (1 << PStepper1_1);
    175e:	a8 e2       	ldi	r26, 0x28	; 40
    1760:	b0 e0       	ldi	r27, 0x00	; 0
    1762:	e8 e2       	ldi	r30, 0x28	; 40
    1764:	f0 e0       	ldi	r31, 0x00	; 0
    1766:	80 81       	ld	r24, Z
    1768:	80 68       	ori	r24, 0x80	; 128
    176a:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_2);
    176c:	a8 e2       	ldi	r26, 0x28	; 40
    176e:	b0 e0       	ldi	r27, 0x00	; 0
    1770:	e8 e2       	ldi	r30, 0x28	; 40
    1772:	f0 e0       	ldi	r31, 0x00	; 0
    1774:	80 81       	ld	r24, Z
    1776:	80 62       	ori	r24, 0x20	; 32
    1778:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_3);
    177a:	a8 e2       	ldi	r26, 0x28	; 40
    177c:	b0 e0       	ldi	r27, 0x00	; 0
    177e:	e8 e2       	ldi	r30, 0x28	; 40
    1780:	f0 e0       	ldi	r31, 0x00	; 0
    1782:	80 81       	ld	r24, Z
    1784:	87 7f       	andi	r24, 0xF7	; 247
    1786:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_4);
    1788:	a8 e2       	ldi	r26, 0x28	; 40
    178a:	b0 e0       	ldi	r27, 0x00	; 0
    178c:	e8 e2       	ldi	r30, 0x28	; 40
    178e:	f0 e0       	ldi	r31, 0x00	; 0
    1790:	80 81       	ld	r24, Z
    1792:	8d 7f       	andi	r24, 0xFD	; 253
    1794:	8c 93       	st	X, r24
    1796:	ad c0       	rjmp	.+346    	; 0x18f2 <steppermotor1Write+0x4f4>
                break;
            case 2 :
                PORTStepper1 &= ~(1 << PStepper1_1);
    1798:	a8 e2       	ldi	r26, 0x28	; 40
    179a:	b0 e0       	ldi	r27, 0x00	; 0
    179c:	e8 e2       	ldi	r30, 0x28	; 40
    179e:	f0 e0       	ldi	r31, 0x00	; 0
    17a0:	80 81       	ld	r24, Z
    17a2:	8f 77       	andi	r24, 0x7F	; 127
    17a4:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_2);
    17a6:	a8 e2       	ldi	r26, 0x28	; 40
    17a8:	b0 e0       	ldi	r27, 0x00	; 0
    17aa:	e8 e2       	ldi	r30, 0x28	; 40
    17ac:	f0 e0       	ldi	r31, 0x00	; 0
    17ae:	80 81       	ld	r24, Z
    17b0:	80 62       	ori	r24, 0x20	; 32
    17b2:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_3);
    17b4:	a8 e2       	ldi	r26, 0x28	; 40
    17b6:	b0 e0       	ldi	r27, 0x00	; 0
    17b8:	e8 e2       	ldi	r30, 0x28	; 40
    17ba:	f0 e0       	ldi	r31, 0x00	; 0
    17bc:	80 81       	ld	r24, Z
    17be:	87 7f       	andi	r24, 0xF7	; 247
    17c0:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_4);
    17c2:	a8 e2       	ldi	r26, 0x28	; 40
    17c4:	b0 e0       	ldi	r27, 0x00	; 0
    17c6:	e8 e2       	ldi	r30, 0x28	; 40
    17c8:	f0 e0       	ldi	r31, 0x00	; 0
    17ca:	80 81       	ld	r24, Z
    17cc:	8d 7f       	andi	r24, 0xFD	; 253
    17ce:	8c 93       	st	X, r24
    17d0:	90 c0       	rjmp	.+288    	; 0x18f2 <steppermotor1Write+0x4f4>
                break;
            case 3 :
                PORTStepper1 &= ~(1 << PStepper1_1);
    17d2:	a8 e2       	ldi	r26, 0x28	; 40
    17d4:	b0 e0       	ldi	r27, 0x00	; 0
    17d6:	e8 e2       	ldi	r30, 0x28	; 40
    17d8:	f0 e0       	ldi	r31, 0x00	; 0
    17da:	80 81       	ld	r24, Z
    17dc:	8f 77       	andi	r24, 0x7F	; 127
    17de:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_2);
    17e0:	a8 e2       	ldi	r26, 0x28	; 40
    17e2:	b0 e0       	ldi	r27, 0x00	; 0
    17e4:	e8 e2       	ldi	r30, 0x28	; 40
    17e6:	f0 e0       	ldi	r31, 0x00	; 0
    17e8:	80 81       	ld	r24, Z
    17ea:	80 62       	ori	r24, 0x20	; 32
    17ec:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_3);
    17ee:	a8 e2       	ldi	r26, 0x28	; 40
    17f0:	b0 e0       	ldi	r27, 0x00	; 0
    17f2:	e8 e2       	ldi	r30, 0x28	; 40
    17f4:	f0 e0       	ldi	r31, 0x00	; 0
    17f6:	80 81       	ld	r24, Z
    17f8:	88 60       	ori	r24, 0x08	; 8
    17fa:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_4);
    17fc:	a8 e2       	ldi	r26, 0x28	; 40
    17fe:	b0 e0       	ldi	r27, 0x00	; 0
    1800:	e8 e2       	ldi	r30, 0x28	; 40
    1802:	f0 e0       	ldi	r31, 0x00	; 0
    1804:	80 81       	ld	r24, Z
    1806:	8d 7f       	andi	r24, 0xFD	; 253
    1808:	8c 93       	st	X, r24
    180a:	73 c0       	rjmp	.+230    	; 0x18f2 <steppermotor1Write+0x4f4>
                break;
            case 4 :
                PORTStepper1 &= ~(1 << PStepper1_1);
    180c:	a8 e2       	ldi	r26, 0x28	; 40
    180e:	b0 e0       	ldi	r27, 0x00	; 0
    1810:	e8 e2       	ldi	r30, 0x28	; 40
    1812:	f0 e0       	ldi	r31, 0x00	; 0
    1814:	80 81       	ld	r24, Z
    1816:	8f 77       	andi	r24, 0x7F	; 127
    1818:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_2);
    181a:	a8 e2       	ldi	r26, 0x28	; 40
    181c:	b0 e0       	ldi	r27, 0x00	; 0
    181e:	e8 e2       	ldi	r30, 0x28	; 40
    1820:	f0 e0       	ldi	r31, 0x00	; 0
    1822:	80 81       	ld	r24, Z
    1824:	8f 7d       	andi	r24, 0xDF	; 223
    1826:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_3);
    1828:	a8 e2       	ldi	r26, 0x28	; 40
    182a:	b0 e0       	ldi	r27, 0x00	; 0
    182c:	e8 e2       	ldi	r30, 0x28	; 40
    182e:	f0 e0       	ldi	r31, 0x00	; 0
    1830:	80 81       	ld	r24, Z
    1832:	88 60       	ori	r24, 0x08	; 8
    1834:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_4);
    1836:	a8 e2       	ldi	r26, 0x28	; 40
    1838:	b0 e0       	ldi	r27, 0x00	; 0
    183a:	e8 e2       	ldi	r30, 0x28	; 40
    183c:	f0 e0       	ldi	r31, 0x00	; 0
    183e:	80 81       	ld	r24, Z
    1840:	8d 7f       	andi	r24, 0xFD	; 253
    1842:	8c 93       	st	X, r24
    1844:	56 c0       	rjmp	.+172    	; 0x18f2 <steppermotor1Write+0x4f4>
                break;
            case 5 :
                PORTStepper1 &= ~(1 << PStepper1_1);
    1846:	a8 e2       	ldi	r26, 0x28	; 40
    1848:	b0 e0       	ldi	r27, 0x00	; 0
    184a:	e8 e2       	ldi	r30, 0x28	; 40
    184c:	f0 e0       	ldi	r31, 0x00	; 0
    184e:	80 81       	ld	r24, Z
    1850:	8f 77       	andi	r24, 0x7F	; 127
    1852:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_2);
    1854:	a8 e2       	ldi	r26, 0x28	; 40
    1856:	b0 e0       	ldi	r27, 0x00	; 0
    1858:	e8 e2       	ldi	r30, 0x28	; 40
    185a:	f0 e0       	ldi	r31, 0x00	; 0
    185c:	80 81       	ld	r24, Z
    185e:	8f 7d       	andi	r24, 0xDF	; 223
    1860:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_3);
    1862:	a8 e2       	ldi	r26, 0x28	; 40
    1864:	b0 e0       	ldi	r27, 0x00	; 0
    1866:	e8 e2       	ldi	r30, 0x28	; 40
    1868:	f0 e0       	ldi	r31, 0x00	; 0
    186a:	80 81       	ld	r24, Z
    186c:	88 60       	ori	r24, 0x08	; 8
    186e:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_4);
    1870:	a8 e2       	ldi	r26, 0x28	; 40
    1872:	b0 e0       	ldi	r27, 0x00	; 0
    1874:	e8 e2       	ldi	r30, 0x28	; 40
    1876:	f0 e0       	ldi	r31, 0x00	; 0
    1878:	80 81       	ld	r24, Z
    187a:	82 60       	ori	r24, 0x02	; 2
    187c:	8c 93       	st	X, r24
    187e:	39 c0       	rjmp	.+114    	; 0x18f2 <steppermotor1Write+0x4f4>
                break;
            case 6 :
                PORTStepper1 &= ~(1 << PStepper1_1);
    1880:	a8 e2       	ldi	r26, 0x28	; 40
    1882:	b0 e0       	ldi	r27, 0x00	; 0
    1884:	e8 e2       	ldi	r30, 0x28	; 40
    1886:	f0 e0       	ldi	r31, 0x00	; 0
    1888:	80 81       	ld	r24, Z
    188a:	8f 77       	andi	r24, 0x7F	; 127
    188c:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_2);
    188e:	a8 e2       	ldi	r26, 0x28	; 40
    1890:	b0 e0       	ldi	r27, 0x00	; 0
    1892:	e8 e2       	ldi	r30, 0x28	; 40
    1894:	f0 e0       	ldi	r31, 0x00	; 0
    1896:	80 81       	ld	r24, Z
    1898:	8f 7d       	andi	r24, 0xDF	; 223
    189a:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_3);
    189c:	a8 e2       	ldi	r26, 0x28	; 40
    189e:	b0 e0       	ldi	r27, 0x00	; 0
    18a0:	e8 e2       	ldi	r30, 0x28	; 40
    18a2:	f0 e0       	ldi	r31, 0x00	; 0
    18a4:	80 81       	ld	r24, Z
    18a6:	87 7f       	andi	r24, 0xF7	; 247
    18a8:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_4);
    18aa:	a8 e2       	ldi	r26, 0x28	; 40
    18ac:	b0 e0       	ldi	r27, 0x00	; 0
    18ae:	e8 e2       	ldi	r30, 0x28	; 40
    18b0:	f0 e0       	ldi	r31, 0x00	; 0
    18b2:	80 81       	ld	r24, Z
    18b4:	82 60       	ori	r24, 0x02	; 2
    18b6:	8c 93       	st	X, r24
    18b8:	1c c0       	rjmp	.+56     	; 0x18f2 <steppermotor1Write+0x4f4>
                break;
            case 7 :
                PORTStepper1 |= (1 << PStepper1_1);
    18ba:	a8 e2       	ldi	r26, 0x28	; 40
    18bc:	b0 e0       	ldi	r27, 0x00	; 0
    18be:	e8 e2       	ldi	r30, 0x28	; 40
    18c0:	f0 e0       	ldi	r31, 0x00	; 0
    18c2:	80 81       	ld	r24, Z
    18c4:	80 68       	ori	r24, 0x80	; 128
    18c6:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_2);
    18c8:	a8 e2       	ldi	r26, 0x28	; 40
    18ca:	b0 e0       	ldi	r27, 0x00	; 0
    18cc:	e8 e2       	ldi	r30, 0x28	; 40
    18ce:	f0 e0       	ldi	r31, 0x00	; 0
    18d0:	80 81       	ld	r24, Z
    18d2:	8f 7d       	andi	r24, 0xDF	; 223
    18d4:	8c 93       	st	X, r24
                PORTStepper1 &= ~(1 << PStepper1_3);
    18d6:	a8 e2       	ldi	r26, 0x28	; 40
    18d8:	b0 e0       	ldi	r27, 0x00	; 0
    18da:	e8 e2       	ldi	r30, 0x28	; 40
    18dc:	f0 e0       	ldi	r31, 0x00	; 0
    18de:	80 81       	ld	r24, Z
    18e0:	87 7f       	andi	r24, 0xF7	; 247
    18e2:	8c 93       	st	X, r24
                PORTStepper1 |= (1 << PStepper1_4);
    18e4:	a8 e2       	ldi	r26, 0x28	; 40
    18e6:	b0 e0       	ldi	r27, 0x00	; 0
    18e8:	e8 e2       	ldi	r30, 0x28	; 40
    18ea:	f0 e0       	ldi	r31, 0x00	; 0
    18ec:	80 81       	ld	r24, Z
    18ee:	82 60       	ori	r24, 0x02	; 2
    18f0:	8c 93       	st	X, r24
                break;
            }
           // _delay_us(delaytime_stepper);
           for(int d = 0; d < delaytime_StepperForLoop;d++)
    18f2:	1a 82       	std	Y+2, r1	; 0x02
    18f4:	19 82       	std	Y+1, r1	; 0x01
    18f6:	05 c0       	rjmp	.+10     	; 0x1902 <steppermotor1Write+0x504>
    18f8:	89 81       	ldd	r24, Y+1	; 0x01
    18fa:	9a 81       	ldd	r25, Y+2	; 0x02
    18fc:	01 96       	adiw	r24, 0x01	; 1
    18fe:	9a 83       	std	Y+2, r25	; 0x02
    1900:	89 83       	std	Y+1, r24	; 0x01
    1902:	89 81       	ldd	r24, Y+1	; 0x01
    1904:	9a 81       	ldd	r25, Y+2	; 0x02
    1906:	23 e0       	ldi	r18, 0x03	; 3
    1908:	84 38       	cpi	r24, 0x84	; 132
    190a:	92 07       	cpc	r25, r18
    190c:	ac f3       	brlt	.-22     	; 0x18f8 <steppermotor1Write+0x4fa>
        a = 0;
    }
    while(a  == 2)
    {
        int i;
        for(i = 8; i > 0; --i)
    190e:	8b 81       	ldd	r24, Y+3	; 0x03
    1910:	9c 81       	ldd	r25, Y+4	; 0x04
    1912:	01 97       	sbiw	r24, 0x01	; 1
    1914:	9c 83       	std	Y+4, r25	; 0x04
    1916:	8b 83       	std	Y+3, r24	; 0x03
    1918:	8b 81       	ldd	r24, Y+3	; 0x03
    191a:	9c 81       	ldd	r25, Y+4	; 0x04
    191c:	18 16       	cp	r1, r24
    191e:	19 06       	cpc	r1, r25
    1920:	0c f4       	brge	.+2      	; 0x1924 <steppermotor1Write+0x526>
    1922:	c7 ce       	rjmp	.-626    	; 0x16b2 <steppermotor1Write+0x2b4>
           for(int d = 0; d < delaytime_StepperForLoop;d++)
           {

           }
        }
        a = 0;
    1924:	1a 86       	std	Y+10, r1	; 0x0a
    1926:	19 86       	std	Y+9, r1	; 0x09

           }
        }
        a = 0;
    }
    while(a  == 2)
    1928:	89 85       	ldd	r24, Y+9	; 0x09
    192a:	9a 85       	ldd	r25, Y+10	; 0x0a
    192c:	82 30       	cpi	r24, 0x02	; 2
    192e:	91 05       	cpc	r25, r1
    1930:	09 f4       	brne	.+2      	; 0x1934 <steppermotor1Write+0x536>
    1932:	ba ce       	rjmp	.-652    	; 0x16a8 <steppermotor1Write+0x2aa>

           }
        }
        a = 0;
    }
}
    1934:	2e 96       	adiw	r28, 0x0e	; 14
    1936:	0f b6       	in	r0, 0x3f	; 63
    1938:	f8 94       	cli
    193a:	de bf       	out	0x3e, r29	; 62
    193c:	0f be       	out	0x3f, r0	; 63
    193e:	cd bf       	out	0x3d, r28	; 61
    1940:	cf 91       	pop	r28
    1942:	df 91       	pop	r29
    1944:	08 95       	ret

00001946 <steppermotor2Write>:

void steppermotor2Write(int a)
{
    1946:	df 93       	push	r29
    1948:	cf 93       	push	r28
    194a:	cd b7       	in	r28, 0x3d	; 61
    194c:	de b7       	in	r29, 0x3e	; 62
    194e:	2e 97       	sbiw	r28, 0x0e	; 14
    1950:	0f b6       	in	r0, 0x3f	; 63
    1952:	f8 94       	cli
    1954:	de bf       	out	0x3e, r29	; 62
    1956:	0f be       	out	0x3f, r0	; 63
    1958:	cd bf       	out	0x3d, r28	; 61
    195a:	9a 87       	std	Y+10, r25	; 0x0a
    195c:	89 87       	std	Y+9, r24	; 0x09
    195e:	41 c1       	rjmp	.+642    	; 0x1be2 <steppermotor2Write+0x29c>
    while(a  == 1)
    {
        int i;
        for(i = 1; i < 8; i=i+1)
    1960:	81 e0       	ldi	r24, 0x01	; 1
    1962:	90 e0       	ldi	r25, 0x00	; 0
    1964:	98 87       	std	Y+8, r25	; 0x08
    1966:	8f 83       	std	Y+7, r24	; 0x07
    1968:	34 c1       	rjmp	.+616    	; 0x1bd2 <steppermotor2Write+0x28c>
        {
            switch (i)
    196a:	8f 81       	ldd	r24, Y+7	; 0x07
    196c:	98 85       	ldd	r25, Y+8	; 0x08
    196e:	9c 87       	std	Y+12, r25	; 0x0c
    1970:	8b 87       	std	Y+11, r24	; 0x0b
    1972:	8b 85       	ldd	r24, Y+11	; 0x0b
    1974:	9c 85       	ldd	r25, Y+12	; 0x0c
    1976:	84 30       	cpi	r24, 0x04	; 4
    1978:	91 05       	cpc	r25, r1
    197a:	09 f4       	brne	.+2      	; 0x197e <steppermotor2Write+0x38>
    197c:	87 c0       	rjmp	.+270    	; 0x1a8c <steppermotor2Write+0x146>
    197e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1980:	9c 85       	ldd	r25, Y+12	; 0x0c
    1982:	85 30       	cpi	r24, 0x05	; 5
    1984:	91 05       	cpc	r25, r1
    1986:	94 f4       	brge	.+36     	; 0x19ac <steppermotor2Write+0x66>
    1988:	8b 85       	ldd	r24, Y+11	; 0x0b
    198a:	9c 85       	ldd	r25, Y+12	; 0x0c
    198c:	82 30       	cpi	r24, 0x02	; 2
    198e:	91 05       	cpc	r25, r1
    1990:	09 f4       	brne	.+2      	; 0x1994 <steppermotor2Write+0x4e>
    1992:	42 c0       	rjmp	.+132    	; 0x1a18 <steppermotor2Write+0xd2>
    1994:	8b 85       	ldd	r24, Y+11	; 0x0b
    1996:	9c 85       	ldd	r25, Y+12	; 0x0c
    1998:	83 30       	cpi	r24, 0x03	; 3
    199a:	91 05       	cpc	r25, r1
    199c:	0c f0       	brlt	.+2      	; 0x19a0 <steppermotor2Write+0x5a>
    199e:	59 c0       	rjmp	.+178    	; 0x1a52 <steppermotor2Write+0x10c>
    19a0:	8b 85       	ldd	r24, Y+11	; 0x0b
    19a2:	9c 85       	ldd	r25, Y+12	; 0x0c
    19a4:	81 30       	cpi	r24, 0x01	; 1
    19a6:	91 05       	cpc	r25, r1
    19a8:	d1 f0       	breq	.+52     	; 0x19de <steppermotor2Write+0x98>
    19aa:	00 c1       	rjmp	.+512    	; 0x1bac <steppermotor2Write+0x266>
    19ac:	8b 85       	ldd	r24, Y+11	; 0x0b
    19ae:	9c 85       	ldd	r25, Y+12	; 0x0c
    19b0:	86 30       	cpi	r24, 0x06	; 6
    19b2:	91 05       	cpc	r25, r1
    19b4:	09 f4       	brne	.+2      	; 0x19b8 <steppermotor2Write+0x72>
    19b6:	a4 c0       	rjmp	.+328    	; 0x1b00 <steppermotor2Write+0x1ba>
    19b8:	8b 85       	ldd	r24, Y+11	; 0x0b
    19ba:	9c 85       	ldd	r25, Y+12	; 0x0c
    19bc:	86 30       	cpi	r24, 0x06	; 6
    19be:	91 05       	cpc	r25, r1
    19c0:	0c f4       	brge	.+2      	; 0x19c4 <steppermotor2Write+0x7e>
    19c2:	81 c0       	rjmp	.+258    	; 0x1ac6 <steppermotor2Write+0x180>
    19c4:	8b 85       	ldd	r24, Y+11	; 0x0b
    19c6:	9c 85       	ldd	r25, Y+12	; 0x0c
    19c8:	87 30       	cpi	r24, 0x07	; 7
    19ca:	91 05       	cpc	r25, r1
    19cc:	09 f4       	brne	.+2      	; 0x19d0 <steppermotor2Write+0x8a>
    19ce:	b5 c0       	rjmp	.+362    	; 0x1b3a <steppermotor2Write+0x1f4>
    19d0:	8b 85       	ldd	r24, Y+11	; 0x0b
    19d2:	9c 85       	ldd	r25, Y+12	; 0x0c
    19d4:	88 30       	cpi	r24, 0x08	; 8
    19d6:	91 05       	cpc	r25, r1
    19d8:	09 f4       	brne	.+2      	; 0x19dc <steppermotor2Write+0x96>
    19da:	cc c0       	rjmp	.+408    	; 0x1b74 <steppermotor2Write+0x22e>
    19dc:	e7 c0       	rjmp	.+462    	; 0x1bac <steppermotor2Write+0x266>
            {
            case 1 :
                PORTStepper2 |= (1 << PStepper2_1);
    19de:	a8 e2       	ldi	r26, 0x28	; 40
    19e0:	b0 e0       	ldi	r27, 0x00	; 0
    19e2:	e8 e2       	ldi	r30, 0x28	; 40
    19e4:	f0 e0       	ldi	r31, 0x00	; 0
    19e6:	80 81       	ld	r24, Z
    19e8:	80 64       	ori	r24, 0x40	; 64
    19ea:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_2);
    19ec:	a8 e2       	ldi	r26, 0x28	; 40
    19ee:	b0 e0       	ldi	r27, 0x00	; 0
    19f0:	e8 e2       	ldi	r30, 0x28	; 40
    19f2:	f0 e0       	ldi	r31, 0x00	; 0
    19f4:	80 81       	ld	r24, Z
    19f6:	8f 7e       	andi	r24, 0xEF	; 239
    19f8:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_3);
    19fa:	a8 e2       	ldi	r26, 0x28	; 40
    19fc:	b0 e0       	ldi	r27, 0x00	; 0
    19fe:	e8 e2       	ldi	r30, 0x28	; 40
    1a00:	f0 e0       	ldi	r31, 0x00	; 0
    1a02:	80 81       	ld	r24, Z
    1a04:	8b 7f       	andi	r24, 0xFB	; 251
    1a06:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_4);
    1a08:	a8 e2       	ldi	r26, 0x28	; 40
    1a0a:	b0 e0       	ldi	r27, 0x00	; 0
    1a0c:	e8 e2       	ldi	r30, 0x28	; 40
    1a0e:	f0 e0       	ldi	r31, 0x00	; 0
    1a10:	80 81       	ld	r24, Z
    1a12:	8e 7f       	andi	r24, 0xFE	; 254
    1a14:	8c 93       	st	X, r24
    1a16:	ca c0       	rjmp	.+404    	; 0x1bac <steppermotor2Write+0x266>
                break;
            case 2 :
                PORTStepper2 |= (1 << PStepper2_1);
    1a18:	a8 e2       	ldi	r26, 0x28	; 40
    1a1a:	b0 e0       	ldi	r27, 0x00	; 0
    1a1c:	e8 e2       	ldi	r30, 0x28	; 40
    1a1e:	f0 e0       	ldi	r31, 0x00	; 0
    1a20:	80 81       	ld	r24, Z
    1a22:	80 64       	ori	r24, 0x40	; 64
    1a24:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_2);
    1a26:	a8 e2       	ldi	r26, 0x28	; 40
    1a28:	b0 e0       	ldi	r27, 0x00	; 0
    1a2a:	e8 e2       	ldi	r30, 0x28	; 40
    1a2c:	f0 e0       	ldi	r31, 0x00	; 0
    1a2e:	80 81       	ld	r24, Z
    1a30:	80 61       	ori	r24, 0x10	; 16
    1a32:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_3);
    1a34:	a8 e2       	ldi	r26, 0x28	; 40
    1a36:	b0 e0       	ldi	r27, 0x00	; 0
    1a38:	e8 e2       	ldi	r30, 0x28	; 40
    1a3a:	f0 e0       	ldi	r31, 0x00	; 0
    1a3c:	80 81       	ld	r24, Z
    1a3e:	8b 7f       	andi	r24, 0xFB	; 251
    1a40:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_4);
    1a42:	a8 e2       	ldi	r26, 0x28	; 40
    1a44:	b0 e0       	ldi	r27, 0x00	; 0
    1a46:	e8 e2       	ldi	r30, 0x28	; 40
    1a48:	f0 e0       	ldi	r31, 0x00	; 0
    1a4a:	80 81       	ld	r24, Z
    1a4c:	8e 7f       	andi	r24, 0xFE	; 254
    1a4e:	8c 93       	st	X, r24
    1a50:	ad c0       	rjmp	.+346    	; 0x1bac <steppermotor2Write+0x266>
                break;
            case 3 :
                PORTStepper2 &= ~(1 << PStepper2_1);
    1a52:	a8 e2       	ldi	r26, 0x28	; 40
    1a54:	b0 e0       	ldi	r27, 0x00	; 0
    1a56:	e8 e2       	ldi	r30, 0x28	; 40
    1a58:	f0 e0       	ldi	r31, 0x00	; 0
    1a5a:	80 81       	ld	r24, Z
    1a5c:	8f 7b       	andi	r24, 0xBF	; 191
    1a5e:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_2);
    1a60:	a8 e2       	ldi	r26, 0x28	; 40
    1a62:	b0 e0       	ldi	r27, 0x00	; 0
    1a64:	e8 e2       	ldi	r30, 0x28	; 40
    1a66:	f0 e0       	ldi	r31, 0x00	; 0
    1a68:	80 81       	ld	r24, Z
    1a6a:	80 61       	ori	r24, 0x10	; 16
    1a6c:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_3);
    1a6e:	a8 e2       	ldi	r26, 0x28	; 40
    1a70:	b0 e0       	ldi	r27, 0x00	; 0
    1a72:	e8 e2       	ldi	r30, 0x28	; 40
    1a74:	f0 e0       	ldi	r31, 0x00	; 0
    1a76:	80 81       	ld	r24, Z
    1a78:	8b 7f       	andi	r24, 0xFB	; 251
    1a7a:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_4);
    1a7c:	a8 e2       	ldi	r26, 0x28	; 40
    1a7e:	b0 e0       	ldi	r27, 0x00	; 0
    1a80:	e8 e2       	ldi	r30, 0x28	; 40
    1a82:	f0 e0       	ldi	r31, 0x00	; 0
    1a84:	80 81       	ld	r24, Z
    1a86:	8e 7f       	andi	r24, 0xFE	; 254
    1a88:	8c 93       	st	X, r24
    1a8a:	90 c0       	rjmp	.+288    	; 0x1bac <steppermotor2Write+0x266>
                break;
            case 4 :
                PORTStepper2 &= ~(1 << PStepper2_1);
    1a8c:	a8 e2       	ldi	r26, 0x28	; 40
    1a8e:	b0 e0       	ldi	r27, 0x00	; 0
    1a90:	e8 e2       	ldi	r30, 0x28	; 40
    1a92:	f0 e0       	ldi	r31, 0x00	; 0
    1a94:	80 81       	ld	r24, Z
    1a96:	8f 7b       	andi	r24, 0xBF	; 191
    1a98:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_2);
    1a9a:	a8 e2       	ldi	r26, 0x28	; 40
    1a9c:	b0 e0       	ldi	r27, 0x00	; 0
    1a9e:	e8 e2       	ldi	r30, 0x28	; 40
    1aa0:	f0 e0       	ldi	r31, 0x00	; 0
    1aa2:	80 81       	ld	r24, Z
    1aa4:	80 61       	ori	r24, 0x10	; 16
    1aa6:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_3);
    1aa8:	a8 e2       	ldi	r26, 0x28	; 40
    1aaa:	b0 e0       	ldi	r27, 0x00	; 0
    1aac:	e8 e2       	ldi	r30, 0x28	; 40
    1aae:	f0 e0       	ldi	r31, 0x00	; 0
    1ab0:	80 81       	ld	r24, Z
    1ab2:	84 60       	ori	r24, 0x04	; 4
    1ab4:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_4);
    1ab6:	a8 e2       	ldi	r26, 0x28	; 40
    1ab8:	b0 e0       	ldi	r27, 0x00	; 0
    1aba:	e8 e2       	ldi	r30, 0x28	; 40
    1abc:	f0 e0       	ldi	r31, 0x00	; 0
    1abe:	80 81       	ld	r24, Z
    1ac0:	8e 7f       	andi	r24, 0xFE	; 254
    1ac2:	8c 93       	st	X, r24
    1ac4:	73 c0       	rjmp	.+230    	; 0x1bac <steppermotor2Write+0x266>
                break;
            case 5 :
                PORTStepper2 &= ~(1 << PStepper2_1);
    1ac6:	a8 e2       	ldi	r26, 0x28	; 40
    1ac8:	b0 e0       	ldi	r27, 0x00	; 0
    1aca:	e8 e2       	ldi	r30, 0x28	; 40
    1acc:	f0 e0       	ldi	r31, 0x00	; 0
    1ace:	80 81       	ld	r24, Z
    1ad0:	8f 7b       	andi	r24, 0xBF	; 191
    1ad2:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_2);
    1ad4:	a8 e2       	ldi	r26, 0x28	; 40
    1ad6:	b0 e0       	ldi	r27, 0x00	; 0
    1ad8:	e8 e2       	ldi	r30, 0x28	; 40
    1ada:	f0 e0       	ldi	r31, 0x00	; 0
    1adc:	80 81       	ld	r24, Z
    1ade:	8f 7e       	andi	r24, 0xEF	; 239
    1ae0:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_3);
    1ae2:	a8 e2       	ldi	r26, 0x28	; 40
    1ae4:	b0 e0       	ldi	r27, 0x00	; 0
    1ae6:	e8 e2       	ldi	r30, 0x28	; 40
    1ae8:	f0 e0       	ldi	r31, 0x00	; 0
    1aea:	80 81       	ld	r24, Z
    1aec:	84 60       	ori	r24, 0x04	; 4
    1aee:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_4);
    1af0:	a8 e2       	ldi	r26, 0x28	; 40
    1af2:	b0 e0       	ldi	r27, 0x00	; 0
    1af4:	e8 e2       	ldi	r30, 0x28	; 40
    1af6:	f0 e0       	ldi	r31, 0x00	; 0
    1af8:	80 81       	ld	r24, Z
    1afa:	8e 7f       	andi	r24, 0xFE	; 254
    1afc:	8c 93       	st	X, r24
    1afe:	56 c0       	rjmp	.+172    	; 0x1bac <steppermotor2Write+0x266>
                break;
            case 6 :
                PORTStepper2 &= ~(1 << PStepper2_1);
    1b00:	a8 e2       	ldi	r26, 0x28	; 40
    1b02:	b0 e0       	ldi	r27, 0x00	; 0
    1b04:	e8 e2       	ldi	r30, 0x28	; 40
    1b06:	f0 e0       	ldi	r31, 0x00	; 0
    1b08:	80 81       	ld	r24, Z
    1b0a:	8f 7b       	andi	r24, 0xBF	; 191
    1b0c:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_2);
    1b0e:	a8 e2       	ldi	r26, 0x28	; 40
    1b10:	b0 e0       	ldi	r27, 0x00	; 0
    1b12:	e8 e2       	ldi	r30, 0x28	; 40
    1b14:	f0 e0       	ldi	r31, 0x00	; 0
    1b16:	80 81       	ld	r24, Z
    1b18:	8f 7e       	andi	r24, 0xEF	; 239
    1b1a:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_3);
    1b1c:	a8 e2       	ldi	r26, 0x28	; 40
    1b1e:	b0 e0       	ldi	r27, 0x00	; 0
    1b20:	e8 e2       	ldi	r30, 0x28	; 40
    1b22:	f0 e0       	ldi	r31, 0x00	; 0
    1b24:	80 81       	ld	r24, Z
    1b26:	84 60       	ori	r24, 0x04	; 4
    1b28:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_4);
    1b2a:	a8 e2       	ldi	r26, 0x28	; 40
    1b2c:	b0 e0       	ldi	r27, 0x00	; 0
    1b2e:	e8 e2       	ldi	r30, 0x28	; 40
    1b30:	f0 e0       	ldi	r31, 0x00	; 0
    1b32:	80 81       	ld	r24, Z
    1b34:	81 60       	ori	r24, 0x01	; 1
    1b36:	8c 93       	st	X, r24
    1b38:	39 c0       	rjmp	.+114    	; 0x1bac <steppermotor2Write+0x266>
                break;
            case 7 :
                PORTStepper2 &= ~(1 << PStepper2_1);
    1b3a:	a8 e2       	ldi	r26, 0x28	; 40
    1b3c:	b0 e0       	ldi	r27, 0x00	; 0
    1b3e:	e8 e2       	ldi	r30, 0x28	; 40
    1b40:	f0 e0       	ldi	r31, 0x00	; 0
    1b42:	80 81       	ld	r24, Z
    1b44:	8f 7b       	andi	r24, 0xBF	; 191
    1b46:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_2);
    1b48:	a8 e2       	ldi	r26, 0x28	; 40
    1b4a:	b0 e0       	ldi	r27, 0x00	; 0
    1b4c:	e8 e2       	ldi	r30, 0x28	; 40
    1b4e:	f0 e0       	ldi	r31, 0x00	; 0
    1b50:	80 81       	ld	r24, Z
    1b52:	8f 7e       	andi	r24, 0xEF	; 239
    1b54:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_3);
    1b56:	a8 e2       	ldi	r26, 0x28	; 40
    1b58:	b0 e0       	ldi	r27, 0x00	; 0
    1b5a:	e8 e2       	ldi	r30, 0x28	; 40
    1b5c:	f0 e0       	ldi	r31, 0x00	; 0
    1b5e:	80 81       	ld	r24, Z
    1b60:	8b 7f       	andi	r24, 0xFB	; 251
    1b62:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_4);
    1b64:	a8 e2       	ldi	r26, 0x28	; 40
    1b66:	b0 e0       	ldi	r27, 0x00	; 0
    1b68:	e8 e2       	ldi	r30, 0x28	; 40
    1b6a:	f0 e0       	ldi	r31, 0x00	; 0
    1b6c:	80 81       	ld	r24, Z
    1b6e:	81 60       	ori	r24, 0x01	; 1
    1b70:	8c 93       	st	X, r24
    1b72:	1c c0       	rjmp	.+56     	; 0x1bac <steppermotor2Write+0x266>
                break;
            case 8 :
                PORTStepper2 |= (1 << PStepper2_1);
    1b74:	a8 e2       	ldi	r26, 0x28	; 40
    1b76:	b0 e0       	ldi	r27, 0x00	; 0
    1b78:	e8 e2       	ldi	r30, 0x28	; 40
    1b7a:	f0 e0       	ldi	r31, 0x00	; 0
    1b7c:	80 81       	ld	r24, Z
    1b7e:	80 64       	ori	r24, 0x40	; 64
    1b80:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_2);
    1b82:	a8 e2       	ldi	r26, 0x28	; 40
    1b84:	b0 e0       	ldi	r27, 0x00	; 0
    1b86:	e8 e2       	ldi	r30, 0x28	; 40
    1b88:	f0 e0       	ldi	r31, 0x00	; 0
    1b8a:	80 81       	ld	r24, Z
    1b8c:	8f 7e       	andi	r24, 0xEF	; 239
    1b8e:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_3);
    1b90:	a8 e2       	ldi	r26, 0x28	; 40
    1b92:	b0 e0       	ldi	r27, 0x00	; 0
    1b94:	e8 e2       	ldi	r30, 0x28	; 40
    1b96:	f0 e0       	ldi	r31, 0x00	; 0
    1b98:	80 81       	ld	r24, Z
    1b9a:	8b 7f       	andi	r24, 0xFB	; 251
    1b9c:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_4);
    1b9e:	a8 e2       	ldi	r26, 0x28	; 40
    1ba0:	b0 e0       	ldi	r27, 0x00	; 0
    1ba2:	e8 e2       	ldi	r30, 0x28	; 40
    1ba4:	f0 e0       	ldi	r31, 0x00	; 0
    1ba6:	80 81       	ld	r24, Z
    1ba8:	81 60       	ori	r24, 0x01	; 1
    1baa:	8c 93       	st	X, r24
                break;
            }
           // _delay_us(delaytime_stepper);
           for(int d = 0; d < delaytime_StepperForLoop;d++)
    1bac:	1e 82       	std	Y+6, r1	; 0x06
    1bae:	1d 82       	std	Y+5, r1	; 0x05
    1bb0:	05 c0       	rjmp	.+10     	; 0x1bbc <steppermotor2Write+0x276>
    1bb2:	8d 81       	ldd	r24, Y+5	; 0x05
    1bb4:	9e 81       	ldd	r25, Y+6	; 0x06
    1bb6:	01 96       	adiw	r24, 0x01	; 1
    1bb8:	9e 83       	std	Y+6, r25	; 0x06
    1bba:	8d 83       	std	Y+5, r24	; 0x05
    1bbc:	8d 81       	ldd	r24, Y+5	; 0x05
    1bbe:	9e 81       	ldd	r25, Y+6	; 0x06
    1bc0:	23 e0       	ldi	r18, 0x03	; 3
    1bc2:	84 38       	cpi	r24, 0x84	; 132
    1bc4:	92 07       	cpc	r25, r18
    1bc6:	ac f3       	brlt	.-22     	; 0x1bb2 <steppermotor2Write+0x26c>
void steppermotor2Write(int a)
{
    while(a  == 1)
    {
        int i;
        for(i = 1; i < 8; i=i+1)
    1bc8:	8f 81       	ldd	r24, Y+7	; 0x07
    1bca:	98 85       	ldd	r25, Y+8	; 0x08
    1bcc:	01 96       	adiw	r24, 0x01	; 1
    1bce:	98 87       	std	Y+8, r25	; 0x08
    1bd0:	8f 83       	std	Y+7, r24	; 0x07
    1bd2:	8f 81       	ldd	r24, Y+7	; 0x07
    1bd4:	98 85       	ldd	r25, Y+8	; 0x08
    1bd6:	88 30       	cpi	r24, 0x08	; 8
    1bd8:	91 05       	cpc	r25, r1
    1bda:	0c f4       	brge	.+2      	; 0x1bde <steppermotor2Write+0x298>
    1bdc:	c6 ce       	rjmp	.-628    	; 0x196a <steppermotor2Write+0x24>
           for(int d = 0; d < delaytime_StepperForLoop;d++)
           {

           }
        }
        a = 0;
    1bde:	1a 86       	std	Y+10, r1	; 0x0a
    1be0:	19 86       	std	Y+9, r1	; 0x09
    }
}

void steppermotor2Write(int a)
{
    while(a  == 1)
    1be2:	89 85       	ldd	r24, Y+9	; 0x09
    1be4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1be6:	81 30       	cpi	r24, 0x01	; 1
    1be8:	91 05       	cpc	r25, r1
    1bea:	09 f4       	brne	.+2      	; 0x1bee <steppermotor2Write+0x2a8>
    1bec:	b9 ce       	rjmp	.-654    	; 0x1960 <steppermotor2Write+0x1a>
    1bee:	40 c1       	rjmp	.+640    	; 0x1e70 <steppermotor2Write+0x52a>
        a = 0;
    }
    while(a  == 2)
    {
        int i;
        for(i = 8; i > 0; --i)
    1bf0:	88 e0       	ldi	r24, 0x08	; 8
    1bf2:	90 e0       	ldi	r25, 0x00	; 0
    1bf4:	9c 83       	std	Y+4, r25	; 0x04
    1bf6:	8b 83       	std	Y+3, r24	; 0x03
    1bf8:	33 c1       	rjmp	.+614    	; 0x1e60 <steppermotor2Write+0x51a>
        {
            switch (i)
    1bfa:	8b 81       	ldd	r24, Y+3	; 0x03
    1bfc:	9c 81       	ldd	r25, Y+4	; 0x04
    1bfe:	9e 87       	std	Y+14, r25	; 0x0e
    1c00:	8d 87       	std	Y+13, r24	; 0x0d
    1c02:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c04:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c06:	84 30       	cpi	r24, 0x04	; 4
    1c08:	91 05       	cpc	r25, r1
    1c0a:	09 f4       	brne	.+2      	; 0x1c0e <steppermotor2Write+0x2c8>
    1c0c:	a3 c0       	rjmp	.+326    	; 0x1d54 <steppermotor2Write+0x40e>
    1c0e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c10:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c12:	85 30       	cpi	r24, 0x05	; 5
    1c14:	91 05       	cpc	r25, r1
    1c16:	94 f4       	brge	.+36     	; 0x1c3c <steppermotor2Write+0x2f6>
    1c18:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c1a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c1c:	82 30       	cpi	r24, 0x02	; 2
    1c1e:	91 05       	cpc	r25, r1
    1c20:	09 f4       	brne	.+2      	; 0x1c24 <steppermotor2Write+0x2de>
    1c22:	5e c0       	rjmp	.+188    	; 0x1ce0 <steppermotor2Write+0x39a>
    1c24:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c26:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c28:	83 30       	cpi	r24, 0x03	; 3
    1c2a:	91 05       	cpc	r25, r1
    1c2c:	0c f0       	brlt	.+2      	; 0x1c30 <steppermotor2Write+0x2ea>
    1c2e:	75 c0       	rjmp	.+234    	; 0x1d1a <steppermotor2Write+0x3d4>
    1c30:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c32:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c34:	81 30       	cpi	r24, 0x01	; 1
    1c36:	91 05       	cpc	r25, r1
    1c38:	b1 f1       	breq	.+108    	; 0x1ca6 <steppermotor2Write+0x360>
    1c3a:	ff c0       	rjmp	.+510    	; 0x1e3a <steppermotor2Write+0x4f4>
    1c3c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c3e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c40:	86 30       	cpi	r24, 0x06	; 6
    1c42:	91 05       	cpc	r25, r1
    1c44:	09 f4       	brne	.+2      	; 0x1c48 <steppermotor2Write+0x302>
    1c46:	c0 c0       	rjmp	.+384    	; 0x1dc8 <steppermotor2Write+0x482>
    1c48:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c4a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c4c:	86 30       	cpi	r24, 0x06	; 6
    1c4e:	91 05       	cpc	r25, r1
    1c50:	0c f4       	brge	.+2      	; 0x1c54 <steppermotor2Write+0x30e>
    1c52:	9d c0       	rjmp	.+314    	; 0x1d8e <steppermotor2Write+0x448>
    1c54:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c56:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c58:	87 30       	cpi	r24, 0x07	; 7
    1c5a:	91 05       	cpc	r25, r1
    1c5c:	09 f4       	brne	.+2      	; 0x1c60 <steppermotor2Write+0x31a>
    1c5e:	d1 c0       	rjmp	.+418    	; 0x1e02 <steppermotor2Write+0x4bc>
    1c60:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c62:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c64:	88 30       	cpi	r24, 0x08	; 8
    1c66:	91 05       	cpc	r25, r1
    1c68:	09 f0       	breq	.+2      	; 0x1c6c <steppermotor2Write+0x326>
    1c6a:	e7 c0       	rjmp	.+462    	; 0x1e3a <steppermotor2Write+0x4f4>
            {
            case 8 :
                PORTStepper2 |= (1 << PStepper2_1);
    1c6c:	a8 e2       	ldi	r26, 0x28	; 40
    1c6e:	b0 e0       	ldi	r27, 0x00	; 0
    1c70:	e8 e2       	ldi	r30, 0x28	; 40
    1c72:	f0 e0       	ldi	r31, 0x00	; 0
    1c74:	80 81       	ld	r24, Z
    1c76:	80 64       	ori	r24, 0x40	; 64
    1c78:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_2);
    1c7a:	a8 e2       	ldi	r26, 0x28	; 40
    1c7c:	b0 e0       	ldi	r27, 0x00	; 0
    1c7e:	e8 e2       	ldi	r30, 0x28	; 40
    1c80:	f0 e0       	ldi	r31, 0x00	; 0
    1c82:	80 81       	ld	r24, Z
    1c84:	8f 7e       	andi	r24, 0xEF	; 239
    1c86:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_3);
    1c88:	a8 e2       	ldi	r26, 0x28	; 40
    1c8a:	b0 e0       	ldi	r27, 0x00	; 0
    1c8c:	e8 e2       	ldi	r30, 0x28	; 40
    1c8e:	f0 e0       	ldi	r31, 0x00	; 0
    1c90:	80 81       	ld	r24, Z
    1c92:	8b 7f       	andi	r24, 0xFB	; 251
    1c94:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_4);
    1c96:	a8 e2       	ldi	r26, 0x28	; 40
    1c98:	b0 e0       	ldi	r27, 0x00	; 0
    1c9a:	e8 e2       	ldi	r30, 0x28	; 40
    1c9c:	f0 e0       	ldi	r31, 0x00	; 0
    1c9e:	80 81       	ld	r24, Z
    1ca0:	8e 7f       	andi	r24, 0xFE	; 254
    1ca2:	8c 93       	st	X, r24
    1ca4:	ca c0       	rjmp	.+404    	; 0x1e3a <steppermotor2Write+0x4f4>
                break;
            case 1 :
                PORTStepper2 |= (1 << PStepper2_1);
    1ca6:	a8 e2       	ldi	r26, 0x28	; 40
    1ca8:	b0 e0       	ldi	r27, 0x00	; 0
    1caa:	e8 e2       	ldi	r30, 0x28	; 40
    1cac:	f0 e0       	ldi	r31, 0x00	; 0
    1cae:	80 81       	ld	r24, Z
    1cb0:	80 64       	ori	r24, 0x40	; 64
    1cb2:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_2);
    1cb4:	a8 e2       	ldi	r26, 0x28	; 40
    1cb6:	b0 e0       	ldi	r27, 0x00	; 0
    1cb8:	e8 e2       	ldi	r30, 0x28	; 40
    1cba:	f0 e0       	ldi	r31, 0x00	; 0
    1cbc:	80 81       	ld	r24, Z
    1cbe:	80 61       	ori	r24, 0x10	; 16
    1cc0:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_3);
    1cc2:	a8 e2       	ldi	r26, 0x28	; 40
    1cc4:	b0 e0       	ldi	r27, 0x00	; 0
    1cc6:	e8 e2       	ldi	r30, 0x28	; 40
    1cc8:	f0 e0       	ldi	r31, 0x00	; 0
    1cca:	80 81       	ld	r24, Z
    1ccc:	8b 7f       	andi	r24, 0xFB	; 251
    1cce:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_4);
    1cd0:	a8 e2       	ldi	r26, 0x28	; 40
    1cd2:	b0 e0       	ldi	r27, 0x00	; 0
    1cd4:	e8 e2       	ldi	r30, 0x28	; 40
    1cd6:	f0 e0       	ldi	r31, 0x00	; 0
    1cd8:	80 81       	ld	r24, Z
    1cda:	8e 7f       	andi	r24, 0xFE	; 254
    1cdc:	8c 93       	st	X, r24
    1cde:	ad c0       	rjmp	.+346    	; 0x1e3a <steppermotor2Write+0x4f4>
                break;
            case 2 :
                PORTStepper2 &= ~(1 << PStepper2_1);
    1ce0:	a8 e2       	ldi	r26, 0x28	; 40
    1ce2:	b0 e0       	ldi	r27, 0x00	; 0
    1ce4:	e8 e2       	ldi	r30, 0x28	; 40
    1ce6:	f0 e0       	ldi	r31, 0x00	; 0
    1ce8:	80 81       	ld	r24, Z
    1cea:	8f 7b       	andi	r24, 0xBF	; 191
    1cec:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_2);
    1cee:	a8 e2       	ldi	r26, 0x28	; 40
    1cf0:	b0 e0       	ldi	r27, 0x00	; 0
    1cf2:	e8 e2       	ldi	r30, 0x28	; 40
    1cf4:	f0 e0       	ldi	r31, 0x00	; 0
    1cf6:	80 81       	ld	r24, Z
    1cf8:	80 61       	ori	r24, 0x10	; 16
    1cfa:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_3);
    1cfc:	a8 e2       	ldi	r26, 0x28	; 40
    1cfe:	b0 e0       	ldi	r27, 0x00	; 0
    1d00:	e8 e2       	ldi	r30, 0x28	; 40
    1d02:	f0 e0       	ldi	r31, 0x00	; 0
    1d04:	80 81       	ld	r24, Z
    1d06:	8b 7f       	andi	r24, 0xFB	; 251
    1d08:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_4);
    1d0a:	a8 e2       	ldi	r26, 0x28	; 40
    1d0c:	b0 e0       	ldi	r27, 0x00	; 0
    1d0e:	e8 e2       	ldi	r30, 0x28	; 40
    1d10:	f0 e0       	ldi	r31, 0x00	; 0
    1d12:	80 81       	ld	r24, Z
    1d14:	8e 7f       	andi	r24, 0xFE	; 254
    1d16:	8c 93       	st	X, r24
    1d18:	90 c0       	rjmp	.+288    	; 0x1e3a <steppermotor2Write+0x4f4>
                break;
            case 3 :
                PORTStepper2 &= ~(1 << PStepper2_1);
    1d1a:	a8 e2       	ldi	r26, 0x28	; 40
    1d1c:	b0 e0       	ldi	r27, 0x00	; 0
    1d1e:	e8 e2       	ldi	r30, 0x28	; 40
    1d20:	f0 e0       	ldi	r31, 0x00	; 0
    1d22:	80 81       	ld	r24, Z
    1d24:	8f 7b       	andi	r24, 0xBF	; 191
    1d26:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_2);
    1d28:	a8 e2       	ldi	r26, 0x28	; 40
    1d2a:	b0 e0       	ldi	r27, 0x00	; 0
    1d2c:	e8 e2       	ldi	r30, 0x28	; 40
    1d2e:	f0 e0       	ldi	r31, 0x00	; 0
    1d30:	80 81       	ld	r24, Z
    1d32:	80 61       	ori	r24, 0x10	; 16
    1d34:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_3);
    1d36:	a8 e2       	ldi	r26, 0x28	; 40
    1d38:	b0 e0       	ldi	r27, 0x00	; 0
    1d3a:	e8 e2       	ldi	r30, 0x28	; 40
    1d3c:	f0 e0       	ldi	r31, 0x00	; 0
    1d3e:	80 81       	ld	r24, Z
    1d40:	84 60       	ori	r24, 0x04	; 4
    1d42:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_4);
    1d44:	a8 e2       	ldi	r26, 0x28	; 40
    1d46:	b0 e0       	ldi	r27, 0x00	; 0
    1d48:	e8 e2       	ldi	r30, 0x28	; 40
    1d4a:	f0 e0       	ldi	r31, 0x00	; 0
    1d4c:	80 81       	ld	r24, Z
    1d4e:	8e 7f       	andi	r24, 0xFE	; 254
    1d50:	8c 93       	st	X, r24
    1d52:	73 c0       	rjmp	.+230    	; 0x1e3a <steppermotor2Write+0x4f4>
                break;
            case 4 :
                PORTStepper2 &= ~(1 << PStepper2_1);
    1d54:	a8 e2       	ldi	r26, 0x28	; 40
    1d56:	b0 e0       	ldi	r27, 0x00	; 0
    1d58:	e8 e2       	ldi	r30, 0x28	; 40
    1d5a:	f0 e0       	ldi	r31, 0x00	; 0
    1d5c:	80 81       	ld	r24, Z
    1d5e:	8f 7b       	andi	r24, 0xBF	; 191
    1d60:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_2);
    1d62:	a8 e2       	ldi	r26, 0x28	; 40
    1d64:	b0 e0       	ldi	r27, 0x00	; 0
    1d66:	e8 e2       	ldi	r30, 0x28	; 40
    1d68:	f0 e0       	ldi	r31, 0x00	; 0
    1d6a:	80 81       	ld	r24, Z
    1d6c:	8f 7e       	andi	r24, 0xEF	; 239
    1d6e:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_3);
    1d70:	a8 e2       	ldi	r26, 0x28	; 40
    1d72:	b0 e0       	ldi	r27, 0x00	; 0
    1d74:	e8 e2       	ldi	r30, 0x28	; 40
    1d76:	f0 e0       	ldi	r31, 0x00	; 0
    1d78:	80 81       	ld	r24, Z
    1d7a:	84 60       	ori	r24, 0x04	; 4
    1d7c:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_4);
    1d7e:	a8 e2       	ldi	r26, 0x28	; 40
    1d80:	b0 e0       	ldi	r27, 0x00	; 0
    1d82:	e8 e2       	ldi	r30, 0x28	; 40
    1d84:	f0 e0       	ldi	r31, 0x00	; 0
    1d86:	80 81       	ld	r24, Z
    1d88:	8e 7f       	andi	r24, 0xFE	; 254
    1d8a:	8c 93       	st	X, r24
    1d8c:	56 c0       	rjmp	.+172    	; 0x1e3a <steppermotor2Write+0x4f4>
                break;
            case 5 :
                PORTStepper2 &= ~(1 << PStepper2_1);
    1d8e:	a8 e2       	ldi	r26, 0x28	; 40
    1d90:	b0 e0       	ldi	r27, 0x00	; 0
    1d92:	e8 e2       	ldi	r30, 0x28	; 40
    1d94:	f0 e0       	ldi	r31, 0x00	; 0
    1d96:	80 81       	ld	r24, Z
    1d98:	8f 7b       	andi	r24, 0xBF	; 191
    1d9a:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_2);
    1d9c:	a8 e2       	ldi	r26, 0x28	; 40
    1d9e:	b0 e0       	ldi	r27, 0x00	; 0
    1da0:	e8 e2       	ldi	r30, 0x28	; 40
    1da2:	f0 e0       	ldi	r31, 0x00	; 0
    1da4:	80 81       	ld	r24, Z
    1da6:	8f 7e       	andi	r24, 0xEF	; 239
    1da8:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_3);
    1daa:	a8 e2       	ldi	r26, 0x28	; 40
    1dac:	b0 e0       	ldi	r27, 0x00	; 0
    1dae:	e8 e2       	ldi	r30, 0x28	; 40
    1db0:	f0 e0       	ldi	r31, 0x00	; 0
    1db2:	80 81       	ld	r24, Z
    1db4:	84 60       	ori	r24, 0x04	; 4
    1db6:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_4);
    1db8:	a8 e2       	ldi	r26, 0x28	; 40
    1dba:	b0 e0       	ldi	r27, 0x00	; 0
    1dbc:	e8 e2       	ldi	r30, 0x28	; 40
    1dbe:	f0 e0       	ldi	r31, 0x00	; 0
    1dc0:	80 81       	ld	r24, Z
    1dc2:	81 60       	ori	r24, 0x01	; 1
    1dc4:	8c 93       	st	X, r24
    1dc6:	39 c0       	rjmp	.+114    	; 0x1e3a <steppermotor2Write+0x4f4>
                break;
            case 6 :
                PORTStepper2 &= ~(1 << PStepper2_1);
    1dc8:	a8 e2       	ldi	r26, 0x28	; 40
    1dca:	b0 e0       	ldi	r27, 0x00	; 0
    1dcc:	e8 e2       	ldi	r30, 0x28	; 40
    1dce:	f0 e0       	ldi	r31, 0x00	; 0
    1dd0:	80 81       	ld	r24, Z
    1dd2:	8f 7b       	andi	r24, 0xBF	; 191
    1dd4:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_2);
    1dd6:	a8 e2       	ldi	r26, 0x28	; 40
    1dd8:	b0 e0       	ldi	r27, 0x00	; 0
    1dda:	e8 e2       	ldi	r30, 0x28	; 40
    1ddc:	f0 e0       	ldi	r31, 0x00	; 0
    1dde:	80 81       	ld	r24, Z
    1de0:	8f 7e       	andi	r24, 0xEF	; 239
    1de2:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_3);
    1de4:	a8 e2       	ldi	r26, 0x28	; 40
    1de6:	b0 e0       	ldi	r27, 0x00	; 0
    1de8:	e8 e2       	ldi	r30, 0x28	; 40
    1dea:	f0 e0       	ldi	r31, 0x00	; 0
    1dec:	80 81       	ld	r24, Z
    1dee:	8b 7f       	andi	r24, 0xFB	; 251
    1df0:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_4);
    1df2:	a8 e2       	ldi	r26, 0x28	; 40
    1df4:	b0 e0       	ldi	r27, 0x00	; 0
    1df6:	e8 e2       	ldi	r30, 0x28	; 40
    1df8:	f0 e0       	ldi	r31, 0x00	; 0
    1dfa:	80 81       	ld	r24, Z
    1dfc:	81 60       	ori	r24, 0x01	; 1
    1dfe:	8c 93       	st	X, r24
    1e00:	1c c0       	rjmp	.+56     	; 0x1e3a <steppermotor2Write+0x4f4>
                break;
            case 7 :
                PORTStepper2 |= (1 << PStepper2_1);
    1e02:	a8 e2       	ldi	r26, 0x28	; 40
    1e04:	b0 e0       	ldi	r27, 0x00	; 0
    1e06:	e8 e2       	ldi	r30, 0x28	; 40
    1e08:	f0 e0       	ldi	r31, 0x00	; 0
    1e0a:	80 81       	ld	r24, Z
    1e0c:	80 64       	ori	r24, 0x40	; 64
    1e0e:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_2);
    1e10:	a8 e2       	ldi	r26, 0x28	; 40
    1e12:	b0 e0       	ldi	r27, 0x00	; 0
    1e14:	e8 e2       	ldi	r30, 0x28	; 40
    1e16:	f0 e0       	ldi	r31, 0x00	; 0
    1e18:	80 81       	ld	r24, Z
    1e1a:	8f 7e       	andi	r24, 0xEF	; 239
    1e1c:	8c 93       	st	X, r24
                PORTStepper2 &= ~(1 << PStepper2_3);
    1e1e:	a8 e2       	ldi	r26, 0x28	; 40
    1e20:	b0 e0       	ldi	r27, 0x00	; 0
    1e22:	e8 e2       	ldi	r30, 0x28	; 40
    1e24:	f0 e0       	ldi	r31, 0x00	; 0
    1e26:	80 81       	ld	r24, Z
    1e28:	8b 7f       	andi	r24, 0xFB	; 251
    1e2a:	8c 93       	st	X, r24
                PORTStepper2 |= (1 << PStepper2_4);
    1e2c:	a8 e2       	ldi	r26, 0x28	; 40
    1e2e:	b0 e0       	ldi	r27, 0x00	; 0
    1e30:	e8 e2       	ldi	r30, 0x28	; 40
    1e32:	f0 e0       	ldi	r31, 0x00	; 0
    1e34:	80 81       	ld	r24, Z
    1e36:	81 60       	ori	r24, 0x01	; 1
    1e38:	8c 93       	st	X, r24
                break;
            }
           // _delay_us(delaytime_stepper);
           for(int d = 0; d < delaytime_StepperForLoop;d++)
    1e3a:	1a 82       	std	Y+2, r1	; 0x02
    1e3c:	19 82       	std	Y+1, r1	; 0x01
    1e3e:	05 c0       	rjmp	.+10     	; 0x1e4a <steppermotor2Write+0x504>
    1e40:	89 81       	ldd	r24, Y+1	; 0x01
    1e42:	9a 81       	ldd	r25, Y+2	; 0x02
    1e44:	01 96       	adiw	r24, 0x01	; 1
    1e46:	9a 83       	std	Y+2, r25	; 0x02
    1e48:	89 83       	std	Y+1, r24	; 0x01
    1e4a:	89 81       	ldd	r24, Y+1	; 0x01
    1e4c:	9a 81       	ldd	r25, Y+2	; 0x02
    1e4e:	23 e0       	ldi	r18, 0x03	; 3
    1e50:	84 38       	cpi	r24, 0x84	; 132
    1e52:	92 07       	cpc	r25, r18
    1e54:	ac f3       	brlt	.-22     	; 0x1e40 <steppermotor2Write+0x4fa>
        a = 0;
    }
    while(a  == 2)
    {
        int i;
        for(i = 8; i > 0; --i)
    1e56:	8b 81       	ldd	r24, Y+3	; 0x03
    1e58:	9c 81       	ldd	r25, Y+4	; 0x04
    1e5a:	01 97       	sbiw	r24, 0x01	; 1
    1e5c:	9c 83       	std	Y+4, r25	; 0x04
    1e5e:	8b 83       	std	Y+3, r24	; 0x03
    1e60:	8b 81       	ldd	r24, Y+3	; 0x03
    1e62:	9c 81       	ldd	r25, Y+4	; 0x04
    1e64:	18 16       	cp	r1, r24
    1e66:	19 06       	cpc	r1, r25
    1e68:	0c f4       	brge	.+2      	; 0x1e6c <steppermotor2Write+0x526>
    1e6a:	c7 ce       	rjmp	.-626    	; 0x1bfa <steppermotor2Write+0x2b4>
           for(int d = 0; d < delaytime_StepperForLoop;d++)
           {

           }
        }
        a = 0;
    1e6c:	1a 86       	std	Y+10, r1	; 0x0a
    1e6e:	19 86       	std	Y+9, r1	; 0x09

           }
        }
        a = 0;
    }
    while(a  == 2)
    1e70:	89 85       	ldd	r24, Y+9	; 0x09
    1e72:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e74:	82 30       	cpi	r24, 0x02	; 2
    1e76:	91 05       	cpc	r25, r1
    1e78:	09 f4       	brne	.+2      	; 0x1e7c <steppermotor2Write+0x536>
    1e7a:	ba ce       	rjmp	.-652    	; 0x1bf0 <steppermotor2Write+0x2aa>

           }
        }
        a = 0;
    }
}
    1e7c:	2e 96       	adiw	r28, 0x0e	; 14
    1e7e:	0f b6       	in	r0, 0x3f	; 63
    1e80:	f8 94       	cli
    1e82:	de bf       	out	0x3e, r29	; 62
    1e84:	0f be       	out	0x3f, r0	; 63
    1e86:	cd bf       	out	0x3d, r28	; 61
    1e88:	cf 91       	pop	r28
    1e8a:	df 91       	pop	r29
    1e8c:	08 95       	ret

00001e8e <steppermotor3Write>:

void steppermotor3Write(int a)
{
    1e8e:	df 93       	push	r29
    1e90:	cf 93       	push	r28
    1e92:	cd b7       	in	r28, 0x3d	; 61
    1e94:	de b7       	in	r29, 0x3e	; 62
    1e96:	2e 97       	sbiw	r28, 0x0e	; 14
    1e98:	0f b6       	in	r0, 0x3f	; 63
    1e9a:	f8 94       	cli
    1e9c:	de bf       	out	0x3e, r29	; 62
    1e9e:	0f be       	out	0x3f, r0	; 63
    1ea0:	cd bf       	out	0x3d, r28	; 61
    1ea2:	9a 87       	std	Y+10, r25	; 0x0a
    1ea4:	89 87       	std	Y+9, r24	; 0x09
    1ea6:	41 c1       	rjmp	.+642    	; 0x212a <steppermotor3Write+0x29c>
    while(a  == 1)
    {
        int i;
        for(i = 1; i < 8; i=i+1)
    1ea8:	81 e0       	ldi	r24, 0x01	; 1
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	98 87       	std	Y+8, r25	; 0x08
    1eae:	8f 83       	std	Y+7, r24	; 0x07
    1eb0:	34 c1       	rjmp	.+616    	; 0x211a <steppermotor3Write+0x28c>
        {
            switch (i)
    1eb2:	8f 81       	ldd	r24, Y+7	; 0x07
    1eb4:	98 85       	ldd	r25, Y+8	; 0x08
    1eb6:	9c 87       	std	Y+12, r25	; 0x0c
    1eb8:	8b 87       	std	Y+11, r24	; 0x0b
    1eba:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ebc:	9c 85       	ldd	r25, Y+12	; 0x0c
    1ebe:	84 30       	cpi	r24, 0x04	; 4
    1ec0:	91 05       	cpc	r25, r1
    1ec2:	09 f4       	brne	.+2      	; 0x1ec6 <steppermotor3Write+0x38>
    1ec4:	87 c0       	rjmp	.+270    	; 0x1fd4 <steppermotor3Write+0x146>
    1ec6:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ec8:	9c 85       	ldd	r25, Y+12	; 0x0c
    1eca:	85 30       	cpi	r24, 0x05	; 5
    1ecc:	91 05       	cpc	r25, r1
    1ece:	94 f4       	brge	.+36     	; 0x1ef4 <steppermotor3Write+0x66>
    1ed0:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ed2:	9c 85       	ldd	r25, Y+12	; 0x0c
    1ed4:	82 30       	cpi	r24, 0x02	; 2
    1ed6:	91 05       	cpc	r25, r1
    1ed8:	09 f4       	brne	.+2      	; 0x1edc <steppermotor3Write+0x4e>
    1eda:	42 c0       	rjmp	.+132    	; 0x1f60 <steppermotor3Write+0xd2>
    1edc:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ede:	9c 85       	ldd	r25, Y+12	; 0x0c
    1ee0:	83 30       	cpi	r24, 0x03	; 3
    1ee2:	91 05       	cpc	r25, r1
    1ee4:	0c f0       	brlt	.+2      	; 0x1ee8 <steppermotor3Write+0x5a>
    1ee6:	59 c0       	rjmp	.+178    	; 0x1f9a <steppermotor3Write+0x10c>
    1ee8:	8b 85       	ldd	r24, Y+11	; 0x0b
    1eea:	9c 85       	ldd	r25, Y+12	; 0x0c
    1eec:	81 30       	cpi	r24, 0x01	; 1
    1eee:	91 05       	cpc	r25, r1
    1ef0:	d1 f0       	breq	.+52     	; 0x1f26 <steppermotor3Write+0x98>
    1ef2:	00 c1       	rjmp	.+512    	; 0x20f4 <steppermotor3Write+0x266>
    1ef4:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ef6:	9c 85       	ldd	r25, Y+12	; 0x0c
    1ef8:	86 30       	cpi	r24, 0x06	; 6
    1efa:	91 05       	cpc	r25, r1
    1efc:	09 f4       	brne	.+2      	; 0x1f00 <steppermotor3Write+0x72>
    1efe:	a4 c0       	rjmp	.+328    	; 0x2048 <steppermotor3Write+0x1ba>
    1f00:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f02:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f04:	86 30       	cpi	r24, 0x06	; 6
    1f06:	91 05       	cpc	r25, r1
    1f08:	0c f4       	brge	.+2      	; 0x1f0c <steppermotor3Write+0x7e>
    1f0a:	81 c0       	rjmp	.+258    	; 0x200e <steppermotor3Write+0x180>
    1f0c:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f0e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f10:	87 30       	cpi	r24, 0x07	; 7
    1f12:	91 05       	cpc	r25, r1
    1f14:	09 f4       	brne	.+2      	; 0x1f18 <steppermotor3Write+0x8a>
    1f16:	b5 c0       	rjmp	.+362    	; 0x2082 <steppermotor3Write+0x1f4>
    1f18:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f1a:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f1c:	88 30       	cpi	r24, 0x08	; 8
    1f1e:	91 05       	cpc	r25, r1
    1f20:	09 f4       	brne	.+2      	; 0x1f24 <steppermotor3Write+0x96>
    1f22:	cc c0       	rjmp	.+408    	; 0x20bc <steppermotor3Write+0x22e>
    1f24:	e7 c0       	rjmp	.+462    	; 0x20f4 <steppermotor3Write+0x266>
            {
            case 1 :
                PORTStepper3 |= (1 << PStepper3_1);
    1f26:	ab e0       	ldi	r26, 0x0B	; 11
    1f28:	b1 e0       	ldi	r27, 0x01	; 1
    1f2a:	eb e0       	ldi	r30, 0x0B	; 11
    1f2c:	f1 e0       	ldi	r31, 0x01	; 1
    1f2e:	80 81       	ld	r24, Z
    1f30:	80 68       	ori	r24, 0x80	; 128
    1f32:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_2);
    1f34:	ab e0       	ldi	r26, 0x0B	; 11
    1f36:	b1 e0       	ldi	r27, 0x01	; 1
    1f38:	eb e0       	ldi	r30, 0x0B	; 11
    1f3a:	f1 e0       	ldi	r31, 0x01	; 1
    1f3c:	80 81       	ld	r24, Z
    1f3e:	8f 7d       	andi	r24, 0xDF	; 223
    1f40:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_3);
    1f42:	ab e0       	ldi	r26, 0x0B	; 11
    1f44:	b1 e0       	ldi	r27, 0x01	; 1
    1f46:	eb e0       	ldi	r30, 0x0B	; 11
    1f48:	f1 e0       	ldi	r31, 0x01	; 1
    1f4a:	80 81       	ld	r24, Z
    1f4c:	87 7f       	andi	r24, 0xF7	; 247
    1f4e:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_4);
    1f50:	ab e0       	ldi	r26, 0x0B	; 11
    1f52:	b1 e0       	ldi	r27, 0x01	; 1
    1f54:	eb e0       	ldi	r30, 0x0B	; 11
    1f56:	f1 e0       	ldi	r31, 0x01	; 1
    1f58:	80 81       	ld	r24, Z
    1f5a:	8d 7f       	andi	r24, 0xFD	; 253
    1f5c:	8c 93       	st	X, r24
    1f5e:	ca c0       	rjmp	.+404    	; 0x20f4 <steppermotor3Write+0x266>
                break;
            case 2 :
                PORTStepper3 |= (1 << PStepper3_1);
    1f60:	ab e0       	ldi	r26, 0x0B	; 11
    1f62:	b1 e0       	ldi	r27, 0x01	; 1
    1f64:	eb e0       	ldi	r30, 0x0B	; 11
    1f66:	f1 e0       	ldi	r31, 0x01	; 1
    1f68:	80 81       	ld	r24, Z
    1f6a:	80 68       	ori	r24, 0x80	; 128
    1f6c:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_2);
    1f6e:	ab e0       	ldi	r26, 0x0B	; 11
    1f70:	b1 e0       	ldi	r27, 0x01	; 1
    1f72:	eb e0       	ldi	r30, 0x0B	; 11
    1f74:	f1 e0       	ldi	r31, 0x01	; 1
    1f76:	80 81       	ld	r24, Z
    1f78:	80 62       	ori	r24, 0x20	; 32
    1f7a:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_3);
    1f7c:	ab e0       	ldi	r26, 0x0B	; 11
    1f7e:	b1 e0       	ldi	r27, 0x01	; 1
    1f80:	eb e0       	ldi	r30, 0x0B	; 11
    1f82:	f1 e0       	ldi	r31, 0x01	; 1
    1f84:	80 81       	ld	r24, Z
    1f86:	87 7f       	andi	r24, 0xF7	; 247
    1f88:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_4);
    1f8a:	ab e0       	ldi	r26, 0x0B	; 11
    1f8c:	b1 e0       	ldi	r27, 0x01	; 1
    1f8e:	eb e0       	ldi	r30, 0x0B	; 11
    1f90:	f1 e0       	ldi	r31, 0x01	; 1
    1f92:	80 81       	ld	r24, Z
    1f94:	8d 7f       	andi	r24, 0xFD	; 253
    1f96:	8c 93       	st	X, r24
    1f98:	ad c0       	rjmp	.+346    	; 0x20f4 <steppermotor3Write+0x266>
                break;
            case 3 :
                PORTStepper3 &= ~(1 << PStepper3_1);
    1f9a:	ab e0       	ldi	r26, 0x0B	; 11
    1f9c:	b1 e0       	ldi	r27, 0x01	; 1
    1f9e:	eb e0       	ldi	r30, 0x0B	; 11
    1fa0:	f1 e0       	ldi	r31, 0x01	; 1
    1fa2:	80 81       	ld	r24, Z
    1fa4:	8f 77       	andi	r24, 0x7F	; 127
    1fa6:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_2);
    1fa8:	ab e0       	ldi	r26, 0x0B	; 11
    1faa:	b1 e0       	ldi	r27, 0x01	; 1
    1fac:	eb e0       	ldi	r30, 0x0B	; 11
    1fae:	f1 e0       	ldi	r31, 0x01	; 1
    1fb0:	80 81       	ld	r24, Z
    1fb2:	80 62       	ori	r24, 0x20	; 32
    1fb4:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_3);
    1fb6:	ab e0       	ldi	r26, 0x0B	; 11
    1fb8:	b1 e0       	ldi	r27, 0x01	; 1
    1fba:	eb e0       	ldi	r30, 0x0B	; 11
    1fbc:	f1 e0       	ldi	r31, 0x01	; 1
    1fbe:	80 81       	ld	r24, Z
    1fc0:	87 7f       	andi	r24, 0xF7	; 247
    1fc2:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_4);
    1fc4:	ab e0       	ldi	r26, 0x0B	; 11
    1fc6:	b1 e0       	ldi	r27, 0x01	; 1
    1fc8:	eb e0       	ldi	r30, 0x0B	; 11
    1fca:	f1 e0       	ldi	r31, 0x01	; 1
    1fcc:	80 81       	ld	r24, Z
    1fce:	8d 7f       	andi	r24, 0xFD	; 253
    1fd0:	8c 93       	st	X, r24
    1fd2:	90 c0       	rjmp	.+288    	; 0x20f4 <steppermotor3Write+0x266>
                break;
            case 4 :
                PORTStepper3 &= ~(1 << PStepper3_1);
    1fd4:	ab e0       	ldi	r26, 0x0B	; 11
    1fd6:	b1 e0       	ldi	r27, 0x01	; 1
    1fd8:	eb e0       	ldi	r30, 0x0B	; 11
    1fda:	f1 e0       	ldi	r31, 0x01	; 1
    1fdc:	80 81       	ld	r24, Z
    1fde:	8f 77       	andi	r24, 0x7F	; 127
    1fe0:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_2);
    1fe2:	ab e0       	ldi	r26, 0x0B	; 11
    1fe4:	b1 e0       	ldi	r27, 0x01	; 1
    1fe6:	eb e0       	ldi	r30, 0x0B	; 11
    1fe8:	f1 e0       	ldi	r31, 0x01	; 1
    1fea:	80 81       	ld	r24, Z
    1fec:	80 62       	ori	r24, 0x20	; 32
    1fee:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_3);
    1ff0:	ab e0       	ldi	r26, 0x0B	; 11
    1ff2:	b1 e0       	ldi	r27, 0x01	; 1
    1ff4:	eb e0       	ldi	r30, 0x0B	; 11
    1ff6:	f1 e0       	ldi	r31, 0x01	; 1
    1ff8:	80 81       	ld	r24, Z
    1ffa:	88 60       	ori	r24, 0x08	; 8
    1ffc:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_4);
    1ffe:	ab e0       	ldi	r26, 0x0B	; 11
    2000:	b1 e0       	ldi	r27, 0x01	; 1
    2002:	eb e0       	ldi	r30, 0x0B	; 11
    2004:	f1 e0       	ldi	r31, 0x01	; 1
    2006:	80 81       	ld	r24, Z
    2008:	8d 7f       	andi	r24, 0xFD	; 253
    200a:	8c 93       	st	X, r24
    200c:	73 c0       	rjmp	.+230    	; 0x20f4 <steppermotor3Write+0x266>
                break;
            case 5 :
                PORTStepper3 &= ~(1 << PStepper3_1);
    200e:	ab e0       	ldi	r26, 0x0B	; 11
    2010:	b1 e0       	ldi	r27, 0x01	; 1
    2012:	eb e0       	ldi	r30, 0x0B	; 11
    2014:	f1 e0       	ldi	r31, 0x01	; 1
    2016:	80 81       	ld	r24, Z
    2018:	8f 77       	andi	r24, 0x7F	; 127
    201a:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_2);
    201c:	ab e0       	ldi	r26, 0x0B	; 11
    201e:	b1 e0       	ldi	r27, 0x01	; 1
    2020:	eb e0       	ldi	r30, 0x0B	; 11
    2022:	f1 e0       	ldi	r31, 0x01	; 1
    2024:	80 81       	ld	r24, Z
    2026:	8f 7d       	andi	r24, 0xDF	; 223
    2028:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_3);
    202a:	ab e0       	ldi	r26, 0x0B	; 11
    202c:	b1 e0       	ldi	r27, 0x01	; 1
    202e:	eb e0       	ldi	r30, 0x0B	; 11
    2030:	f1 e0       	ldi	r31, 0x01	; 1
    2032:	80 81       	ld	r24, Z
    2034:	88 60       	ori	r24, 0x08	; 8
    2036:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_4);
    2038:	ab e0       	ldi	r26, 0x0B	; 11
    203a:	b1 e0       	ldi	r27, 0x01	; 1
    203c:	eb e0       	ldi	r30, 0x0B	; 11
    203e:	f1 e0       	ldi	r31, 0x01	; 1
    2040:	80 81       	ld	r24, Z
    2042:	8d 7f       	andi	r24, 0xFD	; 253
    2044:	8c 93       	st	X, r24
    2046:	56 c0       	rjmp	.+172    	; 0x20f4 <steppermotor3Write+0x266>
                break;
            case 6 :
                PORTStepper3 &= ~(1 << PStepper3_1);
    2048:	ab e0       	ldi	r26, 0x0B	; 11
    204a:	b1 e0       	ldi	r27, 0x01	; 1
    204c:	eb e0       	ldi	r30, 0x0B	; 11
    204e:	f1 e0       	ldi	r31, 0x01	; 1
    2050:	80 81       	ld	r24, Z
    2052:	8f 77       	andi	r24, 0x7F	; 127
    2054:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_2);
    2056:	ab e0       	ldi	r26, 0x0B	; 11
    2058:	b1 e0       	ldi	r27, 0x01	; 1
    205a:	eb e0       	ldi	r30, 0x0B	; 11
    205c:	f1 e0       	ldi	r31, 0x01	; 1
    205e:	80 81       	ld	r24, Z
    2060:	8f 7d       	andi	r24, 0xDF	; 223
    2062:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_3);
    2064:	ab e0       	ldi	r26, 0x0B	; 11
    2066:	b1 e0       	ldi	r27, 0x01	; 1
    2068:	eb e0       	ldi	r30, 0x0B	; 11
    206a:	f1 e0       	ldi	r31, 0x01	; 1
    206c:	80 81       	ld	r24, Z
    206e:	88 60       	ori	r24, 0x08	; 8
    2070:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_4);
    2072:	ab e0       	ldi	r26, 0x0B	; 11
    2074:	b1 e0       	ldi	r27, 0x01	; 1
    2076:	eb e0       	ldi	r30, 0x0B	; 11
    2078:	f1 e0       	ldi	r31, 0x01	; 1
    207a:	80 81       	ld	r24, Z
    207c:	82 60       	ori	r24, 0x02	; 2
    207e:	8c 93       	st	X, r24
    2080:	39 c0       	rjmp	.+114    	; 0x20f4 <steppermotor3Write+0x266>
                break;
            case 7 :
                PORTStepper3 &= ~(1 << PStepper3_1);
    2082:	ab e0       	ldi	r26, 0x0B	; 11
    2084:	b1 e0       	ldi	r27, 0x01	; 1
    2086:	eb e0       	ldi	r30, 0x0B	; 11
    2088:	f1 e0       	ldi	r31, 0x01	; 1
    208a:	80 81       	ld	r24, Z
    208c:	8f 77       	andi	r24, 0x7F	; 127
    208e:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_2);
    2090:	ab e0       	ldi	r26, 0x0B	; 11
    2092:	b1 e0       	ldi	r27, 0x01	; 1
    2094:	eb e0       	ldi	r30, 0x0B	; 11
    2096:	f1 e0       	ldi	r31, 0x01	; 1
    2098:	80 81       	ld	r24, Z
    209a:	8f 7d       	andi	r24, 0xDF	; 223
    209c:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_3);
    209e:	ab e0       	ldi	r26, 0x0B	; 11
    20a0:	b1 e0       	ldi	r27, 0x01	; 1
    20a2:	eb e0       	ldi	r30, 0x0B	; 11
    20a4:	f1 e0       	ldi	r31, 0x01	; 1
    20a6:	80 81       	ld	r24, Z
    20a8:	87 7f       	andi	r24, 0xF7	; 247
    20aa:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_4);
    20ac:	ab e0       	ldi	r26, 0x0B	; 11
    20ae:	b1 e0       	ldi	r27, 0x01	; 1
    20b0:	eb e0       	ldi	r30, 0x0B	; 11
    20b2:	f1 e0       	ldi	r31, 0x01	; 1
    20b4:	80 81       	ld	r24, Z
    20b6:	82 60       	ori	r24, 0x02	; 2
    20b8:	8c 93       	st	X, r24
    20ba:	1c c0       	rjmp	.+56     	; 0x20f4 <steppermotor3Write+0x266>
                break;
            case 8 :
                PORTStepper3 |= (1 << PStepper3_1);
    20bc:	ab e0       	ldi	r26, 0x0B	; 11
    20be:	b1 e0       	ldi	r27, 0x01	; 1
    20c0:	eb e0       	ldi	r30, 0x0B	; 11
    20c2:	f1 e0       	ldi	r31, 0x01	; 1
    20c4:	80 81       	ld	r24, Z
    20c6:	80 68       	ori	r24, 0x80	; 128
    20c8:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_2);
    20ca:	ab e0       	ldi	r26, 0x0B	; 11
    20cc:	b1 e0       	ldi	r27, 0x01	; 1
    20ce:	eb e0       	ldi	r30, 0x0B	; 11
    20d0:	f1 e0       	ldi	r31, 0x01	; 1
    20d2:	80 81       	ld	r24, Z
    20d4:	8f 7d       	andi	r24, 0xDF	; 223
    20d6:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_3);
    20d8:	ab e0       	ldi	r26, 0x0B	; 11
    20da:	b1 e0       	ldi	r27, 0x01	; 1
    20dc:	eb e0       	ldi	r30, 0x0B	; 11
    20de:	f1 e0       	ldi	r31, 0x01	; 1
    20e0:	80 81       	ld	r24, Z
    20e2:	87 7f       	andi	r24, 0xF7	; 247
    20e4:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_4);
    20e6:	ab e0       	ldi	r26, 0x0B	; 11
    20e8:	b1 e0       	ldi	r27, 0x01	; 1
    20ea:	eb e0       	ldi	r30, 0x0B	; 11
    20ec:	f1 e0       	ldi	r31, 0x01	; 1
    20ee:	80 81       	ld	r24, Z
    20f0:	82 60       	ori	r24, 0x02	; 2
    20f2:	8c 93       	st	X, r24
                break;
            }
           // _delay_us(delaytime_stepper);
           for(int d = 0; d < delaytime_StepperForLoop;d++)
    20f4:	1e 82       	std	Y+6, r1	; 0x06
    20f6:	1d 82       	std	Y+5, r1	; 0x05
    20f8:	05 c0       	rjmp	.+10     	; 0x2104 <steppermotor3Write+0x276>
    20fa:	8d 81       	ldd	r24, Y+5	; 0x05
    20fc:	9e 81       	ldd	r25, Y+6	; 0x06
    20fe:	01 96       	adiw	r24, 0x01	; 1
    2100:	9e 83       	std	Y+6, r25	; 0x06
    2102:	8d 83       	std	Y+5, r24	; 0x05
    2104:	8d 81       	ldd	r24, Y+5	; 0x05
    2106:	9e 81       	ldd	r25, Y+6	; 0x06
    2108:	23 e0       	ldi	r18, 0x03	; 3
    210a:	84 38       	cpi	r24, 0x84	; 132
    210c:	92 07       	cpc	r25, r18
    210e:	ac f3       	brlt	.-22     	; 0x20fa <steppermotor3Write+0x26c>
void steppermotor3Write(int a)
{
    while(a  == 1)
    {
        int i;
        for(i = 1; i < 8; i=i+1)
    2110:	8f 81       	ldd	r24, Y+7	; 0x07
    2112:	98 85       	ldd	r25, Y+8	; 0x08
    2114:	01 96       	adiw	r24, 0x01	; 1
    2116:	98 87       	std	Y+8, r25	; 0x08
    2118:	8f 83       	std	Y+7, r24	; 0x07
    211a:	8f 81       	ldd	r24, Y+7	; 0x07
    211c:	98 85       	ldd	r25, Y+8	; 0x08
    211e:	88 30       	cpi	r24, 0x08	; 8
    2120:	91 05       	cpc	r25, r1
    2122:	0c f4       	brge	.+2      	; 0x2126 <steppermotor3Write+0x298>
    2124:	c6 ce       	rjmp	.-628    	; 0x1eb2 <steppermotor3Write+0x24>
           for(int d = 0; d < delaytime_StepperForLoop;d++)
           {

           }
        }
        a = 0;
    2126:	1a 86       	std	Y+10, r1	; 0x0a
    2128:	19 86       	std	Y+9, r1	; 0x09
    }
}

void steppermotor3Write(int a)
{
    while(a  == 1)
    212a:	89 85       	ldd	r24, Y+9	; 0x09
    212c:	9a 85       	ldd	r25, Y+10	; 0x0a
    212e:	81 30       	cpi	r24, 0x01	; 1
    2130:	91 05       	cpc	r25, r1
    2132:	09 f4       	brne	.+2      	; 0x2136 <steppermotor3Write+0x2a8>
    2134:	b9 ce       	rjmp	.-654    	; 0x1ea8 <steppermotor3Write+0x1a>
    2136:	40 c1       	rjmp	.+640    	; 0x23b8 <__stack+0x1b9>
        a = 0;
    }
    while(a  == 2)
    {
        int i;
        for(i = 8; i > 0; --i)
    2138:	88 e0       	ldi	r24, 0x08	; 8
    213a:	90 e0       	ldi	r25, 0x00	; 0
    213c:	9c 83       	std	Y+4, r25	; 0x04
    213e:	8b 83       	std	Y+3, r24	; 0x03
    2140:	33 c1       	rjmp	.+614    	; 0x23a8 <__stack+0x1a9>
        {
            switch (i)
    2142:	8b 81       	ldd	r24, Y+3	; 0x03
    2144:	9c 81       	ldd	r25, Y+4	; 0x04
    2146:	9e 87       	std	Y+14, r25	; 0x0e
    2148:	8d 87       	std	Y+13, r24	; 0x0d
    214a:	8d 85       	ldd	r24, Y+13	; 0x0d
    214c:	9e 85       	ldd	r25, Y+14	; 0x0e
    214e:	84 30       	cpi	r24, 0x04	; 4
    2150:	91 05       	cpc	r25, r1
    2152:	09 f4       	brne	.+2      	; 0x2156 <steppermotor3Write+0x2c8>
    2154:	a3 c0       	rjmp	.+326    	; 0x229c <__stack+0x9d>
    2156:	8d 85       	ldd	r24, Y+13	; 0x0d
    2158:	9e 85       	ldd	r25, Y+14	; 0x0e
    215a:	85 30       	cpi	r24, 0x05	; 5
    215c:	91 05       	cpc	r25, r1
    215e:	94 f4       	brge	.+36     	; 0x2184 <steppermotor3Write+0x2f6>
    2160:	8d 85       	ldd	r24, Y+13	; 0x0d
    2162:	9e 85       	ldd	r25, Y+14	; 0x0e
    2164:	82 30       	cpi	r24, 0x02	; 2
    2166:	91 05       	cpc	r25, r1
    2168:	09 f4       	brne	.+2      	; 0x216c <steppermotor3Write+0x2de>
    216a:	5e c0       	rjmp	.+188    	; 0x2228 <__stack+0x29>
    216c:	8d 85       	ldd	r24, Y+13	; 0x0d
    216e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2170:	83 30       	cpi	r24, 0x03	; 3
    2172:	91 05       	cpc	r25, r1
    2174:	0c f0       	brlt	.+2      	; 0x2178 <steppermotor3Write+0x2ea>
    2176:	75 c0       	rjmp	.+234    	; 0x2262 <__stack+0x63>
    2178:	8d 85       	ldd	r24, Y+13	; 0x0d
    217a:	9e 85       	ldd	r25, Y+14	; 0x0e
    217c:	81 30       	cpi	r24, 0x01	; 1
    217e:	91 05       	cpc	r25, r1
    2180:	b1 f1       	breq	.+108    	; 0x21ee <steppermotor3Write+0x360>
    2182:	ff c0       	rjmp	.+510    	; 0x2382 <__stack+0x183>
    2184:	8d 85       	ldd	r24, Y+13	; 0x0d
    2186:	9e 85       	ldd	r25, Y+14	; 0x0e
    2188:	86 30       	cpi	r24, 0x06	; 6
    218a:	91 05       	cpc	r25, r1
    218c:	09 f4       	brne	.+2      	; 0x2190 <steppermotor3Write+0x302>
    218e:	c0 c0       	rjmp	.+384    	; 0x2310 <__stack+0x111>
    2190:	8d 85       	ldd	r24, Y+13	; 0x0d
    2192:	9e 85       	ldd	r25, Y+14	; 0x0e
    2194:	86 30       	cpi	r24, 0x06	; 6
    2196:	91 05       	cpc	r25, r1
    2198:	0c f4       	brge	.+2      	; 0x219c <steppermotor3Write+0x30e>
    219a:	9d c0       	rjmp	.+314    	; 0x22d6 <__stack+0xd7>
    219c:	8d 85       	ldd	r24, Y+13	; 0x0d
    219e:	9e 85       	ldd	r25, Y+14	; 0x0e
    21a0:	87 30       	cpi	r24, 0x07	; 7
    21a2:	91 05       	cpc	r25, r1
    21a4:	09 f4       	brne	.+2      	; 0x21a8 <steppermotor3Write+0x31a>
    21a6:	d1 c0       	rjmp	.+418    	; 0x234a <__stack+0x14b>
    21a8:	8d 85       	ldd	r24, Y+13	; 0x0d
    21aa:	9e 85       	ldd	r25, Y+14	; 0x0e
    21ac:	88 30       	cpi	r24, 0x08	; 8
    21ae:	91 05       	cpc	r25, r1
    21b0:	09 f0       	breq	.+2      	; 0x21b4 <steppermotor3Write+0x326>
    21b2:	e7 c0       	rjmp	.+462    	; 0x2382 <__stack+0x183>
            {
            case 8 :
                PORTStepper3 |= (1 << PStepper3_1);
    21b4:	ab e0       	ldi	r26, 0x0B	; 11
    21b6:	b1 e0       	ldi	r27, 0x01	; 1
    21b8:	eb e0       	ldi	r30, 0x0B	; 11
    21ba:	f1 e0       	ldi	r31, 0x01	; 1
    21bc:	80 81       	ld	r24, Z
    21be:	80 68       	ori	r24, 0x80	; 128
    21c0:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_2);
    21c2:	ab e0       	ldi	r26, 0x0B	; 11
    21c4:	b1 e0       	ldi	r27, 0x01	; 1
    21c6:	eb e0       	ldi	r30, 0x0B	; 11
    21c8:	f1 e0       	ldi	r31, 0x01	; 1
    21ca:	80 81       	ld	r24, Z
    21cc:	8f 7d       	andi	r24, 0xDF	; 223
    21ce:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_3);
    21d0:	ab e0       	ldi	r26, 0x0B	; 11
    21d2:	b1 e0       	ldi	r27, 0x01	; 1
    21d4:	eb e0       	ldi	r30, 0x0B	; 11
    21d6:	f1 e0       	ldi	r31, 0x01	; 1
    21d8:	80 81       	ld	r24, Z
    21da:	87 7f       	andi	r24, 0xF7	; 247
    21dc:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_4);
    21de:	ab e0       	ldi	r26, 0x0B	; 11
    21e0:	b1 e0       	ldi	r27, 0x01	; 1
    21e2:	eb e0       	ldi	r30, 0x0B	; 11
    21e4:	f1 e0       	ldi	r31, 0x01	; 1
    21e6:	80 81       	ld	r24, Z
    21e8:	8d 7f       	andi	r24, 0xFD	; 253
    21ea:	8c 93       	st	X, r24
    21ec:	ca c0       	rjmp	.+404    	; 0x2382 <__stack+0x183>
                break;
            case 1 :
                PORTStepper3 |= (1 << PStepper3_1);
    21ee:	ab e0       	ldi	r26, 0x0B	; 11
    21f0:	b1 e0       	ldi	r27, 0x01	; 1
    21f2:	eb e0       	ldi	r30, 0x0B	; 11
    21f4:	f1 e0       	ldi	r31, 0x01	; 1
    21f6:	80 81       	ld	r24, Z
    21f8:	80 68       	ori	r24, 0x80	; 128
    21fa:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_2);
    21fc:	ab e0       	ldi	r26, 0x0B	; 11
    21fe:	b1 e0       	ldi	r27, 0x01	; 1
    2200:	eb e0       	ldi	r30, 0x0B	; 11
    2202:	f1 e0       	ldi	r31, 0x01	; 1
    2204:	80 81       	ld	r24, Z
    2206:	80 62       	ori	r24, 0x20	; 32
    2208:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_3);
    220a:	ab e0       	ldi	r26, 0x0B	; 11
    220c:	b1 e0       	ldi	r27, 0x01	; 1
    220e:	eb e0       	ldi	r30, 0x0B	; 11
    2210:	f1 e0       	ldi	r31, 0x01	; 1
    2212:	80 81       	ld	r24, Z
    2214:	87 7f       	andi	r24, 0xF7	; 247
    2216:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_4);
    2218:	ab e0       	ldi	r26, 0x0B	; 11
    221a:	b1 e0       	ldi	r27, 0x01	; 1
    221c:	eb e0       	ldi	r30, 0x0B	; 11
    221e:	f1 e0       	ldi	r31, 0x01	; 1
    2220:	80 81       	ld	r24, Z
    2222:	8d 7f       	andi	r24, 0xFD	; 253
    2224:	8c 93       	st	X, r24
    2226:	ad c0       	rjmp	.+346    	; 0x2382 <__stack+0x183>
                break;
            case 2 :
                PORTStepper3 &= ~(1 << PStepper3_1);
    2228:	ab e0       	ldi	r26, 0x0B	; 11
    222a:	b1 e0       	ldi	r27, 0x01	; 1
    222c:	eb e0       	ldi	r30, 0x0B	; 11
    222e:	f1 e0       	ldi	r31, 0x01	; 1
    2230:	80 81       	ld	r24, Z
    2232:	8f 77       	andi	r24, 0x7F	; 127
    2234:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_2);
    2236:	ab e0       	ldi	r26, 0x0B	; 11
    2238:	b1 e0       	ldi	r27, 0x01	; 1
    223a:	eb e0       	ldi	r30, 0x0B	; 11
    223c:	f1 e0       	ldi	r31, 0x01	; 1
    223e:	80 81       	ld	r24, Z
    2240:	80 62       	ori	r24, 0x20	; 32
    2242:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_3);
    2244:	ab e0       	ldi	r26, 0x0B	; 11
    2246:	b1 e0       	ldi	r27, 0x01	; 1
    2248:	eb e0       	ldi	r30, 0x0B	; 11
    224a:	f1 e0       	ldi	r31, 0x01	; 1
    224c:	80 81       	ld	r24, Z
    224e:	87 7f       	andi	r24, 0xF7	; 247
    2250:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_4);
    2252:	ab e0       	ldi	r26, 0x0B	; 11
    2254:	b1 e0       	ldi	r27, 0x01	; 1
    2256:	eb e0       	ldi	r30, 0x0B	; 11
    2258:	f1 e0       	ldi	r31, 0x01	; 1
    225a:	80 81       	ld	r24, Z
    225c:	8d 7f       	andi	r24, 0xFD	; 253
    225e:	8c 93       	st	X, r24
    2260:	90 c0       	rjmp	.+288    	; 0x2382 <__stack+0x183>
                break;
            case 3 :
                PORTStepper3 &= ~(1 << PStepper3_1);
    2262:	ab e0       	ldi	r26, 0x0B	; 11
    2264:	b1 e0       	ldi	r27, 0x01	; 1
    2266:	eb e0       	ldi	r30, 0x0B	; 11
    2268:	f1 e0       	ldi	r31, 0x01	; 1
    226a:	80 81       	ld	r24, Z
    226c:	8f 77       	andi	r24, 0x7F	; 127
    226e:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_2);
    2270:	ab e0       	ldi	r26, 0x0B	; 11
    2272:	b1 e0       	ldi	r27, 0x01	; 1
    2274:	eb e0       	ldi	r30, 0x0B	; 11
    2276:	f1 e0       	ldi	r31, 0x01	; 1
    2278:	80 81       	ld	r24, Z
    227a:	80 62       	ori	r24, 0x20	; 32
    227c:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_3);
    227e:	ab e0       	ldi	r26, 0x0B	; 11
    2280:	b1 e0       	ldi	r27, 0x01	; 1
    2282:	eb e0       	ldi	r30, 0x0B	; 11
    2284:	f1 e0       	ldi	r31, 0x01	; 1
    2286:	80 81       	ld	r24, Z
    2288:	88 60       	ori	r24, 0x08	; 8
    228a:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_4);
    228c:	ab e0       	ldi	r26, 0x0B	; 11
    228e:	b1 e0       	ldi	r27, 0x01	; 1
    2290:	eb e0       	ldi	r30, 0x0B	; 11
    2292:	f1 e0       	ldi	r31, 0x01	; 1
    2294:	80 81       	ld	r24, Z
    2296:	8d 7f       	andi	r24, 0xFD	; 253
    2298:	8c 93       	st	X, r24
    229a:	73 c0       	rjmp	.+230    	; 0x2382 <__stack+0x183>
                break;
            case 4 :
                PORTStepper3 &= ~(1 << PStepper3_1);
    229c:	ab e0       	ldi	r26, 0x0B	; 11
    229e:	b1 e0       	ldi	r27, 0x01	; 1
    22a0:	eb e0       	ldi	r30, 0x0B	; 11
    22a2:	f1 e0       	ldi	r31, 0x01	; 1
    22a4:	80 81       	ld	r24, Z
    22a6:	8f 77       	andi	r24, 0x7F	; 127
    22a8:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_2);
    22aa:	ab e0       	ldi	r26, 0x0B	; 11
    22ac:	b1 e0       	ldi	r27, 0x01	; 1
    22ae:	eb e0       	ldi	r30, 0x0B	; 11
    22b0:	f1 e0       	ldi	r31, 0x01	; 1
    22b2:	80 81       	ld	r24, Z
    22b4:	8f 7d       	andi	r24, 0xDF	; 223
    22b6:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_3);
    22b8:	ab e0       	ldi	r26, 0x0B	; 11
    22ba:	b1 e0       	ldi	r27, 0x01	; 1
    22bc:	eb e0       	ldi	r30, 0x0B	; 11
    22be:	f1 e0       	ldi	r31, 0x01	; 1
    22c0:	80 81       	ld	r24, Z
    22c2:	88 60       	ori	r24, 0x08	; 8
    22c4:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_4);
    22c6:	ab e0       	ldi	r26, 0x0B	; 11
    22c8:	b1 e0       	ldi	r27, 0x01	; 1
    22ca:	eb e0       	ldi	r30, 0x0B	; 11
    22cc:	f1 e0       	ldi	r31, 0x01	; 1
    22ce:	80 81       	ld	r24, Z
    22d0:	8d 7f       	andi	r24, 0xFD	; 253
    22d2:	8c 93       	st	X, r24
    22d4:	56 c0       	rjmp	.+172    	; 0x2382 <__stack+0x183>
                break;
            case 5 :
                PORTStepper3 &= ~(1 << PStepper3_1);
    22d6:	ab e0       	ldi	r26, 0x0B	; 11
    22d8:	b1 e0       	ldi	r27, 0x01	; 1
    22da:	eb e0       	ldi	r30, 0x0B	; 11
    22dc:	f1 e0       	ldi	r31, 0x01	; 1
    22de:	80 81       	ld	r24, Z
    22e0:	8f 77       	andi	r24, 0x7F	; 127
    22e2:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_2);
    22e4:	ab e0       	ldi	r26, 0x0B	; 11
    22e6:	b1 e0       	ldi	r27, 0x01	; 1
    22e8:	eb e0       	ldi	r30, 0x0B	; 11
    22ea:	f1 e0       	ldi	r31, 0x01	; 1
    22ec:	80 81       	ld	r24, Z
    22ee:	8f 7d       	andi	r24, 0xDF	; 223
    22f0:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_3);
    22f2:	ab e0       	ldi	r26, 0x0B	; 11
    22f4:	b1 e0       	ldi	r27, 0x01	; 1
    22f6:	eb e0       	ldi	r30, 0x0B	; 11
    22f8:	f1 e0       	ldi	r31, 0x01	; 1
    22fa:	80 81       	ld	r24, Z
    22fc:	88 60       	ori	r24, 0x08	; 8
    22fe:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_4);
    2300:	ab e0       	ldi	r26, 0x0B	; 11
    2302:	b1 e0       	ldi	r27, 0x01	; 1
    2304:	eb e0       	ldi	r30, 0x0B	; 11
    2306:	f1 e0       	ldi	r31, 0x01	; 1
    2308:	80 81       	ld	r24, Z
    230a:	82 60       	ori	r24, 0x02	; 2
    230c:	8c 93       	st	X, r24
    230e:	39 c0       	rjmp	.+114    	; 0x2382 <__stack+0x183>
                break;
            case 6 :
                PORTStepper3 &= ~(1 << PStepper3_1);
    2310:	ab e0       	ldi	r26, 0x0B	; 11
    2312:	b1 e0       	ldi	r27, 0x01	; 1
    2314:	eb e0       	ldi	r30, 0x0B	; 11
    2316:	f1 e0       	ldi	r31, 0x01	; 1
    2318:	80 81       	ld	r24, Z
    231a:	8f 77       	andi	r24, 0x7F	; 127
    231c:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_2);
    231e:	ab e0       	ldi	r26, 0x0B	; 11
    2320:	b1 e0       	ldi	r27, 0x01	; 1
    2322:	eb e0       	ldi	r30, 0x0B	; 11
    2324:	f1 e0       	ldi	r31, 0x01	; 1
    2326:	80 81       	ld	r24, Z
    2328:	8f 7d       	andi	r24, 0xDF	; 223
    232a:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_3);
    232c:	ab e0       	ldi	r26, 0x0B	; 11
    232e:	b1 e0       	ldi	r27, 0x01	; 1
    2330:	eb e0       	ldi	r30, 0x0B	; 11
    2332:	f1 e0       	ldi	r31, 0x01	; 1
    2334:	80 81       	ld	r24, Z
    2336:	87 7f       	andi	r24, 0xF7	; 247
    2338:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_4);
    233a:	ab e0       	ldi	r26, 0x0B	; 11
    233c:	b1 e0       	ldi	r27, 0x01	; 1
    233e:	eb e0       	ldi	r30, 0x0B	; 11
    2340:	f1 e0       	ldi	r31, 0x01	; 1
    2342:	80 81       	ld	r24, Z
    2344:	82 60       	ori	r24, 0x02	; 2
    2346:	8c 93       	st	X, r24
    2348:	1c c0       	rjmp	.+56     	; 0x2382 <__stack+0x183>
                break;
            case 7 :
                PORTStepper3 |= (1 << PStepper3_1);
    234a:	ab e0       	ldi	r26, 0x0B	; 11
    234c:	b1 e0       	ldi	r27, 0x01	; 1
    234e:	eb e0       	ldi	r30, 0x0B	; 11
    2350:	f1 e0       	ldi	r31, 0x01	; 1
    2352:	80 81       	ld	r24, Z
    2354:	80 68       	ori	r24, 0x80	; 128
    2356:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_2);
    2358:	ab e0       	ldi	r26, 0x0B	; 11
    235a:	b1 e0       	ldi	r27, 0x01	; 1
    235c:	eb e0       	ldi	r30, 0x0B	; 11
    235e:	f1 e0       	ldi	r31, 0x01	; 1
    2360:	80 81       	ld	r24, Z
    2362:	8f 7d       	andi	r24, 0xDF	; 223
    2364:	8c 93       	st	X, r24
                PORTStepper3 &= ~(1 << PStepper3_3);
    2366:	ab e0       	ldi	r26, 0x0B	; 11
    2368:	b1 e0       	ldi	r27, 0x01	; 1
    236a:	eb e0       	ldi	r30, 0x0B	; 11
    236c:	f1 e0       	ldi	r31, 0x01	; 1
    236e:	80 81       	ld	r24, Z
    2370:	87 7f       	andi	r24, 0xF7	; 247
    2372:	8c 93       	st	X, r24
                PORTStepper3 |= (1 << PStepper3_4);
    2374:	ab e0       	ldi	r26, 0x0B	; 11
    2376:	b1 e0       	ldi	r27, 0x01	; 1
    2378:	eb e0       	ldi	r30, 0x0B	; 11
    237a:	f1 e0       	ldi	r31, 0x01	; 1
    237c:	80 81       	ld	r24, Z
    237e:	82 60       	ori	r24, 0x02	; 2
    2380:	8c 93       	st	X, r24
                break;
            }
           // _delay_us(delaytime_stepper);
           for(int d = 0; d < delaytime_StepperForLoop;d++)
    2382:	1a 82       	std	Y+2, r1	; 0x02
    2384:	19 82       	std	Y+1, r1	; 0x01
    2386:	05 c0       	rjmp	.+10     	; 0x2392 <__stack+0x193>
    2388:	89 81       	ldd	r24, Y+1	; 0x01
    238a:	9a 81       	ldd	r25, Y+2	; 0x02
    238c:	01 96       	adiw	r24, 0x01	; 1
    238e:	9a 83       	std	Y+2, r25	; 0x02
    2390:	89 83       	std	Y+1, r24	; 0x01
    2392:	89 81       	ldd	r24, Y+1	; 0x01
    2394:	9a 81       	ldd	r25, Y+2	; 0x02
    2396:	23 e0       	ldi	r18, 0x03	; 3
    2398:	84 38       	cpi	r24, 0x84	; 132
    239a:	92 07       	cpc	r25, r18
    239c:	ac f3       	brlt	.-22     	; 0x2388 <__stack+0x189>
        a = 0;
    }
    while(a  == 2)
    {
        int i;
        for(i = 8; i > 0; --i)
    239e:	8b 81       	ldd	r24, Y+3	; 0x03
    23a0:	9c 81       	ldd	r25, Y+4	; 0x04
    23a2:	01 97       	sbiw	r24, 0x01	; 1
    23a4:	9c 83       	std	Y+4, r25	; 0x04
    23a6:	8b 83       	std	Y+3, r24	; 0x03
    23a8:	8b 81       	ldd	r24, Y+3	; 0x03
    23aa:	9c 81       	ldd	r25, Y+4	; 0x04
    23ac:	18 16       	cp	r1, r24
    23ae:	19 06       	cpc	r1, r25
    23b0:	0c f4       	brge	.+2      	; 0x23b4 <__stack+0x1b5>
    23b2:	c7 ce       	rjmp	.-626    	; 0x2142 <steppermotor3Write+0x2b4>
           for(int d = 0; d < delaytime_StepperForLoop;d++)
           {

           }
        }
        a = 0;
    23b4:	1a 86       	std	Y+10, r1	; 0x0a
    23b6:	19 86       	std	Y+9, r1	; 0x09

           }
        }
        a = 0;
    }
    while(a  == 2)
    23b8:	89 85       	ldd	r24, Y+9	; 0x09
    23ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    23bc:	82 30       	cpi	r24, 0x02	; 2
    23be:	91 05       	cpc	r25, r1
    23c0:	09 f4       	brne	.+2      	; 0x23c4 <__stack+0x1c5>
    23c2:	ba ce       	rjmp	.-652    	; 0x2138 <steppermotor3Write+0x2aa>

           }
        }
        a = 0;
    }
}
    23c4:	2e 96       	adiw	r28, 0x0e	; 14
    23c6:	0f b6       	in	r0, 0x3f	; 63
    23c8:	f8 94       	cli
    23ca:	de bf       	out	0x3e, r29	; 62
    23cc:	0f be       	out	0x3f, r0	; 63
    23ce:	cd bf       	out	0x3d, r28	; 61
    23d0:	cf 91       	pop	r28
    23d2:	df 91       	pop	r29
    23d4:	08 95       	ret

000023d6 <steppermotor4Write>:

void steppermotor4Write(int a)
{
    23d6:	df 93       	push	r29
    23d8:	cf 93       	push	r28
    23da:	cd b7       	in	r28, 0x3d	; 61
    23dc:	de b7       	in	r29, 0x3e	; 62
    23de:	2e 97       	sbiw	r28, 0x0e	; 14
    23e0:	0f b6       	in	r0, 0x3f	; 63
    23e2:	f8 94       	cli
    23e4:	de bf       	out	0x3e, r29	; 62
    23e6:	0f be       	out	0x3f, r0	; 63
    23e8:	cd bf       	out	0x3d, r28	; 61
    23ea:	9a 87       	std	Y+10, r25	; 0x0a
    23ec:	89 87       	std	Y+9, r24	; 0x09
    23ee:	41 c1       	rjmp	.+642    	; 0x2672 <steppermotor4Write+0x29c>
    while(a  == 1)
    {
        int i;
        for(i = 1; i < 8; i=i+1)
    23f0:	81 e0       	ldi	r24, 0x01	; 1
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	98 87       	std	Y+8, r25	; 0x08
    23f6:	8f 83       	std	Y+7, r24	; 0x07
    23f8:	34 c1       	rjmp	.+616    	; 0x2662 <steppermotor4Write+0x28c>
        {
            switch (i)
    23fa:	8f 81       	ldd	r24, Y+7	; 0x07
    23fc:	98 85       	ldd	r25, Y+8	; 0x08
    23fe:	9c 87       	std	Y+12, r25	; 0x0c
    2400:	8b 87       	std	Y+11, r24	; 0x0b
    2402:	8b 85       	ldd	r24, Y+11	; 0x0b
    2404:	9c 85       	ldd	r25, Y+12	; 0x0c
    2406:	84 30       	cpi	r24, 0x04	; 4
    2408:	91 05       	cpc	r25, r1
    240a:	09 f4       	brne	.+2      	; 0x240e <steppermotor4Write+0x38>
    240c:	87 c0       	rjmp	.+270    	; 0x251c <steppermotor4Write+0x146>
    240e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2410:	9c 85       	ldd	r25, Y+12	; 0x0c
    2412:	85 30       	cpi	r24, 0x05	; 5
    2414:	91 05       	cpc	r25, r1
    2416:	94 f4       	brge	.+36     	; 0x243c <steppermotor4Write+0x66>
    2418:	8b 85       	ldd	r24, Y+11	; 0x0b
    241a:	9c 85       	ldd	r25, Y+12	; 0x0c
    241c:	82 30       	cpi	r24, 0x02	; 2
    241e:	91 05       	cpc	r25, r1
    2420:	09 f4       	brne	.+2      	; 0x2424 <steppermotor4Write+0x4e>
    2422:	42 c0       	rjmp	.+132    	; 0x24a8 <steppermotor4Write+0xd2>
    2424:	8b 85       	ldd	r24, Y+11	; 0x0b
    2426:	9c 85       	ldd	r25, Y+12	; 0x0c
    2428:	83 30       	cpi	r24, 0x03	; 3
    242a:	91 05       	cpc	r25, r1
    242c:	0c f0       	brlt	.+2      	; 0x2430 <steppermotor4Write+0x5a>
    242e:	59 c0       	rjmp	.+178    	; 0x24e2 <steppermotor4Write+0x10c>
    2430:	8b 85       	ldd	r24, Y+11	; 0x0b
    2432:	9c 85       	ldd	r25, Y+12	; 0x0c
    2434:	81 30       	cpi	r24, 0x01	; 1
    2436:	91 05       	cpc	r25, r1
    2438:	d1 f0       	breq	.+52     	; 0x246e <steppermotor4Write+0x98>
    243a:	00 c1       	rjmp	.+512    	; 0x263c <steppermotor4Write+0x266>
    243c:	8b 85       	ldd	r24, Y+11	; 0x0b
    243e:	9c 85       	ldd	r25, Y+12	; 0x0c
    2440:	86 30       	cpi	r24, 0x06	; 6
    2442:	91 05       	cpc	r25, r1
    2444:	09 f4       	brne	.+2      	; 0x2448 <steppermotor4Write+0x72>
    2446:	a4 c0       	rjmp	.+328    	; 0x2590 <steppermotor4Write+0x1ba>
    2448:	8b 85       	ldd	r24, Y+11	; 0x0b
    244a:	9c 85       	ldd	r25, Y+12	; 0x0c
    244c:	86 30       	cpi	r24, 0x06	; 6
    244e:	91 05       	cpc	r25, r1
    2450:	0c f4       	brge	.+2      	; 0x2454 <steppermotor4Write+0x7e>
    2452:	81 c0       	rjmp	.+258    	; 0x2556 <steppermotor4Write+0x180>
    2454:	8b 85       	ldd	r24, Y+11	; 0x0b
    2456:	9c 85       	ldd	r25, Y+12	; 0x0c
    2458:	87 30       	cpi	r24, 0x07	; 7
    245a:	91 05       	cpc	r25, r1
    245c:	09 f4       	brne	.+2      	; 0x2460 <steppermotor4Write+0x8a>
    245e:	b5 c0       	rjmp	.+362    	; 0x25ca <steppermotor4Write+0x1f4>
    2460:	8b 85       	ldd	r24, Y+11	; 0x0b
    2462:	9c 85       	ldd	r25, Y+12	; 0x0c
    2464:	88 30       	cpi	r24, 0x08	; 8
    2466:	91 05       	cpc	r25, r1
    2468:	09 f4       	brne	.+2      	; 0x246c <steppermotor4Write+0x96>
    246a:	cc c0       	rjmp	.+408    	; 0x2604 <steppermotor4Write+0x22e>
    246c:	e7 c0       	rjmp	.+462    	; 0x263c <steppermotor4Write+0x266>
            {
            case 1 :
                PORTStepper4 |= (1 << PStepper4_1);
    246e:	ab e0       	ldi	r26, 0x0B	; 11
    2470:	b1 e0       	ldi	r27, 0x01	; 1
    2472:	eb e0       	ldi	r30, 0x0B	; 11
    2474:	f1 e0       	ldi	r31, 0x01	; 1
    2476:	80 81       	ld	r24, Z
    2478:	80 64       	ori	r24, 0x40	; 64
    247a:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_2);
    247c:	ab e0       	ldi	r26, 0x0B	; 11
    247e:	b1 e0       	ldi	r27, 0x01	; 1
    2480:	eb e0       	ldi	r30, 0x0B	; 11
    2482:	f1 e0       	ldi	r31, 0x01	; 1
    2484:	80 81       	ld	r24, Z
    2486:	8f 7e       	andi	r24, 0xEF	; 239
    2488:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_3);
    248a:	ab e0       	ldi	r26, 0x0B	; 11
    248c:	b1 e0       	ldi	r27, 0x01	; 1
    248e:	eb e0       	ldi	r30, 0x0B	; 11
    2490:	f1 e0       	ldi	r31, 0x01	; 1
    2492:	80 81       	ld	r24, Z
    2494:	8b 7f       	andi	r24, 0xFB	; 251
    2496:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_4);
    2498:	ab e0       	ldi	r26, 0x0B	; 11
    249a:	b1 e0       	ldi	r27, 0x01	; 1
    249c:	eb e0       	ldi	r30, 0x0B	; 11
    249e:	f1 e0       	ldi	r31, 0x01	; 1
    24a0:	80 81       	ld	r24, Z
    24a2:	8e 7f       	andi	r24, 0xFE	; 254
    24a4:	8c 93       	st	X, r24
    24a6:	ca c0       	rjmp	.+404    	; 0x263c <steppermotor4Write+0x266>
                break;
            case 2 :
                PORTStepper4 |= (1 << PStepper4_1);
    24a8:	ab e0       	ldi	r26, 0x0B	; 11
    24aa:	b1 e0       	ldi	r27, 0x01	; 1
    24ac:	eb e0       	ldi	r30, 0x0B	; 11
    24ae:	f1 e0       	ldi	r31, 0x01	; 1
    24b0:	80 81       	ld	r24, Z
    24b2:	80 64       	ori	r24, 0x40	; 64
    24b4:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_2);
    24b6:	ab e0       	ldi	r26, 0x0B	; 11
    24b8:	b1 e0       	ldi	r27, 0x01	; 1
    24ba:	eb e0       	ldi	r30, 0x0B	; 11
    24bc:	f1 e0       	ldi	r31, 0x01	; 1
    24be:	80 81       	ld	r24, Z
    24c0:	80 61       	ori	r24, 0x10	; 16
    24c2:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_3);
    24c4:	ab e0       	ldi	r26, 0x0B	; 11
    24c6:	b1 e0       	ldi	r27, 0x01	; 1
    24c8:	eb e0       	ldi	r30, 0x0B	; 11
    24ca:	f1 e0       	ldi	r31, 0x01	; 1
    24cc:	80 81       	ld	r24, Z
    24ce:	8b 7f       	andi	r24, 0xFB	; 251
    24d0:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_4);
    24d2:	ab e0       	ldi	r26, 0x0B	; 11
    24d4:	b1 e0       	ldi	r27, 0x01	; 1
    24d6:	eb e0       	ldi	r30, 0x0B	; 11
    24d8:	f1 e0       	ldi	r31, 0x01	; 1
    24da:	80 81       	ld	r24, Z
    24dc:	8e 7f       	andi	r24, 0xFE	; 254
    24de:	8c 93       	st	X, r24
    24e0:	ad c0       	rjmp	.+346    	; 0x263c <steppermotor4Write+0x266>
                break;
            case 3 :
                PORTStepper4 &= ~(1 << PStepper4_1);
    24e2:	ab e0       	ldi	r26, 0x0B	; 11
    24e4:	b1 e0       	ldi	r27, 0x01	; 1
    24e6:	eb e0       	ldi	r30, 0x0B	; 11
    24e8:	f1 e0       	ldi	r31, 0x01	; 1
    24ea:	80 81       	ld	r24, Z
    24ec:	8f 7b       	andi	r24, 0xBF	; 191
    24ee:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_2);
    24f0:	ab e0       	ldi	r26, 0x0B	; 11
    24f2:	b1 e0       	ldi	r27, 0x01	; 1
    24f4:	eb e0       	ldi	r30, 0x0B	; 11
    24f6:	f1 e0       	ldi	r31, 0x01	; 1
    24f8:	80 81       	ld	r24, Z
    24fa:	80 61       	ori	r24, 0x10	; 16
    24fc:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_3);
    24fe:	ab e0       	ldi	r26, 0x0B	; 11
    2500:	b1 e0       	ldi	r27, 0x01	; 1
    2502:	eb e0       	ldi	r30, 0x0B	; 11
    2504:	f1 e0       	ldi	r31, 0x01	; 1
    2506:	80 81       	ld	r24, Z
    2508:	8b 7f       	andi	r24, 0xFB	; 251
    250a:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_4);
    250c:	ab e0       	ldi	r26, 0x0B	; 11
    250e:	b1 e0       	ldi	r27, 0x01	; 1
    2510:	eb e0       	ldi	r30, 0x0B	; 11
    2512:	f1 e0       	ldi	r31, 0x01	; 1
    2514:	80 81       	ld	r24, Z
    2516:	8e 7f       	andi	r24, 0xFE	; 254
    2518:	8c 93       	st	X, r24
    251a:	90 c0       	rjmp	.+288    	; 0x263c <steppermotor4Write+0x266>
                break;
            case 4 :
                PORTStepper4 &= ~(1 << PStepper4_1);
    251c:	ab e0       	ldi	r26, 0x0B	; 11
    251e:	b1 e0       	ldi	r27, 0x01	; 1
    2520:	eb e0       	ldi	r30, 0x0B	; 11
    2522:	f1 e0       	ldi	r31, 0x01	; 1
    2524:	80 81       	ld	r24, Z
    2526:	8f 7b       	andi	r24, 0xBF	; 191
    2528:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_2);
    252a:	ab e0       	ldi	r26, 0x0B	; 11
    252c:	b1 e0       	ldi	r27, 0x01	; 1
    252e:	eb e0       	ldi	r30, 0x0B	; 11
    2530:	f1 e0       	ldi	r31, 0x01	; 1
    2532:	80 81       	ld	r24, Z
    2534:	80 61       	ori	r24, 0x10	; 16
    2536:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_3);
    2538:	ab e0       	ldi	r26, 0x0B	; 11
    253a:	b1 e0       	ldi	r27, 0x01	; 1
    253c:	eb e0       	ldi	r30, 0x0B	; 11
    253e:	f1 e0       	ldi	r31, 0x01	; 1
    2540:	80 81       	ld	r24, Z
    2542:	84 60       	ori	r24, 0x04	; 4
    2544:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_4);
    2546:	ab e0       	ldi	r26, 0x0B	; 11
    2548:	b1 e0       	ldi	r27, 0x01	; 1
    254a:	eb e0       	ldi	r30, 0x0B	; 11
    254c:	f1 e0       	ldi	r31, 0x01	; 1
    254e:	80 81       	ld	r24, Z
    2550:	8e 7f       	andi	r24, 0xFE	; 254
    2552:	8c 93       	st	X, r24
    2554:	73 c0       	rjmp	.+230    	; 0x263c <steppermotor4Write+0x266>
                break;
            case 5 :
                PORTStepper4 &= ~(1 << PStepper4_1);
    2556:	ab e0       	ldi	r26, 0x0B	; 11
    2558:	b1 e0       	ldi	r27, 0x01	; 1
    255a:	eb e0       	ldi	r30, 0x0B	; 11
    255c:	f1 e0       	ldi	r31, 0x01	; 1
    255e:	80 81       	ld	r24, Z
    2560:	8f 7b       	andi	r24, 0xBF	; 191
    2562:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_2);
    2564:	ab e0       	ldi	r26, 0x0B	; 11
    2566:	b1 e0       	ldi	r27, 0x01	; 1
    2568:	eb e0       	ldi	r30, 0x0B	; 11
    256a:	f1 e0       	ldi	r31, 0x01	; 1
    256c:	80 81       	ld	r24, Z
    256e:	8f 7e       	andi	r24, 0xEF	; 239
    2570:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_3);
    2572:	ab e0       	ldi	r26, 0x0B	; 11
    2574:	b1 e0       	ldi	r27, 0x01	; 1
    2576:	eb e0       	ldi	r30, 0x0B	; 11
    2578:	f1 e0       	ldi	r31, 0x01	; 1
    257a:	80 81       	ld	r24, Z
    257c:	84 60       	ori	r24, 0x04	; 4
    257e:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_4);
    2580:	ab e0       	ldi	r26, 0x0B	; 11
    2582:	b1 e0       	ldi	r27, 0x01	; 1
    2584:	eb e0       	ldi	r30, 0x0B	; 11
    2586:	f1 e0       	ldi	r31, 0x01	; 1
    2588:	80 81       	ld	r24, Z
    258a:	8e 7f       	andi	r24, 0xFE	; 254
    258c:	8c 93       	st	X, r24
    258e:	56 c0       	rjmp	.+172    	; 0x263c <steppermotor4Write+0x266>
                break;
            case 6 :
                PORTStepper4 &= ~(1 << PStepper4_1);
    2590:	ab e0       	ldi	r26, 0x0B	; 11
    2592:	b1 e0       	ldi	r27, 0x01	; 1
    2594:	eb e0       	ldi	r30, 0x0B	; 11
    2596:	f1 e0       	ldi	r31, 0x01	; 1
    2598:	80 81       	ld	r24, Z
    259a:	8f 7b       	andi	r24, 0xBF	; 191
    259c:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_2);
    259e:	ab e0       	ldi	r26, 0x0B	; 11
    25a0:	b1 e0       	ldi	r27, 0x01	; 1
    25a2:	eb e0       	ldi	r30, 0x0B	; 11
    25a4:	f1 e0       	ldi	r31, 0x01	; 1
    25a6:	80 81       	ld	r24, Z
    25a8:	8f 7e       	andi	r24, 0xEF	; 239
    25aa:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_3);
    25ac:	ab e0       	ldi	r26, 0x0B	; 11
    25ae:	b1 e0       	ldi	r27, 0x01	; 1
    25b0:	eb e0       	ldi	r30, 0x0B	; 11
    25b2:	f1 e0       	ldi	r31, 0x01	; 1
    25b4:	80 81       	ld	r24, Z
    25b6:	84 60       	ori	r24, 0x04	; 4
    25b8:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_4);
    25ba:	ab e0       	ldi	r26, 0x0B	; 11
    25bc:	b1 e0       	ldi	r27, 0x01	; 1
    25be:	eb e0       	ldi	r30, 0x0B	; 11
    25c0:	f1 e0       	ldi	r31, 0x01	; 1
    25c2:	80 81       	ld	r24, Z
    25c4:	81 60       	ori	r24, 0x01	; 1
    25c6:	8c 93       	st	X, r24
    25c8:	39 c0       	rjmp	.+114    	; 0x263c <steppermotor4Write+0x266>
                break;
            case 7 :
                PORTStepper4 &= ~(1 << PStepper4_1);
    25ca:	ab e0       	ldi	r26, 0x0B	; 11
    25cc:	b1 e0       	ldi	r27, 0x01	; 1
    25ce:	eb e0       	ldi	r30, 0x0B	; 11
    25d0:	f1 e0       	ldi	r31, 0x01	; 1
    25d2:	80 81       	ld	r24, Z
    25d4:	8f 7b       	andi	r24, 0xBF	; 191
    25d6:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_2);
    25d8:	ab e0       	ldi	r26, 0x0B	; 11
    25da:	b1 e0       	ldi	r27, 0x01	; 1
    25dc:	eb e0       	ldi	r30, 0x0B	; 11
    25de:	f1 e0       	ldi	r31, 0x01	; 1
    25e0:	80 81       	ld	r24, Z
    25e2:	8f 7e       	andi	r24, 0xEF	; 239
    25e4:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_3);
    25e6:	ab e0       	ldi	r26, 0x0B	; 11
    25e8:	b1 e0       	ldi	r27, 0x01	; 1
    25ea:	eb e0       	ldi	r30, 0x0B	; 11
    25ec:	f1 e0       	ldi	r31, 0x01	; 1
    25ee:	80 81       	ld	r24, Z
    25f0:	8b 7f       	andi	r24, 0xFB	; 251
    25f2:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_4);
    25f4:	ab e0       	ldi	r26, 0x0B	; 11
    25f6:	b1 e0       	ldi	r27, 0x01	; 1
    25f8:	eb e0       	ldi	r30, 0x0B	; 11
    25fa:	f1 e0       	ldi	r31, 0x01	; 1
    25fc:	80 81       	ld	r24, Z
    25fe:	81 60       	ori	r24, 0x01	; 1
    2600:	8c 93       	st	X, r24
    2602:	1c c0       	rjmp	.+56     	; 0x263c <steppermotor4Write+0x266>
                break;
            case 8 :
                PORTStepper4 |= (1 << PStepper4_1);
    2604:	ab e0       	ldi	r26, 0x0B	; 11
    2606:	b1 e0       	ldi	r27, 0x01	; 1
    2608:	eb e0       	ldi	r30, 0x0B	; 11
    260a:	f1 e0       	ldi	r31, 0x01	; 1
    260c:	80 81       	ld	r24, Z
    260e:	80 64       	ori	r24, 0x40	; 64
    2610:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_2);
    2612:	ab e0       	ldi	r26, 0x0B	; 11
    2614:	b1 e0       	ldi	r27, 0x01	; 1
    2616:	eb e0       	ldi	r30, 0x0B	; 11
    2618:	f1 e0       	ldi	r31, 0x01	; 1
    261a:	80 81       	ld	r24, Z
    261c:	8f 7e       	andi	r24, 0xEF	; 239
    261e:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_3);
    2620:	ab e0       	ldi	r26, 0x0B	; 11
    2622:	b1 e0       	ldi	r27, 0x01	; 1
    2624:	eb e0       	ldi	r30, 0x0B	; 11
    2626:	f1 e0       	ldi	r31, 0x01	; 1
    2628:	80 81       	ld	r24, Z
    262a:	8b 7f       	andi	r24, 0xFB	; 251
    262c:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_4);
    262e:	ab e0       	ldi	r26, 0x0B	; 11
    2630:	b1 e0       	ldi	r27, 0x01	; 1
    2632:	eb e0       	ldi	r30, 0x0B	; 11
    2634:	f1 e0       	ldi	r31, 0x01	; 1
    2636:	80 81       	ld	r24, Z
    2638:	81 60       	ori	r24, 0x01	; 1
    263a:	8c 93       	st	X, r24
                break;
            }
           // _delay_us(delaytime_stepper);
           for(int d = 0; d < delaytime_StepperForLoop;d++)
    263c:	1e 82       	std	Y+6, r1	; 0x06
    263e:	1d 82       	std	Y+5, r1	; 0x05
    2640:	05 c0       	rjmp	.+10     	; 0x264c <steppermotor4Write+0x276>
    2642:	8d 81       	ldd	r24, Y+5	; 0x05
    2644:	9e 81       	ldd	r25, Y+6	; 0x06
    2646:	01 96       	adiw	r24, 0x01	; 1
    2648:	9e 83       	std	Y+6, r25	; 0x06
    264a:	8d 83       	std	Y+5, r24	; 0x05
    264c:	8d 81       	ldd	r24, Y+5	; 0x05
    264e:	9e 81       	ldd	r25, Y+6	; 0x06
    2650:	23 e0       	ldi	r18, 0x03	; 3
    2652:	84 38       	cpi	r24, 0x84	; 132
    2654:	92 07       	cpc	r25, r18
    2656:	ac f3       	brlt	.-22     	; 0x2642 <steppermotor4Write+0x26c>
void steppermotor4Write(int a)
{
    while(a  == 1)
    {
        int i;
        for(i = 1; i < 8; i=i+1)
    2658:	8f 81       	ldd	r24, Y+7	; 0x07
    265a:	98 85       	ldd	r25, Y+8	; 0x08
    265c:	01 96       	adiw	r24, 0x01	; 1
    265e:	98 87       	std	Y+8, r25	; 0x08
    2660:	8f 83       	std	Y+7, r24	; 0x07
    2662:	8f 81       	ldd	r24, Y+7	; 0x07
    2664:	98 85       	ldd	r25, Y+8	; 0x08
    2666:	88 30       	cpi	r24, 0x08	; 8
    2668:	91 05       	cpc	r25, r1
    266a:	0c f4       	brge	.+2      	; 0x266e <steppermotor4Write+0x298>
    266c:	c6 ce       	rjmp	.-628    	; 0x23fa <steppermotor4Write+0x24>
           for(int d = 0; d < delaytime_StepperForLoop;d++)
           {

           }
        }
        a = 0;
    266e:	1a 86       	std	Y+10, r1	; 0x0a
    2670:	19 86       	std	Y+9, r1	; 0x09
    }
}

void steppermotor4Write(int a)
{
    while(a  == 1)
    2672:	89 85       	ldd	r24, Y+9	; 0x09
    2674:	9a 85       	ldd	r25, Y+10	; 0x0a
    2676:	81 30       	cpi	r24, 0x01	; 1
    2678:	91 05       	cpc	r25, r1
    267a:	09 f4       	brne	.+2      	; 0x267e <steppermotor4Write+0x2a8>
    267c:	b9 ce       	rjmp	.-654    	; 0x23f0 <steppermotor4Write+0x1a>
    267e:	40 c1       	rjmp	.+640    	; 0x2900 <steppermotor4Write+0x52a>
        a = 0;
    }
    while(a  == 2)
    {
        int i;
        for(i = 8; i > 0; --i)
    2680:	88 e0       	ldi	r24, 0x08	; 8
    2682:	90 e0       	ldi	r25, 0x00	; 0
    2684:	9c 83       	std	Y+4, r25	; 0x04
    2686:	8b 83       	std	Y+3, r24	; 0x03
    2688:	33 c1       	rjmp	.+614    	; 0x28f0 <steppermotor4Write+0x51a>
        {
            switch (i)
    268a:	8b 81       	ldd	r24, Y+3	; 0x03
    268c:	9c 81       	ldd	r25, Y+4	; 0x04
    268e:	9e 87       	std	Y+14, r25	; 0x0e
    2690:	8d 87       	std	Y+13, r24	; 0x0d
    2692:	8d 85       	ldd	r24, Y+13	; 0x0d
    2694:	9e 85       	ldd	r25, Y+14	; 0x0e
    2696:	84 30       	cpi	r24, 0x04	; 4
    2698:	91 05       	cpc	r25, r1
    269a:	09 f4       	brne	.+2      	; 0x269e <steppermotor4Write+0x2c8>
    269c:	a3 c0       	rjmp	.+326    	; 0x27e4 <steppermotor4Write+0x40e>
    269e:	8d 85       	ldd	r24, Y+13	; 0x0d
    26a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    26a2:	85 30       	cpi	r24, 0x05	; 5
    26a4:	91 05       	cpc	r25, r1
    26a6:	94 f4       	brge	.+36     	; 0x26cc <steppermotor4Write+0x2f6>
    26a8:	8d 85       	ldd	r24, Y+13	; 0x0d
    26aa:	9e 85       	ldd	r25, Y+14	; 0x0e
    26ac:	82 30       	cpi	r24, 0x02	; 2
    26ae:	91 05       	cpc	r25, r1
    26b0:	09 f4       	brne	.+2      	; 0x26b4 <steppermotor4Write+0x2de>
    26b2:	5e c0       	rjmp	.+188    	; 0x2770 <steppermotor4Write+0x39a>
    26b4:	8d 85       	ldd	r24, Y+13	; 0x0d
    26b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    26b8:	83 30       	cpi	r24, 0x03	; 3
    26ba:	91 05       	cpc	r25, r1
    26bc:	0c f0       	brlt	.+2      	; 0x26c0 <steppermotor4Write+0x2ea>
    26be:	75 c0       	rjmp	.+234    	; 0x27aa <steppermotor4Write+0x3d4>
    26c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    26c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    26c4:	81 30       	cpi	r24, 0x01	; 1
    26c6:	91 05       	cpc	r25, r1
    26c8:	b1 f1       	breq	.+108    	; 0x2736 <steppermotor4Write+0x360>
    26ca:	ff c0       	rjmp	.+510    	; 0x28ca <steppermotor4Write+0x4f4>
    26cc:	8d 85       	ldd	r24, Y+13	; 0x0d
    26ce:	9e 85       	ldd	r25, Y+14	; 0x0e
    26d0:	86 30       	cpi	r24, 0x06	; 6
    26d2:	91 05       	cpc	r25, r1
    26d4:	09 f4       	brne	.+2      	; 0x26d8 <steppermotor4Write+0x302>
    26d6:	c0 c0       	rjmp	.+384    	; 0x2858 <steppermotor4Write+0x482>
    26d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    26da:	9e 85       	ldd	r25, Y+14	; 0x0e
    26dc:	86 30       	cpi	r24, 0x06	; 6
    26de:	91 05       	cpc	r25, r1
    26e0:	0c f4       	brge	.+2      	; 0x26e4 <steppermotor4Write+0x30e>
    26e2:	9d c0       	rjmp	.+314    	; 0x281e <steppermotor4Write+0x448>
    26e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    26e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    26e8:	87 30       	cpi	r24, 0x07	; 7
    26ea:	91 05       	cpc	r25, r1
    26ec:	09 f4       	brne	.+2      	; 0x26f0 <steppermotor4Write+0x31a>
    26ee:	d1 c0       	rjmp	.+418    	; 0x2892 <steppermotor4Write+0x4bc>
    26f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    26f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    26f4:	88 30       	cpi	r24, 0x08	; 8
    26f6:	91 05       	cpc	r25, r1
    26f8:	09 f0       	breq	.+2      	; 0x26fc <steppermotor4Write+0x326>
    26fa:	e7 c0       	rjmp	.+462    	; 0x28ca <steppermotor4Write+0x4f4>
            {
            case 8 :
                PORTStepper4 |= (1 << PStepper4_1);
    26fc:	ab e0       	ldi	r26, 0x0B	; 11
    26fe:	b1 e0       	ldi	r27, 0x01	; 1
    2700:	eb e0       	ldi	r30, 0x0B	; 11
    2702:	f1 e0       	ldi	r31, 0x01	; 1
    2704:	80 81       	ld	r24, Z
    2706:	80 64       	ori	r24, 0x40	; 64
    2708:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_2);
    270a:	ab e0       	ldi	r26, 0x0B	; 11
    270c:	b1 e0       	ldi	r27, 0x01	; 1
    270e:	eb e0       	ldi	r30, 0x0B	; 11
    2710:	f1 e0       	ldi	r31, 0x01	; 1
    2712:	80 81       	ld	r24, Z
    2714:	8f 7e       	andi	r24, 0xEF	; 239
    2716:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_3);
    2718:	ab e0       	ldi	r26, 0x0B	; 11
    271a:	b1 e0       	ldi	r27, 0x01	; 1
    271c:	eb e0       	ldi	r30, 0x0B	; 11
    271e:	f1 e0       	ldi	r31, 0x01	; 1
    2720:	80 81       	ld	r24, Z
    2722:	8b 7f       	andi	r24, 0xFB	; 251
    2724:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_4);
    2726:	ab e0       	ldi	r26, 0x0B	; 11
    2728:	b1 e0       	ldi	r27, 0x01	; 1
    272a:	eb e0       	ldi	r30, 0x0B	; 11
    272c:	f1 e0       	ldi	r31, 0x01	; 1
    272e:	80 81       	ld	r24, Z
    2730:	8e 7f       	andi	r24, 0xFE	; 254
    2732:	8c 93       	st	X, r24
    2734:	ca c0       	rjmp	.+404    	; 0x28ca <steppermotor4Write+0x4f4>
                break;
            case 1 :
                PORTStepper4 |= (1 << PStepper4_1);
    2736:	ab e0       	ldi	r26, 0x0B	; 11
    2738:	b1 e0       	ldi	r27, 0x01	; 1
    273a:	eb e0       	ldi	r30, 0x0B	; 11
    273c:	f1 e0       	ldi	r31, 0x01	; 1
    273e:	80 81       	ld	r24, Z
    2740:	80 64       	ori	r24, 0x40	; 64
    2742:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_2);
    2744:	ab e0       	ldi	r26, 0x0B	; 11
    2746:	b1 e0       	ldi	r27, 0x01	; 1
    2748:	eb e0       	ldi	r30, 0x0B	; 11
    274a:	f1 e0       	ldi	r31, 0x01	; 1
    274c:	80 81       	ld	r24, Z
    274e:	80 61       	ori	r24, 0x10	; 16
    2750:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_3);
    2752:	ab e0       	ldi	r26, 0x0B	; 11
    2754:	b1 e0       	ldi	r27, 0x01	; 1
    2756:	eb e0       	ldi	r30, 0x0B	; 11
    2758:	f1 e0       	ldi	r31, 0x01	; 1
    275a:	80 81       	ld	r24, Z
    275c:	8b 7f       	andi	r24, 0xFB	; 251
    275e:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_4);
    2760:	ab e0       	ldi	r26, 0x0B	; 11
    2762:	b1 e0       	ldi	r27, 0x01	; 1
    2764:	eb e0       	ldi	r30, 0x0B	; 11
    2766:	f1 e0       	ldi	r31, 0x01	; 1
    2768:	80 81       	ld	r24, Z
    276a:	8e 7f       	andi	r24, 0xFE	; 254
    276c:	8c 93       	st	X, r24
    276e:	ad c0       	rjmp	.+346    	; 0x28ca <steppermotor4Write+0x4f4>
                break;
            case 2 :
                PORTStepper4 &= ~(1 << PStepper4_1);
    2770:	ab e0       	ldi	r26, 0x0B	; 11
    2772:	b1 e0       	ldi	r27, 0x01	; 1
    2774:	eb e0       	ldi	r30, 0x0B	; 11
    2776:	f1 e0       	ldi	r31, 0x01	; 1
    2778:	80 81       	ld	r24, Z
    277a:	8f 7b       	andi	r24, 0xBF	; 191
    277c:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_2);
    277e:	ab e0       	ldi	r26, 0x0B	; 11
    2780:	b1 e0       	ldi	r27, 0x01	; 1
    2782:	eb e0       	ldi	r30, 0x0B	; 11
    2784:	f1 e0       	ldi	r31, 0x01	; 1
    2786:	80 81       	ld	r24, Z
    2788:	80 61       	ori	r24, 0x10	; 16
    278a:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_3);
    278c:	ab e0       	ldi	r26, 0x0B	; 11
    278e:	b1 e0       	ldi	r27, 0x01	; 1
    2790:	eb e0       	ldi	r30, 0x0B	; 11
    2792:	f1 e0       	ldi	r31, 0x01	; 1
    2794:	80 81       	ld	r24, Z
    2796:	8b 7f       	andi	r24, 0xFB	; 251
    2798:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_4);
    279a:	ab e0       	ldi	r26, 0x0B	; 11
    279c:	b1 e0       	ldi	r27, 0x01	; 1
    279e:	eb e0       	ldi	r30, 0x0B	; 11
    27a0:	f1 e0       	ldi	r31, 0x01	; 1
    27a2:	80 81       	ld	r24, Z
    27a4:	8e 7f       	andi	r24, 0xFE	; 254
    27a6:	8c 93       	st	X, r24
    27a8:	90 c0       	rjmp	.+288    	; 0x28ca <steppermotor4Write+0x4f4>
                break;
            case 3 :
                PORTStepper4 &= ~(1 << PStepper4_1);
    27aa:	ab e0       	ldi	r26, 0x0B	; 11
    27ac:	b1 e0       	ldi	r27, 0x01	; 1
    27ae:	eb e0       	ldi	r30, 0x0B	; 11
    27b0:	f1 e0       	ldi	r31, 0x01	; 1
    27b2:	80 81       	ld	r24, Z
    27b4:	8f 7b       	andi	r24, 0xBF	; 191
    27b6:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_2);
    27b8:	ab e0       	ldi	r26, 0x0B	; 11
    27ba:	b1 e0       	ldi	r27, 0x01	; 1
    27bc:	eb e0       	ldi	r30, 0x0B	; 11
    27be:	f1 e0       	ldi	r31, 0x01	; 1
    27c0:	80 81       	ld	r24, Z
    27c2:	80 61       	ori	r24, 0x10	; 16
    27c4:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_3);
    27c6:	ab e0       	ldi	r26, 0x0B	; 11
    27c8:	b1 e0       	ldi	r27, 0x01	; 1
    27ca:	eb e0       	ldi	r30, 0x0B	; 11
    27cc:	f1 e0       	ldi	r31, 0x01	; 1
    27ce:	80 81       	ld	r24, Z
    27d0:	84 60       	ori	r24, 0x04	; 4
    27d2:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_4);
    27d4:	ab e0       	ldi	r26, 0x0B	; 11
    27d6:	b1 e0       	ldi	r27, 0x01	; 1
    27d8:	eb e0       	ldi	r30, 0x0B	; 11
    27da:	f1 e0       	ldi	r31, 0x01	; 1
    27dc:	80 81       	ld	r24, Z
    27de:	8e 7f       	andi	r24, 0xFE	; 254
    27e0:	8c 93       	st	X, r24
    27e2:	73 c0       	rjmp	.+230    	; 0x28ca <steppermotor4Write+0x4f4>
                break;
            case 4 :
                PORTStepper4 &= ~(1 << PStepper4_1);
    27e4:	ab e0       	ldi	r26, 0x0B	; 11
    27e6:	b1 e0       	ldi	r27, 0x01	; 1
    27e8:	eb e0       	ldi	r30, 0x0B	; 11
    27ea:	f1 e0       	ldi	r31, 0x01	; 1
    27ec:	80 81       	ld	r24, Z
    27ee:	8f 7b       	andi	r24, 0xBF	; 191
    27f0:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_2);
    27f2:	ab e0       	ldi	r26, 0x0B	; 11
    27f4:	b1 e0       	ldi	r27, 0x01	; 1
    27f6:	eb e0       	ldi	r30, 0x0B	; 11
    27f8:	f1 e0       	ldi	r31, 0x01	; 1
    27fa:	80 81       	ld	r24, Z
    27fc:	8f 7e       	andi	r24, 0xEF	; 239
    27fe:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_3);
    2800:	ab e0       	ldi	r26, 0x0B	; 11
    2802:	b1 e0       	ldi	r27, 0x01	; 1
    2804:	eb e0       	ldi	r30, 0x0B	; 11
    2806:	f1 e0       	ldi	r31, 0x01	; 1
    2808:	80 81       	ld	r24, Z
    280a:	84 60       	ori	r24, 0x04	; 4
    280c:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_4);
    280e:	ab e0       	ldi	r26, 0x0B	; 11
    2810:	b1 e0       	ldi	r27, 0x01	; 1
    2812:	eb e0       	ldi	r30, 0x0B	; 11
    2814:	f1 e0       	ldi	r31, 0x01	; 1
    2816:	80 81       	ld	r24, Z
    2818:	8e 7f       	andi	r24, 0xFE	; 254
    281a:	8c 93       	st	X, r24
    281c:	56 c0       	rjmp	.+172    	; 0x28ca <steppermotor4Write+0x4f4>
                break;
            case 5 :
                PORTStepper4 &= ~(1 << PStepper4_1);
    281e:	ab e0       	ldi	r26, 0x0B	; 11
    2820:	b1 e0       	ldi	r27, 0x01	; 1
    2822:	eb e0       	ldi	r30, 0x0B	; 11
    2824:	f1 e0       	ldi	r31, 0x01	; 1
    2826:	80 81       	ld	r24, Z
    2828:	8f 7b       	andi	r24, 0xBF	; 191
    282a:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_2);
    282c:	ab e0       	ldi	r26, 0x0B	; 11
    282e:	b1 e0       	ldi	r27, 0x01	; 1
    2830:	eb e0       	ldi	r30, 0x0B	; 11
    2832:	f1 e0       	ldi	r31, 0x01	; 1
    2834:	80 81       	ld	r24, Z
    2836:	8f 7e       	andi	r24, 0xEF	; 239
    2838:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_3);
    283a:	ab e0       	ldi	r26, 0x0B	; 11
    283c:	b1 e0       	ldi	r27, 0x01	; 1
    283e:	eb e0       	ldi	r30, 0x0B	; 11
    2840:	f1 e0       	ldi	r31, 0x01	; 1
    2842:	80 81       	ld	r24, Z
    2844:	84 60       	ori	r24, 0x04	; 4
    2846:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_4);
    2848:	ab e0       	ldi	r26, 0x0B	; 11
    284a:	b1 e0       	ldi	r27, 0x01	; 1
    284c:	eb e0       	ldi	r30, 0x0B	; 11
    284e:	f1 e0       	ldi	r31, 0x01	; 1
    2850:	80 81       	ld	r24, Z
    2852:	81 60       	ori	r24, 0x01	; 1
    2854:	8c 93       	st	X, r24
    2856:	39 c0       	rjmp	.+114    	; 0x28ca <steppermotor4Write+0x4f4>
                break;
            case 6 :
                PORTStepper4 &= ~(1 << PStepper4_1);
    2858:	ab e0       	ldi	r26, 0x0B	; 11
    285a:	b1 e0       	ldi	r27, 0x01	; 1
    285c:	eb e0       	ldi	r30, 0x0B	; 11
    285e:	f1 e0       	ldi	r31, 0x01	; 1
    2860:	80 81       	ld	r24, Z
    2862:	8f 7b       	andi	r24, 0xBF	; 191
    2864:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_2);
    2866:	ab e0       	ldi	r26, 0x0B	; 11
    2868:	b1 e0       	ldi	r27, 0x01	; 1
    286a:	eb e0       	ldi	r30, 0x0B	; 11
    286c:	f1 e0       	ldi	r31, 0x01	; 1
    286e:	80 81       	ld	r24, Z
    2870:	8f 7e       	andi	r24, 0xEF	; 239
    2872:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_3);
    2874:	ab e0       	ldi	r26, 0x0B	; 11
    2876:	b1 e0       	ldi	r27, 0x01	; 1
    2878:	eb e0       	ldi	r30, 0x0B	; 11
    287a:	f1 e0       	ldi	r31, 0x01	; 1
    287c:	80 81       	ld	r24, Z
    287e:	8b 7f       	andi	r24, 0xFB	; 251
    2880:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_4);
    2882:	ab e0       	ldi	r26, 0x0B	; 11
    2884:	b1 e0       	ldi	r27, 0x01	; 1
    2886:	eb e0       	ldi	r30, 0x0B	; 11
    2888:	f1 e0       	ldi	r31, 0x01	; 1
    288a:	80 81       	ld	r24, Z
    288c:	81 60       	ori	r24, 0x01	; 1
    288e:	8c 93       	st	X, r24
    2890:	1c c0       	rjmp	.+56     	; 0x28ca <steppermotor4Write+0x4f4>
                break;
            case 7 :
                PORTStepper4 |= (1 << PStepper4_1);
    2892:	ab e0       	ldi	r26, 0x0B	; 11
    2894:	b1 e0       	ldi	r27, 0x01	; 1
    2896:	eb e0       	ldi	r30, 0x0B	; 11
    2898:	f1 e0       	ldi	r31, 0x01	; 1
    289a:	80 81       	ld	r24, Z
    289c:	80 64       	ori	r24, 0x40	; 64
    289e:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_2);
    28a0:	ab e0       	ldi	r26, 0x0B	; 11
    28a2:	b1 e0       	ldi	r27, 0x01	; 1
    28a4:	eb e0       	ldi	r30, 0x0B	; 11
    28a6:	f1 e0       	ldi	r31, 0x01	; 1
    28a8:	80 81       	ld	r24, Z
    28aa:	8f 7e       	andi	r24, 0xEF	; 239
    28ac:	8c 93       	st	X, r24
                PORTStepper4 &= ~(1 << PStepper4_3);
    28ae:	ab e0       	ldi	r26, 0x0B	; 11
    28b0:	b1 e0       	ldi	r27, 0x01	; 1
    28b2:	eb e0       	ldi	r30, 0x0B	; 11
    28b4:	f1 e0       	ldi	r31, 0x01	; 1
    28b6:	80 81       	ld	r24, Z
    28b8:	8b 7f       	andi	r24, 0xFB	; 251
    28ba:	8c 93       	st	X, r24
                PORTStepper4 |= (1 << PStepper4_4);
    28bc:	ab e0       	ldi	r26, 0x0B	; 11
    28be:	b1 e0       	ldi	r27, 0x01	; 1
    28c0:	eb e0       	ldi	r30, 0x0B	; 11
    28c2:	f1 e0       	ldi	r31, 0x01	; 1
    28c4:	80 81       	ld	r24, Z
    28c6:	81 60       	ori	r24, 0x01	; 1
    28c8:	8c 93       	st	X, r24
                break;
            }
           // _delay_us(delaytime_stepper);
           for(int d = 0; d < delaytime_StepperForLoop;d++)
    28ca:	1a 82       	std	Y+2, r1	; 0x02
    28cc:	19 82       	std	Y+1, r1	; 0x01
    28ce:	05 c0       	rjmp	.+10     	; 0x28da <steppermotor4Write+0x504>
    28d0:	89 81       	ldd	r24, Y+1	; 0x01
    28d2:	9a 81       	ldd	r25, Y+2	; 0x02
    28d4:	01 96       	adiw	r24, 0x01	; 1
    28d6:	9a 83       	std	Y+2, r25	; 0x02
    28d8:	89 83       	std	Y+1, r24	; 0x01
    28da:	89 81       	ldd	r24, Y+1	; 0x01
    28dc:	9a 81       	ldd	r25, Y+2	; 0x02
    28de:	23 e0       	ldi	r18, 0x03	; 3
    28e0:	84 38       	cpi	r24, 0x84	; 132
    28e2:	92 07       	cpc	r25, r18
    28e4:	ac f3       	brlt	.-22     	; 0x28d0 <steppermotor4Write+0x4fa>
        a = 0;
    }
    while(a  == 2)
    {
        int i;
        for(i = 8; i > 0; --i)
    28e6:	8b 81       	ldd	r24, Y+3	; 0x03
    28e8:	9c 81       	ldd	r25, Y+4	; 0x04
    28ea:	01 97       	sbiw	r24, 0x01	; 1
    28ec:	9c 83       	std	Y+4, r25	; 0x04
    28ee:	8b 83       	std	Y+3, r24	; 0x03
    28f0:	8b 81       	ldd	r24, Y+3	; 0x03
    28f2:	9c 81       	ldd	r25, Y+4	; 0x04
    28f4:	18 16       	cp	r1, r24
    28f6:	19 06       	cpc	r1, r25
    28f8:	0c f4       	brge	.+2      	; 0x28fc <steppermotor4Write+0x526>
    28fa:	c7 ce       	rjmp	.-626    	; 0x268a <steppermotor4Write+0x2b4>
           for(int d = 0; d < delaytime_StepperForLoop;d++)
           {

           }
        }
        a = 0;
    28fc:	1a 86       	std	Y+10, r1	; 0x0a
    28fe:	19 86       	std	Y+9, r1	; 0x09

           }
        }
        a = 0;
    }
    while(a  == 2)
    2900:	89 85       	ldd	r24, Y+9	; 0x09
    2902:	9a 85       	ldd	r25, Y+10	; 0x0a
    2904:	82 30       	cpi	r24, 0x02	; 2
    2906:	91 05       	cpc	r25, r1
    2908:	09 f4       	brne	.+2      	; 0x290c <steppermotor4Write+0x536>
    290a:	ba ce       	rjmp	.-652    	; 0x2680 <steppermotor4Write+0x2aa>

           }
        }
        a = 0;
    }
}
    290c:	2e 96       	adiw	r28, 0x0e	; 14
    290e:	0f b6       	in	r0, 0x3f	; 63
    2910:	f8 94       	cli
    2912:	de bf       	out	0x3e, r29	; 62
    2914:	0f be       	out	0x3f, r0	; 63
    2916:	cd bf       	out	0x3d, r28	; 61
    2918:	cf 91       	pop	r28
    291a:	df 91       	pop	r29
    291c:	08 95       	ret

0000291e <Vooruit>:

void Vooruit(int Steppermotortijd)
{
    291e:	df 93       	push	r29
    2920:	cf 93       	push	r28
    2922:	00 d0       	rcall	.+0      	; 0x2924 <Vooruit+0x6>
    2924:	0f 92       	push	r0
    2926:	cd b7       	in	r28, 0x3d	; 61
    2928:	de b7       	in	r29, 0x3e	; 62
    292a:	9c 83       	std	Y+4, r25	; 0x04
    292c:	8b 83       	std	Y+3, r24	; 0x03
    int j = 0;
    292e:	1a 82       	std	Y+2, r1	; 0x02
    2930:	19 82       	std	Y+1, r1	; 0x01
    2932:	15 c0       	rjmp	.+42     	; 0x295e <Vooruit+0x40>
    while (j< Steppermotortijd)
    {
        steppermotor1Write(1);
    2934:	81 e0       	ldi	r24, 0x01	; 1
    2936:	90 e0       	ldi	r25, 0x00	; 0
    2938:	0e 94 ff 09 	call	0x13fe	; 0x13fe <steppermotor1Write>
        steppermotor2Write(1);
    293c:	81 e0       	ldi	r24, 0x01	; 1
    293e:	90 e0       	ldi	r25, 0x00	; 0
    2940:	0e 94 a3 0c 	call	0x1946	; 0x1946 <steppermotor2Write>
        steppermotor3Write(1);
    2944:	81 e0       	ldi	r24, 0x01	; 1
    2946:	90 e0       	ldi	r25, 0x00	; 0
    2948:	0e 94 47 0f 	call	0x1e8e	; 0x1e8e <steppermotor3Write>
        steppermotor4Write(2);
    294c:	82 e0       	ldi	r24, 0x02	; 2
    294e:	90 e0       	ldi	r25, 0x00	; 0
    2950:	0e 94 eb 11 	call	0x23d6	; 0x23d6 <steppermotor4Write>
        j++;
    2954:	89 81       	ldd	r24, Y+1	; 0x01
    2956:	9a 81       	ldd	r25, Y+2	; 0x02
    2958:	01 96       	adiw	r24, 0x01	; 1
    295a:	9a 83       	std	Y+2, r25	; 0x02
    295c:	89 83       	std	Y+1, r24	; 0x01
}

void Vooruit(int Steppermotortijd)
{
    int j = 0;
    while (j< Steppermotortijd)
    295e:	29 81       	ldd	r18, Y+1	; 0x01
    2960:	3a 81       	ldd	r19, Y+2	; 0x02
    2962:	8b 81       	ldd	r24, Y+3	; 0x03
    2964:	9c 81       	ldd	r25, Y+4	; 0x04
    2966:	28 17       	cp	r18, r24
    2968:	39 07       	cpc	r19, r25
    296a:	24 f3       	brlt	.-56     	; 0x2934 <Vooruit+0x16>
        steppermotor2Write(1);
        steppermotor3Write(1);
        steppermotor4Write(2);
        j++;
    }
}
    296c:	0f 90       	pop	r0
    296e:	0f 90       	pop	r0
    2970:	0f 90       	pop	r0
    2972:	0f 90       	pop	r0
    2974:	cf 91       	pop	r28
    2976:	df 91       	pop	r29
    2978:	08 95       	ret

0000297a <Achteruit>:

void Achteruit(int Steppermotortijd)
{
    297a:	df 93       	push	r29
    297c:	cf 93       	push	r28
    297e:	00 d0       	rcall	.+0      	; 0x2980 <Achteruit+0x6>
    2980:	0f 92       	push	r0
    2982:	cd b7       	in	r28, 0x3d	; 61
    2984:	de b7       	in	r29, 0x3e	; 62
    2986:	9c 83       	std	Y+4, r25	; 0x04
    2988:	8b 83       	std	Y+3, r24	; 0x03
    int j = 0;
    298a:	1a 82       	std	Y+2, r1	; 0x02
    298c:	19 82       	std	Y+1, r1	; 0x01
    298e:	15 c0       	rjmp	.+42     	; 0x29ba <Achteruit+0x40>
    while (j< Steppermotortijd)
    {
        steppermotor1Write(2);
    2990:	82 e0       	ldi	r24, 0x02	; 2
    2992:	90 e0       	ldi	r25, 0x00	; 0
    2994:	0e 94 ff 09 	call	0x13fe	; 0x13fe <steppermotor1Write>
        steppermotor2Write(2);
    2998:	82 e0       	ldi	r24, 0x02	; 2
    299a:	90 e0       	ldi	r25, 0x00	; 0
    299c:	0e 94 a3 0c 	call	0x1946	; 0x1946 <steppermotor2Write>
        steppermotor3Write(2);
    29a0:	82 e0       	ldi	r24, 0x02	; 2
    29a2:	90 e0       	ldi	r25, 0x00	; 0
    29a4:	0e 94 47 0f 	call	0x1e8e	; 0x1e8e <steppermotor3Write>
        steppermotor4Write(1);
    29a8:	81 e0       	ldi	r24, 0x01	; 1
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	0e 94 eb 11 	call	0x23d6	; 0x23d6 <steppermotor4Write>
        j++;
    29b0:	89 81       	ldd	r24, Y+1	; 0x01
    29b2:	9a 81       	ldd	r25, Y+2	; 0x02
    29b4:	01 96       	adiw	r24, 0x01	; 1
    29b6:	9a 83       	std	Y+2, r25	; 0x02
    29b8:	89 83       	std	Y+1, r24	; 0x01
}

void Achteruit(int Steppermotortijd)
{
    int j = 0;
    while (j< Steppermotortijd)
    29ba:	29 81       	ldd	r18, Y+1	; 0x01
    29bc:	3a 81       	ldd	r19, Y+2	; 0x02
    29be:	8b 81       	ldd	r24, Y+3	; 0x03
    29c0:	9c 81       	ldd	r25, Y+4	; 0x04
    29c2:	28 17       	cp	r18, r24
    29c4:	39 07       	cpc	r19, r25
    29c6:	24 f3       	brlt	.-56     	; 0x2990 <Achteruit+0x16>
        steppermotor2Write(2);
        steppermotor3Write(2);
        steppermotor4Write(1);
        j++;
    }
}
    29c8:	0f 90       	pop	r0
    29ca:	0f 90       	pop	r0
    29cc:	0f 90       	pop	r0
    29ce:	0f 90       	pop	r0
    29d0:	cf 91       	pop	r28
    29d2:	df 91       	pop	r29
    29d4:	08 95       	ret

000029d6 <Rechtsaf>:

void Rechtsaf(int Steppermotortijd)
{
    29d6:	df 93       	push	r29
    29d8:	cf 93       	push	r28
    29da:	00 d0       	rcall	.+0      	; 0x29dc <Rechtsaf+0x6>
    29dc:	0f 92       	push	r0
    29de:	cd b7       	in	r28, 0x3d	; 61
    29e0:	de b7       	in	r29, 0x3e	; 62
    29e2:	9c 83       	std	Y+4, r25	; 0x04
    29e4:	8b 83       	std	Y+3, r24	; 0x03
    int j = 0;
    29e6:	1a 82       	std	Y+2, r1	; 0x02
    29e8:	19 82       	std	Y+1, r1	; 0x01
    29ea:	15 c0       	rjmp	.+42     	; 0x2a16 <Rechtsaf+0x40>
    while (j< Steppermotortijd)
    {
        steppermotor1Write(2);
    29ec:	82 e0       	ldi	r24, 0x02	; 2
    29ee:	90 e0       	ldi	r25, 0x00	; 0
    29f0:	0e 94 ff 09 	call	0x13fe	; 0x13fe <steppermotor1Write>
        steppermotor2Write(2);
    29f4:	82 e0       	ldi	r24, 0x02	; 2
    29f6:	90 e0       	ldi	r25, 0x00	; 0
    29f8:	0e 94 a3 0c 	call	0x1946	; 0x1946 <steppermotor2Write>
        steppermotor3Write(1);
    29fc:	81 e0       	ldi	r24, 0x01	; 1
    29fe:	90 e0       	ldi	r25, 0x00	; 0
    2a00:	0e 94 47 0f 	call	0x1e8e	; 0x1e8e <steppermotor3Write>
        steppermotor4Write(2);
    2a04:	82 e0       	ldi	r24, 0x02	; 2
    2a06:	90 e0       	ldi	r25, 0x00	; 0
    2a08:	0e 94 eb 11 	call	0x23d6	; 0x23d6 <steppermotor4Write>
        j++;
    2a0c:	89 81       	ldd	r24, Y+1	; 0x01
    2a0e:	9a 81       	ldd	r25, Y+2	; 0x02
    2a10:	01 96       	adiw	r24, 0x01	; 1
    2a12:	9a 83       	std	Y+2, r25	; 0x02
    2a14:	89 83       	std	Y+1, r24	; 0x01
}

void Rechtsaf(int Steppermotortijd)
{
    int j = 0;
    while (j< Steppermotortijd)
    2a16:	29 81       	ldd	r18, Y+1	; 0x01
    2a18:	3a 81       	ldd	r19, Y+2	; 0x02
    2a1a:	8b 81       	ldd	r24, Y+3	; 0x03
    2a1c:	9c 81       	ldd	r25, Y+4	; 0x04
    2a1e:	28 17       	cp	r18, r24
    2a20:	39 07       	cpc	r19, r25
    2a22:	24 f3       	brlt	.-56     	; 0x29ec <Rechtsaf+0x16>
        steppermotor2Write(2);
        steppermotor3Write(1);
        steppermotor4Write(2);
        j++;
    }
}
    2a24:	0f 90       	pop	r0
    2a26:	0f 90       	pop	r0
    2a28:	0f 90       	pop	r0
    2a2a:	0f 90       	pop	r0
    2a2c:	cf 91       	pop	r28
    2a2e:	df 91       	pop	r29
    2a30:	08 95       	ret

00002a32 <Linksaf>:

void Linksaf(int Steppermotortijd)
{
    2a32:	df 93       	push	r29
    2a34:	cf 93       	push	r28
    2a36:	00 d0       	rcall	.+0      	; 0x2a38 <Linksaf+0x6>
    2a38:	0f 92       	push	r0
    2a3a:	cd b7       	in	r28, 0x3d	; 61
    2a3c:	de b7       	in	r29, 0x3e	; 62
    2a3e:	9c 83       	std	Y+4, r25	; 0x04
    2a40:	8b 83       	std	Y+3, r24	; 0x03
    int j = 0;
    2a42:	1a 82       	std	Y+2, r1	; 0x02
    2a44:	19 82       	std	Y+1, r1	; 0x01
    2a46:	15 c0       	rjmp	.+42     	; 0x2a72 <Linksaf+0x40>
    while (j< Steppermotortijd)
    {
        steppermotor1Write(2);
    2a48:	82 e0       	ldi	r24, 0x02	; 2
    2a4a:	90 e0       	ldi	r25, 0x00	; 0
    2a4c:	0e 94 ff 09 	call	0x13fe	; 0x13fe <steppermotor1Write>
        steppermotor2Write(1);
    2a50:	81 e0       	ldi	r24, 0x01	; 1
    2a52:	90 e0       	ldi	r25, 0x00	; 0
    2a54:	0e 94 a3 0c 	call	0x1946	; 0x1946 <steppermotor2Write>
        steppermotor3Write(1);
    2a58:	81 e0       	ldi	r24, 0x01	; 1
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	0e 94 47 0f 	call	0x1e8e	; 0x1e8e <steppermotor3Write>
        steppermotor4Write(1);
    2a60:	81 e0       	ldi	r24, 0x01	; 1
    2a62:	90 e0       	ldi	r25, 0x00	; 0
    2a64:	0e 94 eb 11 	call	0x23d6	; 0x23d6 <steppermotor4Write>
        j++;
    2a68:	89 81       	ldd	r24, Y+1	; 0x01
    2a6a:	9a 81       	ldd	r25, Y+2	; 0x02
    2a6c:	01 96       	adiw	r24, 0x01	; 1
    2a6e:	9a 83       	std	Y+2, r25	; 0x02
    2a70:	89 83       	std	Y+1, r24	; 0x01
}

void Linksaf(int Steppermotortijd)
{
    int j = 0;
    while (j< Steppermotortijd)
    2a72:	29 81       	ldd	r18, Y+1	; 0x01
    2a74:	3a 81       	ldd	r19, Y+2	; 0x02
    2a76:	8b 81       	ldd	r24, Y+3	; 0x03
    2a78:	9c 81       	ldd	r25, Y+4	; 0x04
    2a7a:	28 17       	cp	r18, r24
    2a7c:	39 07       	cpc	r19, r25
    2a7e:	24 f3       	brlt	.-56     	; 0x2a48 <Linksaf+0x16>
        steppermotor2Write(1);
        steppermotor3Write(1);
        steppermotor4Write(1);
        j++;
    }
}
    2a80:	0f 90       	pop	r0
    2a82:	0f 90       	pop	r0
    2a84:	0f 90       	pop	r0
    2a86:	0f 90       	pop	r0
    2a88:	cf 91       	pop	r28
    2a8a:	df 91       	pop	r29
    2a8c:	08 95       	ret

00002a8e <distance>:
static volatile unsigned long pulse = 0; //the variable for the pulse
static volatile int echo_pin = 0; //logic for the ultrasoon
volatile int isTriggerd = 0;    // used in the while loop
volatile int overflows = 0;

int distance(int triggerpin) {
    2a8e:	df 93       	push	r29
    2a90:	cf 93       	push	r28
    2a92:	cd b7       	in	r28, 0x3d	; 61
    2a94:	de b7       	in	r29, 0x3e	; 62
    2a96:	ea 97       	sbiw	r28, 0x3a	; 58
    2a98:	0f b6       	in	r0, 0x3f	; 63
    2a9a:	f8 94       	cli
    2a9c:	de bf       	out	0x3e, r29	; 62
    2a9e:	0f be       	out	0x3f, r0	; 63
    2aa0:	cd bf       	out	0x3d, r28	; 61
    2aa2:	9e ab       	std	Y+54, r25	; 0x36
    2aa4:	8d ab       	std	Y+53, r24	; 0x35

    switch(triggerpin)
    2aa6:	8d a9       	ldd	r24, Y+53	; 0x35
    2aa8:	9e a9       	ldd	r25, Y+54	; 0x36
    2aaa:	9a af       	std	Y+58, r25	; 0x3a
    2aac:	89 af       	std	Y+57, r24	; 0x39
    2aae:	89 ad       	ldd	r24, Y+57	; 0x39
    2ab0:	9a ad       	ldd	r25, Y+58	; 0x3a
    2ab2:	00 97       	sbiw	r24, 0x00	; 0
    2ab4:	31 f0       	breq	.+12     	; 0x2ac2 <distance+0x34>
    2ab6:	89 ad       	ldd	r24, Y+57	; 0x39
    2ab8:	9a ad       	ldd	r25, Y+58	; 0x3a
    2aba:	81 30       	cpi	r24, 0x01	; 1
    2abc:	91 05       	cpc	r25, r1
    2abe:	49 f0       	breq	.+18     	; 0x2ad2 <distance+0x44>
    2ac0:	0f c0       	rjmp	.+30     	; 0x2ae0 <distance+0x52>
    {
        case ultra_1_trigger:
            PCMASK = 0;
    2ac2:	eb e6       	ldi	r30, 0x6B	; 107
    2ac4:	f0 e0       	ldi	r31, 0x00	; 0
    2ac6:	10 82       	st	Z, r1
            PCMASK = ultra_1_pin;
    2ac8:	eb e6       	ldi	r30, 0x6B	; 107
    2aca:	f0 e0       	ldi	r31, 0x00	; 0
    2acc:	81 e0       	ldi	r24, 0x01	; 1
    2ace:	80 83       	st	Z, r24
    2ad0:	07 c0       	rjmp	.+14     	; 0x2ae0 <distance+0x52>
        break;

        case ultra_2_trigger:
            PCMASK = 0;
    2ad2:	eb e6       	ldi	r30, 0x6B	; 107
    2ad4:	f0 e0       	ldi	r31, 0x00	; 0
    2ad6:	10 82       	st	Z, r1
            PCMASK = ultra_2_pin;
    2ad8:	eb e6       	ldi	r30, 0x6B	; 107
    2ada:	f0 e0       	ldi	r31, 0x00	; 0
    2adc:	82 e0       	ldi	r24, 0x02	; 2
    2ade:	80 83       	st	Z, r24
        break;
    }

    TRIGGERPORT |= (1 << triggerpin);
    2ae0:	ab e2       	ldi	r26, 0x2B	; 43
    2ae2:	b0 e0       	ldi	r27, 0x00	; 0
    2ae4:	eb e2       	ldi	r30, 0x2B	; 43
    2ae6:	f0 e0       	ldi	r31, 0x00	; 0
    2ae8:	80 81       	ld	r24, Z
    2aea:	28 2f       	mov	r18, r24
    2aec:	81 e0       	ldi	r24, 0x01	; 1
    2aee:	90 e0       	ldi	r25, 0x00	; 0
    2af0:	0d a8       	ldd	r0, Y+53	; 0x35
    2af2:	02 c0       	rjmp	.+4      	; 0x2af8 <distance+0x6a>
    2af4:	88 0f       	add	r24, r24
    2af6:	99 1f       	adc	r25, r25
    2af8:	0a 94       	dec	r0
    2afa:	e2 f7       	brpl	.-8      	; 0x2af4 <distance+0x66>
    2afc:	82 2b       	or	r24, r18
    2afe:	8c 93       	st	X, r24
    2b00:	80 e0       	ldi	r24, 0x00	; 0
    2b02:	90 e0       	ldi	r25, 0x00	; 0
    2b04:	a0 e7       	ldi	r26, 0x70	; 112
    2b06:	b1 e4       	ldi	r27, 0x41	; 65
    2b08:	8d a7       	std	Y+45, r24	; 0x2d
    2b0a:	9e a7       	std	Y+46, r25	; 0x2e
    2b0c:	af a7       	std	Y+47, r26	; 0x2f
    2b0e:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2b10:	6d a5       	ldd	r22, Y+45	; 0x2d
    2b12:	7e a5       	ldd	r23, Y+46	; 0x2e
    2b14:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b16:	98 a9       	ldd	r25, Y+48	; 0x30
    2b18:	2b ea       	ldi	r18, 0xAB	; 171
    2b1a:	3a ea       	ldi	r19, 0xAA	; 170
    2b1c:	4a ea       	ldi	r20, 0xAA	; 170
    2b1e:	50 e4       	ldi	r21, 0x40	; 64
    2b20:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    2b24:	dc 01       	movw	r26, r24
    2b26:	cb 01       	movw	r24, r22
    2b28:	89 a7       	std	Y+41, r24	; 0x29
    2b2a:	9a a7       	std	Y+42, r25	; 0x2a
    2b2c:	ab a7       	std	Y+43, r26	; 0x2b
    2b2e:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    2b30:	69 a5       	ldd	r22, Y+41	; 0x29
    2b32:	7a a5       	ldd	r23, Y+42	; 0x2a
    2b34:	8b a5       	ldd	r24, Y+43	; 0x2b
    2b36:	9c a5       	ldd	r25, Y+44	; 0x2c
    2b38:	20 e0       	ldi	r18, 0x00	; 0
    2b3a:	30 e0       	ldi	r19, 0x00	; 0
    2b3c:	40 e8       	ldi	r20, 0x80	; 128
    2b3e:	5f e3       	ldi	r21, 0x3F	; 63
    2b40:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
    2b44:	88 23       	and	r24, r24
    2b46:	1c f4       	brge	.+6      	; 0x2b4e <distance+0xc0>
		__ticks = 1;
    2b48:	81 e0       	ldi	r24, 0x01	; 1
    2b4a:	88 a7       	std	Y+40, r24	; 0x28
    2b4c:	91 c0       	rjmp	.+290    	; 0x2c70 <distance+0x1e2>
	else if (__tmp > 255)
    2b4e:	69 a5       	ldd	r22, Y+41	; 0x29
    2b50:	7a a5       	ldd	r23, Y+42	; 0x2a
    2b52:	8b a5       	ldd	r24, Y+43	; 0x2b
    2b54:	9c a5       	ldd	r25, Y+44	; 0x2c
    2b56:	20 e0       	ldi	r18, 0x00	; 0
    2b58:	30 e0       	ldi	r19, 0x00	; 0
    2b5a:	4f e7       	ldi	r20, 0x7F	; 127
    2b5c:	53 e4       	ldi	r21, 0x43	; 67
    2b5e:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
    2b62:	18 16       	cp	r1, r24
    2b64:	0c f0       	brlt	.+2      	; 0x2b68 <distance+0xda>
    2b66:	7b c0       	rjmp	.+246    	; 0x2c5e <distance+0x1d0>
	{
		_delay_ms(__us / 1000.0);
    2b68:	6d a5       	ldd	r22, Y+45	; 0x2d
    2b6a:	7e a5       	ldd	r23, Y+46	; 0x2e
    2b6c:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b6e:	98 a9       	ldd	r25, Y+48	; 0x30
    2b70:	20 e0       	ldi	r18, 0x00	; 0
    2b72:	30 e0       	ldi	r19, 0x00	; 0
    2b74:	4a e7       	ldi	r20, 0x7A	; 122
    2b76:	54 e4       	ldi	r21, 0x44	; 68
    2b78:	0e 94 02 1b 	call	0x3604	; 0x3604 <__divsf3>
    2b7c:	dc 01       	movw	r26, r24
    2b7e:	cb 01       	movw	r24, r22
    2b80:	8c a3       	std	Y+36, r24	; 0x24
    2b82:	9d a3       	std	Y+37, r25	; 0x25
    2b84:	ae a3       	std	Y+38, r26	; 0x26
    2b86:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b88:	6c a1       	ldd	r22, Y+36	; 0x24
    2b8a:	7d a1       	ldd	r23, Y+37	; 0x25
    2b8c:	8e a1       	ldd	r24, Y+38	; 0x26
    2b8e:	9f a1       	ldd	r25, Y+39	; 0x27
    2b90:	20 e0       	ldi	r18, 0x00	; 0
    2b92:	30 e0       	ldi	r19, 0x00	; 0
    2b94:	4a e7       	ldi	r20, 0x7A	; 122
    2b96:	55 e4       	ldi	r21, 0x45	; 69
    2b98:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    2b9c:	dc 01       	movw	r26, r24
    2b9e:	cb 01       	movw	r24, r22
    2ba0:	88 a3       	std	Y+32, r24	; 0x20
    2ba2:	99 a3       	std	Y+33, r25	; 0x21
    2ba4:	aa a3       	std	Y+34, r26	; 0x22
    2ba6:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    2ba8:	68 a1       	ldd	r22, Y+32	; 0x20
    2baa:	79 a1       	ldd	r23, Y+33	; 0x21
    2bac:	8a a1       	ldd	r24, Y+34	; 0x22
    2bae:	9b a1       	ldd	r25, Y+35	; 0x23
    2bb0:	20 e0       	ldi	r18, 0x00	; 0
    2bb2:	30 e0       	ldi	r19, 0x00	; 0
    2bb4:	40 e8       	ldi	r20, 0x80	; 128
    2bb6:	5f e3       	ldi	r21, 0x3F	; 63
    2bb8:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
    2bbc:	88 23       	and	r24, r24
    2bbe:	2c f4       	brge	.+10     	; 0x2bca <distance+0x13c>
		__ticks = 1;
    2bc0:	81 e0       	ldi	r24, 0x01	; 1
    2bc2:	90 e0       	ldi	r25, 0x00	; 0
    2bc4:	9f 8f       	std	Y+31, r25	; 0x1f
    2bc6:	8e 8f       	std	Y+30, r24	; 0x1e
    2bc8:	3f c0       	rjmp	.+126    	; 0x2c48 <distance+0x1ba>
	else if (__tmp > 65535)
    2bca:	68 a1       	ldd	r22, Y+32	; 0x20
    2bcc:	79 a1       	ldd	r23, Y+33	; 0x21
    2bce:	8a a1       	ldd	r24, Y+34	; 0x22
    2bd0:	9b a1       	ldd	r25, Y+35	; 0x23
    2bd2:	20 e0       	ldi	r18, 0x00	; 0
    2bd4:	3f ef       	ldi	r19, 0xFF	; 255
    2bd6:	4f e7       	ldi	r20, 0x7F	; 127
    2bd8:	57 e4       	ldi	r21, 0x47	; 71
    2bda:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
    2bde:	18 16       	cp	r1, r24
    2be0:	4c f5       	brge	.+82     	; 0x2c34 <distance+0x1a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2be2:	6c a1       	ldd	r22, Y+36	; 0x24
    2be4:	7d a1       	ldd	r23, Y+37	; 0x25
    2be6:	8e a1       	ldd	r24, Y+38	; 0x26
    2be8:	9f a1       	ldd	r25, Y+39	; 0x27
    2bea:	20 e0       	ldi	r18, 0x00	; 0
    2bec:	30 e0       	ldi	r19, 0x00	; 0
    2bee:	40 e2       	ldi	r20, 0x20	; 32
    2bf0:	51 e4       	ldi	r21, 0x41	; 65
    2bf2:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    2bf6:	dc 01       	movw	r26, r24
    2bf8:	cb 01       	movw	r24, r22
    2bfa:	bc 01       	movw	r22, r24
    2bfc:	cd 01       	movw	r24, r26
    2bfe:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    2c02:	dc 01       	movw	r26, r24
    2c04:	cb 01       	movw	r24, r22
    2c06:	9f 8f       	std	Y+31, r25	; 0x1f
    2c08:	8e 8f       	std	Y+30, r24	; 0x1e
    2c0a:	0f c0       	rjmp	.+30     	; 0x2c2a <distance+0x19c>
    2c0c:	80 e9       	ldi	r24, 0x90	; 144
    2c0e:	91 e0       	ldi	r25, 0x01	; 1
    2c10:	9d 8f       	std	Y+29, r25	; 0x1d
    2c12:	8c 8f       	std	Y+28, r24	; 0x1c
    2c14:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2c16:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2c18:	01 97       	sbiw	r24, 0x01	; 1
    2c1a:	f1 f7       	brne	.-4      	; 0x2c18 <distance+0x18a>
    2c1c:	9d 8f       	std	Y+29, r25	; 0x1d
    2c1e:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c20:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2c22:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2c24:	01 97       	sbiw	r24, 0x01	; 1
    2c26:	9f 8f       	std	Y+31, r25	; 0x1f
    2c28:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c2a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2c2c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2c2e:	00 97       	sbiw	r24, 0x00	; 0
    2c30:	69 f7       	brne	.-38     	; 0x2c0c <distance+0x17e>
    2c32:	24 c0       	rjmp	.+72     	; 0x2c7c <distance+0x1ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c34:	68 a1       	ldd	r22, Y+32	; 0x20
    2c36:	79 a1       	ldd	r23, Y+33	; 0x21
    2c38:	8a a1       	ldd	r24, Y+34	; 0x22
    2c3a:	9b a1       	ldd	r25, Y+35	; 0x23
    2c3c:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    2c40:	dc 01       	movw	r26, r24
    2c42:	cb 01       	movw	r24, r22
    2c44:	9f 8f       	std	Y+31, r25	; 0x1f
    2c46:	8e 8f       	std	Y+30, r24	; 0x1e
    2c48:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2c4a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2c4c:	9b 8f       	std	Y+27, r25	; 0x1b
    2c4e:	8a 8f       	std	Y+26, r24	; 0x1a
    2c50:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2c52:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2c54:	01 97       	sbiw	r24, 0x01	; 1
    2c56:	f1 f7       	brne	.-4      	; 0x2c54 <distance+0x1c6>
    2c58:	9b 8f       	std	Y+27, r25	; 0x1b
    2c5a:	8a 8f       	std	Y+26, r24	; 0x1a
    2c5c:	0f c0       	rjmp	.+30     	; 0x2c7c <distance+0x1ee>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2c5e:	69 a5       	ldd	r22, Y+41	; 0x29
    2c60:	7a a5       	ldd	r23, Y+42	; 0x2a
    2c62:	8b a5       	ldd	r24, Y+43	; 0x2b
    2c64:	9c a5       	ldd	r25, Y+44	; 0x2c
    2c66:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    2c6a:	dc 01       	movw	r26, r24
    2c6c:	cb 01       	movw	r24, r22
    2c6e:	88 a7       	std	Y+40, r24	; 0x28
    2c70:	88 a5       	ldd	r24, Y+40	; 0x28
    2c72:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2c74:	89 8d       	ldd	r24, Y+25	; 0x19
    2c76:	8a 95       	dec	r24
    2c78:	f1 f7       	brne	.-4      	; 0x2c76 <distance+0x1e8>
    2c7a:	89 8f       	std	Y+25, r24	; 0x19
    _delay_us(15);
    TRIGGERPORT &= ~( 1 << triggerpin);
    2c7c:	ab e2       	ldi	r26, 0x2B	; 43
    2c7e:	b0 e0       	ldi	r27, 0x00	; 0
    2c80:	eb e2       	ldi	r30, 0x2B	; 43
    2c82:	f0 e0       	ldi	r31, 0x00	; 0
    2c84:	80 81       	ld	r24, Z
    2c86:	28 2f       	mov	r18, r24
    2c88:	81 e0       	ldi	r24, 0x01	; 1
    2c8a:	90 e0       	ldi	r25, 0x00	; 0
    2c8c:	0d a8       	ldd	r0, Y+53	; 0x35
    2c8e:	02 c0       	rjmp	.+4      	; 0x2c94 <distance+0x206>
    2c90:	88 0f       	add	r24, r24
    2c92:	99 1f       	adc	r25, r25
    2c94:	0a 94       	dec	r0
    2c96:	e2 f7       	brpl	.-8      	; 0x2c90 <distance+0x202>
    2c98:	80 95       	com	r24
    2c9a:	82 23       	and	r24, r18
    2c9c:	8c 93       	st	X, r24
    isTriggerd = 1;
    2c9e:	81 e0       	ldi	r24, 0x01	; 1
    2ca0:	90 e0       	ldi	r25, 0x00	; 0
    2ca2:	90 93 09 03 	sts	0x0309, r25
    2ca6:	80 93 08 03 	sts	0x0308, r24
    2caa:	80 e0       	ldi	r24, 0x00	; 0
    2cac:	90 e0       	ldi	r25, 0x00	; 0
    2cae:	a0 e7       	ldi	r26, 0x70	; 112
    2cb0:	b1 e4       	ldi	r27, 0x41	; 65
    2cb2:	8d 8b       	std	Y+21, r24	; 0x15
    2cb4:	9e 8b       	std	Y+22, r25	; 0x16
    2cb6:	af 8b       	std	Y+23, r26	; 0x17
    2cb8:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2cba:	6d 89       	ldd	r22, Y+21	; 0x15
    2cbc:	7e 89       	ldd	r23, Y+22	; 0x16
    2cbe:	8f 89       	ldd	r24, Y+23	; 0x17
    2cc0:	98 8d       	ldd	r25, Y+24	; 0x18
    2cc2:	2b ea       	ldi	r18, 0xAB	; 171
    2cc4:	3a ea       	ldi	r19, 0xAA	; 170
    2cc6:	4a ea       	ldi	r20, 0xAA	; 170
    2cc8:	50 e4       	ldi	r21, 0x40	; 64
    2cca:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    2cce:	dc 01       	movw	r26, r24
    2cd0:	cb 01       	movw	r24, r22
    2cd2:	89 8b       	std	Y+17, r24	; 0x11
    2cd4:	9a 8b       	std	Y+18, r25	; 0x12
    2cd6:	ab 8b       	std	Y+19, r26	; 0x13
    2cd8:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    2cda:	69 89       	ldd	r22, Y+17	; 0x11
    2cdc:	7a 89       	ldd	r23, Y+18	; 0x12
    2cde:	8b 89       	ldd	r24, Y+19	; 0x13
    2ce0:	9c 89       	ldd	r25, Y+20	; 0x14
    2ce2:	20 e0       	ldi	r18, 0x00	; 0
    2ce4:	30 e0       	ldi	r19, 0x00	; 0
    2ce6:	40 e8       	ldi	r20, 0x80	; 128
    2ce8:	5f e3       	ldi	r21, 0x3F	; 63
    2cea:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
    2cee:	88 23       	and	r24, r24
    2cf0:	1c f4       	brge	.+6      	; 0x2cf8 <distance+0x26a>
		__ticks = 1;
    2cf2:	81 e0       	ldi	r24, 0x01	; 1
    2cf4:	88 8b       	std	Y+16, r24	; 0x10
    2cf6:	91 c0       	rjmp	.+290    	; 0x2e1a <distance+0x38c>
	else if (__tmp > 255)
    2cf8:	69 89       	ldd	r22, Y+17	; 0x11
    2cfa:	7a 89       	ldd	r23, Y+18	; 0x12
    2cfc:	8b 89       	ldd	r24, Y+19	; 0x13
    2cfe:	9c 89       	ldd	r25, Y+20	; 0x14
    2d00:	20 e0       	ldi	r18, 0x00	; 0
    2d02:	30 e0       	ldi	r19, 0x00	; 0
    2d04:	4f e7       	ldi	r20, 0x7F	; 127
    2d06:	53 e4       	ldi	r21, 0x43	; 67
    2d08:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
    2d0c:	18 16       	cp	r1, r24
    2d0e:	0c f0       	brlt	.+2      	; 0x2d12 <distance+0x284>
    2d10:	7b c0       	rjmp	.+246    	; 0x2e08 <distance+0x37a>
	{
		_delay_ms(__us / 1000.0);
    2d12:	6d 89       	ldd	r22, Y+21	; 0x15
    2d14:	7e 89       	ldd	r23, Y+22	; 0x16
    2d16:	8f 89       	ldd	r24, Y+23	; 0x17
    2d18:	98 8d       	ldd	r25, Y+24	; 0x18
    2d1a:	20 e0       	ldi	r18, 0x00	; 0
    2d1c:	30 e0       	ldi	r19, 0x00	; 0
    2d1e:	4a e7       	ldi	r20, 0x7A	; 122
    2d20:	54 e4       	ldi	r21, 0x44	; 68
    2d22:	0e 94 02 1b 	call	0x3604	; 0x3604 <__divsf3>
    2d26:	dc 01       	movw	r26, r24
    2d28:	cb 01       	movw	r24, r22
    2d2a:	8c 87       	std	Y+12, r24	; 0x0c
    2d2c:	9d 87       	std	Y+13, r25	; 0x0d
    2d2e:	ae 87       	std	Y+14, r26	; 0x0e
    2d30:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d32:	6c 85       	ldd	r22, Y+12	; 0x0c
    2d34:	7d 85       	ldd	r23, Y+13	; 0x0d
    2d36:	8e 85       	ldd	r24, Y+14	; 0x0e
    2d38:	9f 85       	ldd	r25, Y+15	; 0x0f
    2d3a:	20 e0       	ldi	r18, 0x00	; 0
    2d3c:	30 e0       	ldi	r19, 0x00	; 0
    2d3e:	4a e7       	ldi	r20, 0x7A	; 122
    2d40:	55 e4       	ldi	r21, 0x45	; 69
    2d42:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    2d46:	dc 01       	movw	r26, r24
    2d48:	cb 01       	movw	r24, r22
    2d4a:	88 87       	std	Y+8, r24	; 0x08
    2d4c:	99 87       	std	Y+9, r25	; 0x09
    2d4e:	aa 87       	std	Y+10, r26	; 0x0a
    2d50:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    2d52:	68 85       	ldd	r22, Y+8	; 0x08
    2d54:	79 85       	ldd	r23, Y+9	; 0x09
    2d56:	8a 85       	ldd	r24, Y+10	; 0x0a
    2d58:	9b 85       	ldd	r25, Y+11	; 0x0b
    2d5a:	20 e0       	ldi	r18, 0x00	; 0
    2d5c:	30 e0       	ldi	r19, 0x00	; 0
    2d5e:	40 e8       	ldi	r20, 0x80	; 128
    2d60:	5f e3       	ldi	r21, 0x3F	; 63
    2d62:	0e 94 0e 1c 	call	0x381c	; 0x381c <__ltsf2>
    2d66:	88 23       	and	r24, r24
    2d68:	2c f4       	brge	.+10     	; 0x2d74 <distance+0x2e6>
		__ticks = 1;
    2d6a:	81 e0       	ldi	r24, 0x01	; 1
    2d6c:	90 e0       	ldi	r25, 0x00	; 0
    2d6e:	9f 83       	std	Y+7, r25	; 0x07
    2d70:	8e 83       	std	Y+6, r24	; 0x06
    2d72:	3f c0       	rjmp	.+126    	; 0x2df2 <distance+0x364>
	else if (__tmp > 65535)
    2d74:	68 85       	ldd	r22, Y+8	; 0x08
    2d76:	79 85       	ldd	r23, Y+9	; 0x09
    2d78:	8a 85       	ldd	r24, Y+10	; 0x0a
    2d7a:	9b 85       	ldd	r25, Y+11	; 0x0b
    2d7c:	20 e0       	ldi	r18, 0x00	; 0
    2d7e:	3f ef       	ldi	r19, 0xFF	; 255
    2d80:	4f e7       	ldi	r20, 0x7F	; 127
    2d82:	57 e4       	ldi	r21, 0x47	; 71
    2d84:	0e 94 ae 1b 	call	0x375c	; 0x375c <__gtsf2>
    2d88:	18 16       	cp	r1, r24
    2d8a:	4c f5       	brge	.+82     	; 0x2dde <distance+0x350>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d8c:	6c 85       	ldd	r22, Y+12	; 0x0c
    2d8e:	7d 85       	ldd	r23, Y+13	; 0x0d
    2d90:	8e 85       	ldd	r24, Y+14	; 0x0e
    2d92:	9f 85       	ldd	r25, Y+15	; 0x0f
    2d94:	20 e0       	ldi	r18, 0x00	; 0
    2d96:	30 e0       	ldi	r19, 0x00	; 0
    2d98:	40 e2       	ldi	r20, 0x20	; 32
    2d9a:	51 e4       	ldi	r21, 0x41	; 65
    2d9c:	0e 94 08 1a 	call	0x3410	; 0x3410 <__mulsf3>
    2da0:	dc 01       	movw	r26, r24
    2da2:	cb 01       	movw	r24, r22
    2da4:	bc 01       	movw	r22, r24
    2da6:	cd 01       	movw	r24, r26
    2da8:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    2dac:	dc 01       	movw	r26, r24
    2dae:	cb 01       	movw	r24, r22
    2db0:	9f 83       	std	Y+7, r25	; 0x07
    2db2:	8e 83       	std	Y+6, r24	; 0x06
    2db4:	0f c0       	rjmp	.+30     	; 0x2dd4 <distance+0x346>
    2db6:	80 e9       	ldi	r24, 0x90	; 144
    2db8:	91 e0       	ldi	r25, 0x01	; 1
    2dba:	9d 83       	std	Y+5, r25	; 0x05
    2dbc:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2dbe:	8c 81       	ldd	r24, Y+4	; 0x04
    2dc0:	9d 81       	ldd	r25, Y+5	; 0x05
    2dc2:	01 97       	sbiw	r24, 0x01	; 1
    2dc4:	f1 f7       	brne	.-4      	; 0x2dc2 <distance+0x334>
    2dc6:	9d 83       	std	Y+5, r25	; 0x05
    2dc8:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dca:	8e 81       	ldd	r24, Y+6	; 0x06
    2dcc:	9f 81       	ldd	r25, Y+7	; 0x07
    2dce:	01 97       	sbiw	r24, 0x01	; 1
    2dd0:	9f 83       	std	Y+7, r25	; 0x07
    2dd2:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dd4:	8e 81       	ldd	r24, Y+6	; 0x06
    2dd6:	9f 81       	ldd	r25, Y+7	; 0x07
    2dd8:	00 97       	sbiw	r24, 0x00	; 0
    2dda:	69 f7       	brne	.-38     	; 0x2db6 <distance+0x328>
    2ddc:	24 c0       	rjmp	.+72     	; 0x2e26 <distance+0x398>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2dde:	68 85       	ldd	r22, Y+8	; 0x08
    2de0:	79 85       	ldd	r23, Y+9	; 0x09
    2de2:	8a 85       	ldd	r24, Y+10	; 0x0a
    2de4:	9b 85       	ldd	r25, Y+11	; 0x0b
    2de6:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    2dea:	dc 01       	movw	r26, r24
    2dec:	cb 01       	movw	r24, r22
    2dee:	9f 83       	std	Y+7, r25	; 0x07
    2df0:	8e 83       	std	Y+6, r24	; 0x06
    2df2:	8e 81       	ldd	r24, Y+6	; 0x06
    2df4:	9f 81       	ldd	r25, Y+7	; 0x07
    2df6:	9b 83       	std	Y+3, r25	; 0x03
    2df8:	8a 83       	std	Y+2, r24	; 0x02
    2dfa:	8a 81       	ldd	r24, Y+2	; 0x02
    2dfc:	9b 81       	ldd	r25, Y+3	; 0x03
    2dfe:	01 97       	sbiw	r24, 0x01	; 1
    2e00:	f1 f7       	brne	.-4      	; 0x2dfe <distance+0x370>
    2e02:	9b 83       	std	Y+3, r25	; 0x03
    2e04:	8a 83       	std	Y+2, r24	; 0x02
    2e06:	0f c0       	rjmp	.+30     	; 0x2e26 <distance+0x398>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2e08:	69 89       	ldd	r22, Y+17	; 0x11
    2e0a:	7a 89       	ldd	r23, Y+18	; 0x12
    2e0c:	8b 89       	ldd	r24, Y+19	; 0x13
    2e0e:	9c 89       	ldd	r25, Y+20	; 0x14
    2e10:	0e 94 32 18 	call	0x3064	; 0x3064 <__fixunssfsi>
    2e14:	dc 01       	movw	r26, r24
    2e16:	cb 01       	movw	r24, r22
    2e18:	88 8b       	std	Y+16, r24	; 0x10
    2e1a:	88 89       	ldd	r24, Y+16	; 0x10
    2e1c:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2e1e:	89 81       	ldd	r24, Y+1	; 0x01
    2e20:	8a 95       	dec	r24
    2e22:	f1 f7       	brne	.-4      	; 0x2e20 <distance+0x392>
    2e24:	89 83       	std	Y+1, r24	; 0x01
    _delay_us(15);

    unsigned long i = 0;
    2e26:	19 aa       	std	Y+49, r1	; 0x31
    2e28:	1a aa       	std	Y+50, r1	; 0x32
    2e2a:	1b aa       	std	Y+51, r1	; 0x33
    2e2c:	1c aa       	std	Y+52, r1	; 0x34
    2e2e:	1f c0       	rjmp	.+62     	; 0x2e6e <distance+0x3e0>
    while(isTriggerd){
       if(i > ((RETURNVALUE+10)*16))
    2e30:	89 a9       	ldd	r24, Y+49	; 0x31
    2e32:	9a a9       	ldd	r25, Y+50	; 0x32
    2e34:	ab a9       	ldd	r26, Y+51	; 0x33
    2e36:	bc a9       	ldd	r27, Y+52	; 0x34
    2e38:	81 36       	cpi	r24, 0x61	; 97
    2e3a:	24 e0       	ldi	r18, 0x04	; 4
    2e3c:	92 07       	cpc	r25, r18
    2e3e:	20 e0       	ldi	r18, 0x00	; 0
    2e40:	a2 07       	cpc	r26, r18
    2e42:	20 e0       	ldi	r18, 0x00	; 0
    2e44:	b2 07       	cpc	r27, r18
    2e46:	40 f0       	brcs	.+16     	; 0x2e58 <distance+0x3ca>
       {
           PCMASK = 0;
    2e48:	eb e6       	ldi	r30, 0x6B	; 107
    2e4a:	f0 e0       	ldi	r31, 0x00	; 0
    2e4c:	10 82       	st	Z, r1
           return RETURNVALUE;
    2e4e:	8c e3       	ldi	r24, 0x3C	; 60
    2e50:	90 e0       	ldi	r25, 0x00	; 0
    2e52:	98 af       	std	Y+56, r25	; 0x38
    2e54:	8f ab       	std	Y+55, r24	; 0x37
    2e56:	31 c0       	rjmp	.+98     	; 0x2eba <distance+0x42c>
       }
       i++;
    2e58:	89 a9       	ldd	r24, Y+49	; 0x31
    2e5a:	9a a9       	ldd	r25, Y+50	; 0x32
    2e5c:	ab a9       	ldd	r26, Y+51	; 0x33
    2e5e:	bc a9       	ldd	r27, Y+52	; 0x34
    2e60:	01 96       	adiw	r24, 0x01	; 1
    2e62:	a1 1d       	adc	r26, r1
    2e64:	b1 1d       	adc	r27, r1
    2e66:	89 ab       	std	Y+49, r24	; 0x31
    2e68:	9a ab       	std	Y+50, r25	; 0x32
    2e6a:	ab ab       	std	Y+51, r26	; 0x33
    2e6c:	bc ab       	std	Y+52, r27	; 0x34
    TRIGGERPORT &= ~( 1 << triggerpin);
    isTriggerd = 1;
    _delay_us(15);

    unsigned long i = 0;
    while(isTriggerd){
    2e6e:	80 91 08 03 	lds	r24, 0x0308
    2e72:	90 91 09 03 	lds	r25, 0x0309
    2e76:	00 97       	sbiw	r24, 0x00	; 0
    2e78:	d9 f6       	brne	.-74     	; 0x2e30 <distance+0x3a2>
       }
       i++;

    }

    return pulse/928.0;
    2e7a:	80 91 0c 03 	lds	r24, 0x030C
    2e7e:	90 91 0d 03 	lds	r25, 0x030D
    2e82:	a0 91 0e 03 	lds	r26, 0x030E
    2e86:	b0 91 0f 03 	lds	r27, 0x030F
    2e8a:	bc 01       	movw	r22, r24
    2e8c:	cd 01       	movw	r24, r26
    2e8e:	0e 94 92 1c 	call	0x3924	; 0x3924 <__floatunsisf>
    2e92:	dc 01       	movw	r26, r24
    2e94:	cb 01       	movw	r24, r22
    2e96:	bc 01       	movw	r22, r24
    2e98:	cd 01       	movw	r24, r26
    2e9a:	20 e0       	ldi	r18, 0x00	; 0
    2e9c:	30 e0       	ldi	r19, 0x00	; 0
    2e9e:	48 e6       	ldi	r20, 0x68	; 104
    2ea0:	54 e4       	ldi	r21, 0x44	; 68
    2ea2:	0e 94 02 1b 	call	0x3604	; 0x3604 <__divsf3>
    2ea6:	dc 01       	movw	r26, r24
    2ea8:	cb 01       	movw	r24, r22
    2eaa:	bc 01       	movw	r22, r24
    2eac:	cd 01       	movw	r24, r26
    2eae:	0e 94 3e 1c 	call	0x387c	; 0x387c <__fixsfsi>
    2eb2:	dc 01       	movw	r26, r24
    2eb4:	cb 01       	movw	r24, r22
    2eb6:	98 af       	std	Y+56, r25	; 0x38
    2eb8:	8f ab       	std	Y+55, r24	; 0x37
    2eba:	8f a9       	ldd	r24, Y+55	; 0x37
    2ebc:	98 ad       	ldd	r25, Y+56	; 0x38
}
    2ebe:	ea 96       	adiw	r28, 0x3a	; 58
    2ec0:	0f b6       	in	r0, 0x3f	; 63
    2ec2:	f8 94       	cli
    2ec4:	de bf       	out	0x3e, r29	; 62
    2ec6:	0f be       	out	0x3f, r0	; 63
    2ec8:	cd bf       	out	0x3d, r28	; 61
    2eca:	cf 91       	pop	r28
    2ecc:	df 91       	pop	r29
    2ece:	08 95       	ret

00002ed0 <init_ultrasoon>:
void init_ultrasoon(){
    2ed0:	df 93       	push	r29
    2ed2:	cf 93       	push	r28
    2ed4:	cd b7       	in	r28, 0x3d	; 61
    2ed6:	de b7       	in	r29, 0x3e	; 62
    TRIGGERDDR |= (1 << ultra_1_trigger) | (1 << ultra_2_trigger);
    2ed8:	aa e2       	ldi	r26, 0x2A	; 42
    2eda:	b0 e0       	ldi	r27, 0x00	; 0
    2edc:	ea e2       	ldi	r30, 0x2A	; 42
    2ede:	f0 e0       	ldi	r31, 0x00	; 0
    2ee0:	80 81       	ld	r24, Z
    2ee2:	83 60       	ori	r24, 0x03	; 3
    2ee4:	8c 93       	st	X, r24
    TRIGGERPORT &= ~(1 << ultra_1_trigger);
    2ee6:	ab e2       	ldi	r26, 0x2B	; 43
    2ee8:	b0 e0       	ldi	r27, 0x00	; 0
    2eea:	eb e2       	ldi	r30, 0x2B	; 43
    2eec:	f0 e0       	ldi	r31, 0x00	; 0
    2eee:	80 81       	ld	r24, Z
    2ef0:	8e 7f       	andi	r24, 0xFE	; 254
    2ef2:	8c 93       	st	X, r24
    TRIGGERPORT &= ~(1 << ultra_2_trigger);
    2ef4:	ab e2       	ldi	r26, 0x2B	; 43
    2ef6:	b0 e0       	ldi	r27, 0x00	; 0
    2ef8:	eb e2       	ldi	r30, 0x2B	; 43
    2efa:	f0 e0       	ldi	r31, 0x00	; 0
    2efc:	80 81       	ld	r24, Z
    2efe:	8d 7f       	andi	r24, 0xFD	; 253
    2f00:	8c 93       	st	X, r24
    PCICR |= (1 << PCREG);
    2f02:	a8 e6       	ldi	r26, 0x68	; 104
    2f04:	b0 e0       	ldi	r27, 0x00	; 0
    2f06:	e8 e6       	ldi	r30, 0x68	; 104
    2f08:	f0 e0       	ldi	r31, 0x00	; 0
    2f0a:	80 81       	ld	r24, Z
    2f0c:	81 60       	ori	r24, 0x01	; 1
    2f0e:	8c 93       	st	X, r24
    PCMASK = 0;
    2f10:	eb e6       	ldi	r30, 0x6B	; 107
    2f12:	f0 e0       	ldi	r31, 0x00	; 0
    2f14:	10 82       	st	Z, r1
}
    2f16:	cf 91       	pop	r28
    2f18:	df 91       	pop	r29
    2f1a:	08 95       	ret

00002f1c <__vector_9>:

ISR(PCISR)   // Interrupt service routine.
{
    2f1c:	1f 92       	push	r1
    2f1e:	0f 92       	push	r0
    2f20:	0f b6       	in	r0, 0x3f	; 63
    2f22:	0f 92       	push	r0
    2f24:	00 90 5b 00 	lds	r0, 0x005B
    2f28:	0f 92       	push	r0
    2f2a:	11 24       	eor	r1, r1
    2f2c:	ef 92       	push	r14
    2f2e:	ff 92       	push	r15
    2f30:	0f 93       	push	r16
    2f32:	1f 93       	push	r17
    2f34:	2f 93       	push	r18
    2f36:	3f 93       	push	r19
    2f38:	4f 93       	push	r20
    2f3a:	5f 93       	push	r21
    2f3c:	6f 93       	push	r22
    2f3e:	7f 93       	push	r23
    2f40:	8f 93       	push	r24
    2f42:	9f 93       	push	r25
    2f44:	af 93       	push	r26
    2f46:	bf 93       	push	r27
    2f48:	ef 93       	push	r30
    2f4a:	ff 93       	push	r31
    2f4c:	df 93       	push	r29
    2f4e:	cf 93       	push	r28
    2f50:	cd b7       	in	r28, 0x3d	; 61
    2f52:	de b7       	in	r29, 0x3e	; 62
    if (echo_pin==1)
    2f54:	80 91 10 03 	lds	r24, 0x0310
    2f58:	90 91 11 03 	lds	r25, 0x0311
    2f5c:	81 30       	cpi	r24, 0x01	; 1
    2f5e:	91 05       	cpc	r25, r1
    2f60:	c9 f5       	brne	.+114    	; 0x2fd4 <__vector_9+0xb8>
	{
		TIMER_B = 0;    //TIMER COUNTER CONTROL REGITER (Stop the counter)
    2f62:	e1 e2       	ldi	r30, 0x21	; 33
    2f64:	f1 e0       	ldi	r31, 0x01	; 1
    2f66:	10 82       	st	Z, r1
		pulse=TNCT_timer+(overflows*OVERFLOW);  // store the value of counter
    2f68:	e4 e2       	ldi	r30, 0x24	; 36
    2f6a:	f1 e0       	ldi	r31, 0x01	; 1
    2f6c:	80 81       	ld	r24, Z
    2f6e:	91 81       	ldd	r25, Z+1	; 0x01
    2f70:	7c 01       	movw	r14, r24
    2f72:	00 e0       	ldi	r16, 0x00	; 0
    2f74:	10 e0       	ldi	r17, 0x00	; 0
    2f76:	80 91 0a 03 	lds	r24, 0x030A
    2f7a:	90 91 0b 03 	lds	r25, 0x030B
    2f7e:	aa 27       	eor	r26, r26
    2f80:	97 fd       	sbrc	r25, 7
    2f82:	a0 95       	com	r26
    2f84:	ba 2f       	mov	r27, r26
    2f86:	2f ef       	ldi	r18, 0xFF	; 255
    2f88:	3f ef       	ldi	r19, 0xFF	; 255
    2f8a:	40 e0       	ldi	r20, 0x00	; 0
    2f8c:	50 e0       	ldi	r21, 0x00	; 0
    2f8e:	bc 01       	movw	r22, r24
    2f90:	cd 01       	movw	r24, r26
    2f92:	0e 94 00 1f 	call	0x3e00	; 0x3e00 <__mulsi3>
    2f96:	dc 01       	movw	r26, r24
    2f98:	cb 01       	movw	r24, r22
    2f9a:	8e 0d       	add	r24, r14
    2f9c:	9f 1d       	adc	r25, r15
    2f9e:	a0 1f       	adc	r26, r16
    2fa0:	b1 1f       	adc	r27, r17
    2fa2:	80 93 0c 03 	sts	0x030C, r24
    2fa6:	90 93 0d 03 	sts	0x030D, r25
    2faa:	a0 93 0e 03 	sts	0x030E, r26
    2fae:	b0 93 0f 03 	sts	0x030F, r27
		TNCT_timer=0;     // reset the counter
    2fb2:	e4 e2       	ldi	r30, 0x24	; 36
    2fb4:	f1 e0       	ldi	r31, 0x01	; 1
    2fb6:	11 82       	std	Z+1, r1	; 0x01
    2fb8:	10 82       	st	Z, r1
		echo_pin=0;
    2fba:	10 92 11 03 	sts	0x0311, r1
    2fbe:	10 92 10 03 	sts	0x0310, r1
		isTriggerd = 0;
    2fc2:	10 92 09 03 	sts	0x0309, r1
    2fc6:	10 92 08 03 	sts	0x0308, r1
		overflows = 0;
    2fca:	10 92 0b 03 	sts	0x030B, r1
    2fce:	10 92 0a 03 	sts	0x030A, r1
    2fd2:	11 c0       	rjmp	.+34     	; 0x2ff6 <__vector_9+0xda>
	}
	else
	{
		TIMER_B |=(1<<CS10);  // used to start the internal counter of microcontroller
    2fd4:	a1 e2       	ldi	r26, 0x21	; 33
    2fd6:	b1 e0       	ldi	r27, 0x01	; 1
    2fd8:	e1 e2       	ldi	r30, 0x21	; 33
    2fda:	f1 e0       	ldi	r31, 0x01	; 1
    2fdc:	80 81       	ld	r24, Z
    2fde:	81 60       	ori	r24, 0x01	; 1
    2fe0:	8c 93       	st	X, r24
		TIMSK_timer = (1 <<TIMSK_bit);
    2fe2:	e3 e7       	ldi	r30, 0x73	; 115
    2fe4:	f0 e0       	ldi	r31, 0x00	; 0
    2fe6:	81 e0       	ldi	r24, 0x01	; 1
    2fe8:	80 83       	st	Z, r24
		echo_pin=1;
    2fea:	81 e0       	ldi	r24, 0x01	; 1
    2fec:	90 e0       	ldi	r25, 0x00	; 0
    2fee:	90 93 11 03 	sts	0x0311, r25
    2ff2:	80 93 10 03 	sts	0x0310, r24
	}
}
    2ff6:	cf 91       	pop	r28
    2ff8:	df 91       	pop	r29
    2ffa:	ff 91       	pop	r31
    2ffc:	ef 91       	pop	r30
    2ffe:	bf 91       	pop	r27
    3000:	af 91       	pop	r26
    3002:	9f 91       	pop	r25
    3004:	8f 91       	pop	r24
    3006:	7f 91       	pop	r23
    3008:	6f 91       	pop	r22
    300a:	5f 91       	pop	r21
    300c:	4f 91       	pop	r20
    300e:	3f 91       	pop	r19
    3010:	2f 91       	pop	r18
    3012:	1f 91       	pop	r17
    3014:	0f 91       	pop	r16
    3016:	ff 90       	pop	r15
    3018:	ef 90       	pop	r14
    301a:	0f 90       	pop	r0
    301c:	00 92 5b 00 	sts	0x005B, r0
    3020:	0f 90       	pop	r0
    3022:	0f be       	out	0x3f, r0	; 63
    3024:	0f 90       	pop	r0
    3026:	1f 90       	pop	r1
    3028:	18 95       	reti

0000302a <__vector_50>:

ISR(ISR_TIMER_OVF){
    302a:	1f 92       	push	r1
    302c:	0f 92       	push	r0
    302e:	0f b6       	in	r0, 0x3f	; 63
    3030:	0f 92       	push	r0
    3032:	11 24       	eor	r1, r1
    3034:	8f 93       	push	r24
    3036:	9f 93       	push	r25
    3038:	df 93       	push	r29
    303a:	cf 93       	push	r28
    303c:	cd b7       	in	r28, 0x3d	; 61
    303e:	de b7       	in	r29, 0x3e	; 62
    overflows++;
    3040:	80 91 0a 03 	lds	r24, 0x030A
    3044:	90 91 0b 03 	lds	r25, 0x030B
    3048:	01 96       	adiw	r24, 0x01	; 1
    304a:	90 93 0b 03 	sts	0x030B, r25
    304e:	80 93 0a 03 	sts	0x030A, r24
}
    3052:	cf 91       	pop	r28
    3054:	df 91       	pop	r29
    3056:	9f 91       	pop	r25
    3058:	8f 91       	pop	r24
    305a:	0f 90       	pop	r0
    305c:	0f be       	out	0x3f, r0	; 63
    305e:	0f 90       	pop	r0
    3060:	1f 90       	pop	r1
    3062:	18 95       	reti

00003064 <__fixunssfsi>:
    3064:	ef 92       	push	r14
    3066:	ff 92       	push	r15
    3068:	0f 93       	push	r16
    306a:	1f 93       	push	r17
    306c:	7b 01       	movw	r14, r22
    306e:	8c 01       	movw	r16, r24
    3070:	20 e0       	ldi	r18, 0x00	; 0
    3072:	30 e0       	ldi	r19, 0x00	; 0
    3074:	40 e0       	ldi	r20, 0x00	; 0
    3076:	5f e4       	ldi	r21, 0x4F	; 79
    3078:	0e 94 de 1b 	call	0x37bc	; 0x37bc <__gesf2>
    307c:	88 23       	and	r24, r24
    307e:	8c f0       	brlt	.+34     	; 0x30a2 <__fixunssfsi+0x3e>
    3080:	c8 01       	movw	r24, r16
    3082:	b7 01       	movw	r22, r14
    3084:	20 e0       	ldi	r18, 0x00	; 0
    3086:	30 e0       	ldi	r19, 0x00	; 0
    3088:	40 e0       	ldi	r20, 0x00	; 0
    308a:	5f e4       	ldi	r21, 0x4F	; 79
    308c:	0e 94 aa 19 	call	0x3354	; 0x3354 <__subsf3>
    3090:	0e 94 3e 1c 	call	0x387c	; 0x387c <__fixsfsi>
    3094:	9b 01       	movw	r18, r22
    3096:	ac 01       	movw	r20, r24
    3098:	20 50       	subi	r18, 0x00	; 0
    309a:	30 40       	sbci	r19, 0x00	; 0
    309c:	40 40       	sbci	r20, 0x00	; 0
    309e:	50 48       	sbci	r21, 0x80	; 128
    30a0:	06 c0       	rjmp	.+12     	; 0x30ae <__fixunssfsi+0x4a>
    30a2:	c8 01       	movw	r24, r16
    30a4:	b7 01       	movw	r22, r14
    30a6:	0e 94 3e 1c 	call	0x387c	; 0x387c <__fixsfsi>
    30aa:	9b 01       	movw	r18, r22
    30ac:	ac 01       	movw	r20, r24
    30ae:	b9 01       	movw	r22, r18
    30b0:	ca 01       	movw	r24, r20
    30b2:	1f 91       	pop	r17
    30b4:	0f 91       	pop	r16
    30b6:	ff 90       	pop	r15
    30b8:	ef 90       	pop	r14
    30ba:	08 95       	ret

000030bc <_fpadd_parts>:
    30bc:	a0 e0       	ldi	r26, 0x00	; 0
    30be:	b0 e0       	ldi	r27, 0x00	; 0
    30c0:	e4 e6       	ldi	r30, 0x64	; 100
    30c2:	f8 e1       	ldi	r31, 0x18	; 24
    30c4:	0c 94 1f 1f 	jmp	0x3e3e	; 0x3e3e <__prologue_saves__>
    30c8:	dc 01       	movw	r26, r24
    30ca:	2b 01       	movw	r4, r22
    30cc:	fa 01       	movw	r30, r20
    30ce:	9c 91       	ld	r25, X
    30d0:	92 30       	cpi	r25, 0x02	; 2
    30d2:	08 f4       	brcc	.+2      	; 0x30d6 <_fpadd_parts+0x1a>
    30d4:	39 c1       	rjmp	.+626    	; 0x3348 <_fpadd_parts+0x28c>
    30d6:	eb 01       	movw	r28, r22
    30d8:	88 81       	ld	r24, Y
    30da:	82 30       	cpi	r24, 0x02	; 2
    30dc:	08 f4       	brcc	.+2      	; 0x30e0 <_fpadd_parts+0x24>
    30de:	33 c1       	rjmp	.+614    	; 0x3346 <_fpadd_parts+0x28a>
    30e0:	94 30       	cpi	r25, 0x04	; 4
    30e2:	69 f4       	brne	.+26     	; 0x30fe <_fpadd_parts+0x42>
    30e4:	84 30       	cpi	r24, 0x04	; 4
    30e6:	09 f0       	breq	.+2      	; 0x30ea <_fpadd_parts+0x2e>
    30e8:	2f c1       	rjmp	.+606    	; 0x3348 <_fpadd_parts+0x28c>
    30ea:	11 96       	adiw	r26, 0x01	; 1
    30ec:	9c 91       	ld	r25, X
    30ee:	11 97       	sbiw	r26, 0x01	; 1
    30f0:	89 81       	ldd	r24, Y+1	; 0x01
    30f2:	98 17       	cp	r25, r24
    30f4:	09 f4       	brne	.+2      	; 0x30f8 <_fpadd_parts+0x3c>
    30f6:	28 c1       	rjmp	.+592    	; 0x3348 <_fpadd_parts+0x28c>
    30f8:	a0 e0       	ldi	r26, 0x00	; 0
    30fa:	b2 e0       	ldi	r27, 0x02	; 2
    30fc:	25 c1       	rjmp	.+586    	; 0x3348 <_fpadd_parts+0x28c>
    30fe:	84 30       	cpi	r24, 0x04	; 4
    3100:	09 f4       	brne	.+2      	; 0x3104 <_fpadd_parts+0x48>
    3102:	21 c1       	rjmp	.+578    	; 0x3346 <_fpadd_parts+0x28a>
    3104:	82 30       	cpi	r24, 0x02	; 2
    3106:	a9 f4       	brne	.+42     	; 0x3132 <_fpadd_parts+0x76>
    3108:	92 30       	cpi	r25, 0x02	; 2
    310a:	09 f0       	breq	.+2      	; 0x310e <_fpadd_parts+0x52>
    310c:	1d c1       	rjmp	.+570    	; 0x3348 <_fpadd_parts+0x28c>
    310e:	9a 01       	movw	r18, r20
    3110:	ad 01       	movw	r20, r26
    3112:	88 e0       	ldi	r24, 0x08	; 8
    3114:	ea 01       	movw	r28, r20
    3116:	09 90       	ld	r0, Y+
    3118:	ae 01       	movw	r20, r28
    311a:	e9 01       	movw	r28, r18
    311c:	09 92       	st	Y+, r0
    311e:	9e 01       	movw	r18, r28
    3120:	81 50       	subi	r24, 0x01	; 1
    3122:	c1 f7       	brne	.-16     	; 0x3114 <_fpadd_parts+0x58>
    3124:	e2 01       	movw	r28, r4
    3126:	89 81       	ldd	r24, Y+1	; 0x01
    3128:	11 96       	adiw	r26, 0x01	; 1
    312a:	9c 91       	ld	r25, X
    312c:	89 23       	and	r24, r25
    312e:	81 83       	std	Z+1, r24	; 0x01
    3130:	08 c1       	rjmp	.+528    	; 0x3342 <_fpadd_parts+0x286>
    3132:	92 30       	cpi	r25, 0x02	; 2
    3134:	09 f4       	brne	.+2      	; 0x3138 <_fpadd_parts+0x7c>
    3136:	07 c1       	rjmp	.+526    	; 0x3346 <_fpadd_parts+0x28a>
    3138:	12 96       	adiw	r26, 0x02	; 2
    313a:	2d 90       	ld	r2, X+
    313c:	3c 90       	ld	r3, X
    313e:	13 97       	sbiw	r26, 0x03	; 3
    3140:	eb 01       	movw	r28, r22
    3142:	8a 81       	ldd	r24, Y+2	; 0x02
    3144:	9b 81       	ldd	r25, Y+3	; 0x03
    3146:	14 96       	adiw	r26, 0x04	; 4
    3148:	ad 90       	ld	r10, X+
    314a:	bd 90       	ld	r11, X+
    314c:	cd 90       	ld	r12, X+
    314e:	dc 90       	ld	r13, X
    3150:	17 97       	sbiw	r26, 0x07	; 7
    3152:	ec 80       	ldd	r14, Y+4	; 0x04
    3154:	fd 80       	ldd	r15, Y+5	; 0x05
    3156:	0e 81       	ldd	r16, Y+6	; 0x06
    3158:	1f 81       	ldd	r17, Y+7	; 0x07
    315a:	91 01       	movw	r18, r2
    315c:	28 1b       	sub	r18, r24
    315e:	39 0b       	sbc	r19, r25
    3160:	b9 01       	movw	r22, r18
    3162:	37 ff       	sbrs	r19, 7
    3164:	04 c0       	rjmp	.+8      	; 0x316e <_fpadd_parts+0xb2>
    3166:	66 27       	eor	r22, r22
    3168:	77 27       	eor	r23, r23
    316a:	62 1b       	sub	r22, r18
    316c:	73 0b       	sbc	r23, r19
    316e:	60 32       	cpi	r22, 0x20	; 32
    3170:	71 05       	cpc	r23, r1
    3172:	0c f0       	brlt	.+2      	; 0x3176 <_fpadd_parts+0xba>
    3174:	61 c0       	rjmp	.+194    	; 0x3238 <_fpadd_parts+0x17c>
    3176:	12 16       	cp	r1, r18
    3178:	13 06       	cpc	r1, r19
    317a:	6c f5       	brge	.+90     	; 0x31d6 <_fpadd_parts+0x11a>
    317c:	37 01       	movw	r6, r14
    317e:	48 01       	movw	r8, r16
    3180:	06 2e       	mov	r0, r22
    3182:	04 c0       	rjmp	.+8      	; 0x318c <_fpadd_parts+0xd0>
    3184:	96 94       	lsr	r9
    3186:	87 94       	ror	r8
    3188:	77 94       	ror	r7
    318a:	67 94       	ror	r6
    318c:	0a 94       	dec	r0
    318e:	d2 f7       	brpl	.-12     	; 0x3184 <_fpadd_parts+0xc8>
    3190:	21 e0       	ldi	r18, 0x01	; 1
    3192:	30 e0       	ldi	r19, 0x00	; 0
    3194:	40 e0       	ldi	r20, 0x00	; 0
    3196:	50 e0       	ldi	r21, 0x00	; 0
    3198:	04 c0       	rjmp	.+8      	; 0x31a2 <_fpadd_parts+0xe6>
    319a:	22 0f       	add	r18, r18
    319c:	33 1f       	adc	r19, r19
    319e:	44 1f       	adc	r20, r20
    31a0:	55 1f       	adc	r21, r21
    31a2:	6a 95       	dec	r22
    31a4:	d2 f7       	brpl	.-12     	; 0x319a <_fpadd_parts+0xde>
    31a6:	21 50       	subi	r18, 0x01	; 1
    31a8:	30 40       	sbci	r19, 0x00	; 0
    31aa:	40 40       	sbci	r20, 0x00	; 0
    31ac:	50 40       	sbci	r21, 0x00	; 0
    31ae:	2e 21       	and	r18, r14
    31b0:	3f 21       	and	r19, r15
    31b2:	40 23       	and	r20, r16
    31b4:	51 23       	and	r21, r17
    31b6:	21 15       	cp	r18, r1
    31b8:	31 05       	cpc	r19, r1
    31ba:	41 05       	cpc	r20, r1
    31bc:	51 05       	cpc	r21, r1
    31be:	21 f0       	breq	.+8      	; 0x31c8 <_fpadd_parts+0x10c>
    31c0:	21 e0       	ldi	r18, 0x01	; 1
    31c2:	30 e0       	ldi	r19, 0x00	; 0
    31c4:	40 e0       	ldi	r20, 0x00	; 0
    31c6:	50 e0       	ldi	r21, 0x00	; 0
    31c8:	79 01       	movw	r14, r18
    31ca:	8a 01       	movw	r16, r20
    31cc:	e6 28       	or	r14, r6
    31ce:	f7 28       	or	r15, r7
    31d0:	08 29       	or	r16, r8
    31d2:	19 29       	or	r17, r9
    31d4:	3c c0       	rjmp	.+120    	; 0x324e <_fpadd_parts+0x192>
    31d6:	23 2b       	or	r18, r19
    31d8:	d1 f1       	breq	.+116    	; 0x324e <_fpadd_parts+0x192>
    31da:	26 0e       	add	r2, r22
    31dc:	37 1e       	adc	r3, r23
    31de:	35 01       	movw	r6, r10
    31e0:	46 01       	movw	r8, r12
    31e2:	06 2e       	mov	r0, r22
    31e4:	04 c0       	rjmp	.+8      	; 0x31ee <_fpadd_parts+0x132>
    31e6:	96 94       	lsr	r9
    31e8:	87 94       	ror	r8
    31ea:	77 94       	ror	r7
    31ec:	67 94       	ror	r6
    31ee:	0a 94       	dec	r0
    31f0:	d2 f7       	brpl	.-12     	; 0x31e6 <_fpadd_parts+0x12a>
    31f2:	21 e0       	ldi	r18, 0x01	; 1
    31f4:	30 e0       	ldi	r19, 0x00	; 0
    31f6:	40 e0       	ldi	r20, 0x00	; 0
    31f8:	50 e0       	ldi	r21, 0x00	; 0
    31fa:	04 c0       	rjmp	.+8      	; 0x3204 <_fpadd_parts+0x148>
    31fc:	22 0f       	add	r18, r18
    31fe:	33 1f       	adc	r19, r19
    3200:	44 1f       	adc	r20, r20
    3202:	55 1f       	adc	r21, r21
    3204:	6a 95       	dec	r22
    3206:	d2 f7       	brpl	.-12     	; 0x31fc <_fpadd_parts+0x140>
    3208:	21 50       	subi	r18, 0x01	; 1
    320a:	30 40       	sbci	r19, 0x00	; 0
    320c:	40 40       	sbci	r20, 0x00	; 0
    320e:	50 40       	sbci	r21, 0x00	; 0
    3210:	2a 21       	and	r18, r10
    3212:	3b 21       	and	r19, r11
    3214:	4c 21       	and	r20, r12
    3216:	5d 21       	and	r21, r13
    3218:	21 15       	cp	r18, r1
    321a:	31 05       	cpc	r19, r1
    321c:	41 05       	cpc	r20, r1
    321e:	51 05       	cpc	r21, r1
    3220:	21 f0       	breq	.+8      	; 0x322a <_fpadd_parts+0x16e>
    3222:	21 e0       	ldi	r18, 0x01	; 1
    3224:	30 e0       	ldi	r19, 0x00	; 0
    3226:	40 e0       	ldi	r20, 0x00	; 0
    3228:	50 e0       	ldi	r21, 0x00	; 0
    322a:	59 01       	movw	r10, r18
    322c:	6a 01       	movw	r12, r20
    322e:	a6 28       	or	r10, r6
    3230:	b7 28       	or	r11, r7
    3232:	c8 28       	or	r12, r8
    3234:	d9 28       	or	r13, r9
    3236:	0b c0       	rjmp	.+22     	; 0x324e <_fpadd_parts+0x192>
    3238:	82 15       	cp	r24, r2
    323a:	93 05       	cpc	r25, r3
    323c:	2c f0       	brlt	.+10     	; 0x3248 <_fpadd_parts+0x18c>
    323e:	1c 01       	movw	r2, r24
    3240:	aa 24       	eor	r10, r10
    3242:	bb 24       	eor	r11, r11
    3244:	65 01       	movw	r12, r10
    3246:	03 c0       	rjmp	.+6      	; 0x324e <_fpadd_parts+0x192>
    3248:	ee 24       	eor	r14, r14
    324a:	ff 24       	eor	r15, r15
    324c:	87 01       	movw	r16, r14
    324e:	11 96       	adiw	r26, 0x01	; 1
    3250:	9c 91       	ld	r25, X
    3252:	d2 01       	movw	r26, r4
    3254:	11 96       	adiw	r26, 0x01	; 1
    3256:	8c 91       	ld	r24, X
    3258:	98 17       	cp	r25, r24
    325a:	09 f4       	brne	.+2      	; 0x325e <_fpadd_parts+0x1a2>
    325c:	45 c0       	rjmp	.+138    	; 0x32e8 <_fpadd_parts+0x22c>
    325e:	99 23       	and	r25, r25
    3260:	39 f0       	breq	.+14     	; 0x3270 <_fpadd_parts+0x1b4>
    3262:	a8 01       	movw	r20, r16
    3264:	97 01       	movw	r18, r14
    3266:	2a 19       	sub	r18, r10
    3268:	3b 09       	sbc	r19, r11
    326a:	4c 09       	sbc	r20, r12
    326c:	5d 09       	sbc	r21, r13
    326e:	06 c0       	rjmp	.+12     	; 0x327c <_fpadd_parts+0x1c0>
    3270:	a6 01       	movw	r20, r12
    3272:	95 01       	movw	r18, r10
    3274:	2e 19       	sub	r18, r14
    3276:	3f 09       	sbc	r19, r15
    3278:	40 0b       	sbc	r20, r16
    327a:	51 0b       	sbc	r21, r17
    327c:	57 fd       	sbrc	r21, 7
    327e:	08 c0       	rjmp	.+16     	; 0x3290 <_fpadd_parts+0x1d4>
    3280:	11 82       	std	Z+1, r1	; 0x01
    3282:	33 82       	std	Z+3, r3	; 0x03
    3284:	22 82       	std	Z+2, r2	; 0x02
    3286:	24 83       	std	Z+4, r18	; 0x04
    3288:	35 83       	std	Z+5, r19	; 0x05
    328a:	46 83       	std	Z+6, r20	; 0x06
    328c:	57 83       	std	Z+7, r21	; 0x07
    328e:	1d c0       	rjmp	.+58     	; 0x32ca <_fpadd_parts+0x20e>
    3290:	81 e0       	ldi	r24, 0x01	; 1
    3292:	81 83       	std	Z+1, r24	; 0x01
    3294:	33 82       	std	Z+3, r3	; 0x03
    3296:	22 82       	std	Z+2, r2	; 0x02
    3298:	88 27       	eor	r24, r24
    329a:	99 27       	eor	r25, r25
    329c:	dc 01       	movw	r26, r24
    329e:	82 1b       	sub	r24, r18
    32a0:	93 0b       	sbc	r25, r19
    32a2:	a4 0b       	sbc	r26, r20
    32a4:	b5 0b       	sbc	r27, r21
    32a6:	84 83       	std	Z+4, r24	; 0x04
    32a8:	95 83       	std	Z+5, r25	; 0x05
    32aa:	a6 83       	std	Z+6, r26	; 0x06
    32ac:	b7 83       	std	Z+7, r27	; 0x07
    32ae:	0d c0       	rjmp	.+26     	; 0x32ca <_fpadd_parts+0x20e>
    32b0:	22 0f       	add	r18, r18
    32b2:	33 1f       	adc	r19, r19
    32b4:	44 1f       	adc	r20, r20
    32b6:	55 1f       	adc	r21, r21
    32b8:	24 83       	std	Z+4, r18	; 0x04
    32ba:	35 83       	std	Z+5, r19	; 0x05
    32bc:	46 83       	std	Z+6, r20	; 0x06
    32be:	57 83       	std	Z+7, r21	; 0x07
    32c0:	82 81       	ldd	r24, Z+2	; 0x02
    32c2:	93 81       	ldd	r25, Z+3	; 0x03
    32c4:	01 97       	sbiw	r24, 0x01	; 1
    32c6:	93 83       	std	Z+3, r25	; 0x03
    32c8:	82 83       	std	Z+2, r24	; 0x02
    32ca:	24 81       	ldd	r18, Z+4	; 0x04
    32cc:	35 81       	ldd	r19, Z+5	; 0x05
    32ce:	46 81       	ldd	r20, Z+6	; 0x06
    32d0:	57 81       	ldd	r21, Z+7	; 0x07
    32d2:	da 01       	movw	r26, r20
    32d4:	c9 01       	movw	r24, r18
    32d6:	01 97       	sbiw	r24, 0x01	; 1
    32d8:	a1 09       	sbc	r26, r1
    32da:	b1 09       	sbc	r27, r1
    32dc:	8f 5f       	subi	r24, 0xFF	; 255
    32de:	9f 4f       	sbci	r25, 0xFF	; 255
    32e0:	af 4f       	sbci	r26, 0xFF	; 255
    32e2:	bf 43       	sbci	r27, 0x3F	; 63
    32e4:	28 f3       	brcs	.-54     	; 0x32b0 <_fpadd_parts+0x1f4>
    32e6:	0b c0       	rjmp	.+22     	; 0x32fe <_fpadd_parts+0x242>
    32e8:	91 83       	std	Z+1, r25	; 0x01
    32ea:	33 82       	std	Z+3, r3	; 0x03
    32ec:	22 82       	std	Z+2, r2	; 0x02
    32ee:	ea 0c       	add	r14, r10
    32f0:	fb 1c       	adc	r15, r11
    32f2:	0c 1d       	adc	r16, r12
    32f4:	1d 1d       	adc	r17, r13
    32f6:	e4 82       	std	Z+4, r14	; 0x04
    32f8:	f5 82       	std	Z+5, r15	; 0x05
    32fa:	06 83       	std	Z+6, r16	; 0x06
    32fc:	17 83       	std	Z+7, r17	; 0x07
    32fe:	83 e0       	ldi	r24, 0x03	; 3
    3300:	80 83       	st	Z, r24
    3302:	24 81       	ldd	r18, Z+4	; 0x04
    3304:	35 81       	ldd	r19, Z+5	; 0x05
    3306:	46 81       	ldd	r20, Z+6	; 0x06
    3308:	57 81       	ldd	r21, Z+7	; 0x07
    330a:	57 ff       	sbrs	r21, 7
    330c:	1a c0       	rjmp	.+52     	; 0x3342 <_fpadd_parts+0x286>
    330e:	c9 01       	movw	r24, r18
    3310:	aa 27       	eor	r26, r26
    3312:	97 fd       	sbrc	r25, 7
    3314:	a0 95       	com	r26
    3316:	ba 2f       	mov	r27, r26
    3318:	81 70       	andi	r24, 0x01	; 1
    331a:	90 70       	andi	r25, 0x00	; 0
    331c:	a0 70       	andi	r26, 0x00	; 0
    331e:	b0 70       	andi	r27, 0x00	; 0
    3320:	56 95       	lsr	r21
    3322:	47 95       	ror	r20
    3324:	37 95       	ror	r19
    3326:	27 95       	ror	r18
    3328:	82 2b       	or	r24, r18
    332a:	93 2b       	or	r25, r19
    332c:	a4 2b       	or	r26, r20
    332e:	b5 2b       	or	r27, r21
    3330:	84 83       	std	Z+4, r24	; 0x04
    3332:	95 83       	std	Z+5, r25	; 0x05
    3334:	a6 83       	std	Z+6, r26	; 0x06
    3336:	b7 83       	std	Z+7, r27	; 0x07
    3338:	82 81       	ldd	r24, Z+2	; 0x02
    333a:	93 81       	ldd	r25, Z+3	; 0x03
    333c:	01 96       	adiw	r24, 0x01	; 1
    333e:	93 83       	std	Z+3, r25	; 0x03
    3340:	82 83       	std	Z+2, r24	; 0x02
    3342:	df 01       	movw	r26, r30
    3344:	01 c0       	rjmp	.+2      	; 0x3348 <_fpadd_parts+0x28c>
    3346:	d2 01       	movw	r26, r4
    3348:	cd 01       	movw	r24, r26
    334a:	cd b7       	in	r28, 0x3d	; 61
    334c:	de b7       	in	r29, 0x3e	; 62
    334e:	e2 e1       	ldi	r30, 0x12	; 18
    3350:	0c 94 3b 1f 	jmp	0x3e76	; 0x3e76 <__epilogue_restores__>

00003354 <__subsf3>:
    3354:	a0 e2       	ldi	r26, 0x20	; 32
    3356:	b0 e0       	ldi	r27, 0x00	; 0
    3358:	e0 eb       	ldi	r30, 0xB0	; 176
    335a:	f9 e1       	ldi	r31, 0x19	; 25
    335c:	0c 94 2b 1f 	jmp	0x3e56	; 0x3e56 <__prologue_saves__+0x18>
    3360:	69 83       	std	Y+1, r22	; 0x01
    3362:	7a 83       	std	Y+2, r23	; 0x02
    3364:	8b 83       	std	Y+3, r24	; 0x03
    3366:	9c 83       	std	Y+4, r25	; 0x04
    3368:	2d 83       	std	Y+5, r18	; 0x05
    336a:	3e 83       	std	Y+6, r19	; 0x06
    336c:	4f 83       	std	Y+7, r20	; 0x07
    336e:	58 87       	std	Y+8, r21	; 0x08
    3370:	e9 e0       	ldi	r30, 0x09	; 9
    3372:	ee 2e       	mov	r14, r30
    3374:	f1 2c       	mov	r15, r1
    3376:	ec 0e       	add	r14, r28
    3378:	fd 1e       	adc	r15, r29
    337a:	ce 01       	movw	r24, r28
    337c:	01 96       	adiw	r24, 0x01	; 1
    337e:	b7 01       	movw	r22, r14
    3380:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    3384:	8e 01       	movw	r16, r28
    3386:	0f 5e       	subi	r16, 0xEF	; 239
    3388:	1f 4f       	sbci	r17, 0xFF	; 255
    338a:	ce 01       	movw	r24, r28
    338c:	05 96       	adiw	r24, 0x05	; 5
    338e:	b8 01       	movw	r22, r16
    3390:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    3394:	8a 89       	ldd	r24, Y+18	; 0x12
    3396:	91 e0       	ldi	r25, 0x01	; 1
    3398:	89 27       	eor	r24, r25
    339a:	8a 8b       	std	Y+18, r24	; 0x12
    339c:	c7 01       	movw	r24, r14
    339e:	b8 01       	movw	r22, r16
    33a0:	ae 01       	movw	r20, r28
    33a2:	47 5e       	subi	r20, 0xE7	; 231
    33a4:	5f 4f       	sbci	r21, 0xFF	; 255
    33a6:	0e 94 5e 18 	call	0x30bc	; 0x30bc <_fpadd_parts>
    33aa:	0e 94 5a 1d 	call	0x3ab4	; 0x3ab4 <__pack_f>
    33ae:	a0 96       	adiw	r28, 0x20	; 32
    33b0:	e6 e0       	ldi	r30, 0x06	; 6
    33b2:	0c 94 47 1f 	jmp	0x3e8e	; 0x3e8e <__epilogue_restores__+0x18>

000033b6 <__addsf3>:
    33b6:	a0 e2       	ldi	r26, 0x20	; 32
    33b8:	b0 e0       	ldi	r27, 0x00	; 0
    33ba:	e1 ee       	ldi	r30, 0xE1	; 225
    33bc:	f9 e1       	ldi	r31, 0x19	; 25
    33be:	0c 94 2b 1f 	jmp	0x3e56	; 0x3e56 <__prologue_saves__+0x18>
    33c2:	69 83       	std	Y+1, r22	; 0x01
    33c4:	7a 83       	std	Y+2, r23	; 0x02
    33c6:	8b 83       	std	Y+3, r24	; 0x03
    33c8:	9c 83       	std	Y+4, r25	; 0x04
    33ca:	2d 83       	std	Y+5, r18	; 0x05
    33cc:	3e 83       	std	Y+6, r19	; 0x06
    33ce:	4f 83       	std	Y+7, r20	; 0x07
    33d0:	58 87       	std	Y+8, r21	; 0x08
    33d2:	f9 e0       	ldi	r31, 0x09	; 9
    33d4:	ef 2e       	mov	r14, r31
    33d6:	f1 2c       	mov	r15, r1
    33d8:	ec 0e       	add	r14, r28
    33da:	fd 1e       	adc	r15, r29
    33dc:	ce 01       	movw	r24, r28
    33de:	01 96       	adiw	r24, 0x01	; 1
    33e0:	b7 01       	movw	r22, r14
    33e2:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    33e6:	8e 01       	movw	r16, r28
    33e8:	0f 5e       	subi	r16, 0xEF	; 239
    33ea:	1f 4f       	sbci	r17, 0xFF	; 255
    33ec:	ce 01       	movw	r24, r28
    33ee:	05 96       	adiw	r24, 0x05	; 5
    33f0:	b8 01       	movw	r22, r16
    33f2:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    33f6:	c7 01       	movw	r24, r14
    33f8:	b8 01       	movw	r22, r16
    33fa:	ae 01       	movw	r20, r28
    33fc:	47 5e       	subi	r20, 0xE7	; 231
    33fe:	5f 4f       	sbci	r21, 0xFF	; 255
    3400:	0e 94 5e 18 	call	0x30bc	; 0x30bc <_fpadd_parts>
    3404:	0e 94 5a 1d 	call	0x3ab4	; 0x3ab4 <__pack_f>
    3408:	a0 96       	adiw	r28, 0x20	; 32
    340a:	e6 e0       	ldi	r30, 0x06	; 6
    340c:	0c 94 47 1f 	jmp	0x3e8e	; 0x3e8e <__epilogue_restores__+0x18>

00003410 <__mulsf3>:
    3410:	a0 e2       	ldi	r26, 0x20	; 32
    3412:	b0 e0       	ldi	r27, 0x00	; 0
    3414:	ee e0       	ldi	r30, 0x0E	; 14
    3416:	fa e1       	ldi	r31, 0x1A	; 26
    3418:	0c 94 1f 1f 	jmp	0x3e3e	; 0x3e3e <__prologue_saves__>
    341c:	69 83       	std	Y+1, r22	; 0x01
    341e:	7a 83       	std	Y+2, r23	; 0x02
    3420:	8b 83       	std	Y+3, r24	; 0x03
    3422:	9c 83       	std	Y+4, r25	; 0x04
    3424:	2d 83       	std	Y+5, r18	; 0x05
    3426:	3e 83       	std	Y+6, r19	; 0x06
    3428:	4f 83       	std	Y+7, r20	; 0x07
    342a:	58 87       	std	Y+8, r21	; 0x08
    342c:	ce 01       	movw	r24, r28
    342e:	01 96       	adiw	r24, 0x01	; 1
    3430:	be 01       	movw	r22, r28
    3432:	67 5f       	subi	r22, 0xF7	; 247
    3434:	7f 4f       	sbci	r23, 0xFF	; 255
    3436:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    343a:	ce 01       	movw	r24, r28
    343c:	05 96       	adiw	r24, 0x05	; 5
    343e:	be 01       	movw	r22, r28
    3440:	6f 5e       	subi	r22, 0xEF	; 239
    3442:	7f 4f       	sbci	r23, 0xFF	; 255
    3444:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    3448:	99 85       	ldd	r25, Y+9	; 0x09
    344a:	92 30       	cpi	r25, 0x02	; 2
    344c:	88 f0       	brcs	.+34     	; 0x3470 <__mulsf3+0x60>
    344e:	89 89       	ldd	r24, Y+17	; 0x11
    3450:	82 30       	cpi	r24, 0x02	; 2
    3452:	c8 f0       	brcs	.+50     	; 0x3486 <__mulsf3+0x76>
    3454:	94 30       	cpi	r25, 0x04	; 4
    3456:	19 f4       	brne	.+6      	; 0x345e <__mulsf3+0x4e>
    3458:	82 30       	cpi	r24, 0x02	; 2
    345a:	51 f4       	brne	.+20     	; 0x3470 <__mulsf3+0x60>
    345c:	04 c0       	rjmp	.+8      	; 0x3466 <__mulsf3+0x56>
    345e:	84 30       	cpi	r24, 0x04	; 4
    3460:	29 f4       	brne	.+10     	; 0x346c <__mulsf3+0x5c>
    3462:	92 30       	cpi	r25, 0x02	; 2
    3464:	81 f4       	brne	.+32     	; 0x3486 <__mulsf3+0x76>
    3466:	80 e0       	ldi	r24, 0x00	; 0
    3468:	92 e0       	ldi	r25, 0x02	; 2
    346a:	c6 c0       	rjmp	.+396    	; 0x35f8 <__mulsf3+0x1e8>
    346c:	92 30       	cpi	r25, 0x02	; 2
    346e:	49 f4       	brne	.+18     	; 0x3482 <__mulsf3+0x72>
    3470:	20 e0       	ldi	r18, 0x00	; 0
    3472:	9a 85       	ldd	r25, Y+10	; 0x0a
    3474:	8a 89       	ldd	r24, Y+18	; 0x12
    3476:	98 13       	cpse	r25, r24
    3478:	21 e0       	ldi	r18, 0x01	; 1
    347a:	2a 87       	std	Y+10, r18	; 0x0a
    347c:	ce 01       	movw	r24, r28
    347e:	09 96       	adiw	r24, 0x09	; 9
    3480:	bb c0       	rjmp	.+374    	; 0x35f8 <__mulsf3+0x1e8>
    3482:	82 30       	cpi	r24, 0x02	; 2
    3484:	49 f4       	brne	.+18     	; 0x3498 <__mulsf3+0x88>
    3486:	20 e0       	ldi	r18, 0x00	; 0
    3488:	9a 85       	ldd	r25, Y+10	; 0x0a
    348a:	8a 89       	ldd	r24, Y+18	; 0x12
    348c:	98 13       	cpse	r25, r24
    348e:	21 e0       	ldi	r18, 0x01	; 1
    3490:	2a 8b       	std	Y+18, r18	; 0x12
    3492:	ce 01       	movw	r24, r28
    3494:	41 96       	adiw	r24, 0x11	; 17
    3496:	b0 c0       	rjmp	.+352    	; 0x35f8 <__mulsf3+0x1e8>
    3498:	2d 84       	ldd	r2, Y+13	; 0x0d
    349a:	3e 84       	ldd	r3, Y+14	; 0x0e
    349c:	4f 84       	ldd	r4, Y+15	; 0x0f
    349e:	58 88       	ldd	r5, Y+16	; 0x10
    34a0:	6d 88       	ldd	r6, Y+21	; 0x15
    34a2:	7e 88       	ldd	r7, Y+22	; 0x16
    34a4:	8f 88       	ldd	r8, Y+23	; 0x17
    34a6:	98 8c       	ldd	r9, Y+24	; 0x18
    34a8:	ee 24       	eor	r14, r14
    34aa:	ff 24       	eor	r15, r15
    34ac:	87 01       	movw	r16, r14
    34ae:	aa 24       	eor	r10, r10
    34b0:	bb 24       	eor	r11, r11
    34b2:	65 01       	movw	r12, r10
    34b4:	40 e0       	ldi	r20, 0x00	; 0
    34b6:	50 e0       	ldi	r21, 0x00	; 0
    34b8:	60 e0       	ldi	r22, 0x00	; 0
    34ba:	70 e0       	ldi	r23, 0x00	; 0
    34bc:	e0 e0       	ldi	r30, 0x00	; 0
    34be:	f0 e0       	ldi	r31, 0x00	; 0
    34c0:	c1 01       	movw	r24, r2
    34c2:	81 70       	andi	r24, 0x01	; 1
    34c4:	90 70       	andi	r25, 0x00	; 0
    34c6:	89 2b       	or	r24, r25
    34c8:	e9 f0       	breq	.+58     	; 0x3504 <__mulsf3+0xf4>
    34ca:	e6 0c       	add	r14, r6
    34cc:	f7 1c       	adc	r15, r7
    34ce:	08 1d       	adc	r16, r8
    34d0:	19 1d       	adc	r17, r9
    34d2:	9a 01       	movw	r18, r20
    34d4:	ab 01       	movw	r20, r22
    34d6:	2a 0d       	add	r18, r10
    34d8:	3b 1d       	adc	r19, r11
    34da:	4c 1d       	adc	r20, r12
    34dc:	5d 1d       	adc	r21, r13
    34de:	80 e0       	ldi	r24, 0x00	; 0
    34e0:	90 e0       	ldi	r25, 0x00	; 0
    34e2:	a0 e0       	ldi	r26, 0x00	; 0
    34e4:	b0 e0       	ldi	r27, 0x00	; 0
    34e6:	e6 14       	cp	r14, r6
    34e8:	f7 04       	cpc	r15, r7
    34ea:	08 05       	cpc	r16, r8
    34ec:	19 05       	cpc	r17, r9
    34ee:	20 f4       	brcc	.+8      	; 0x34f8 <__mulsf3+0xe8>
    34f0:	81 e0       	ldi	r24, 0x01	; 1
    34f2:	90 e0       	ldi	r25, 0x00	; 0
    34f4:	a0 e0       	ldi	r26, 0x00	; 0
    34f6:	b0 e0       	ldi	r27, 0x00	; 0
    34f8:	ba 01       	movw	r22, r20
    34fa:	a9 01       	movw	r20, r18
    34fc:	48 0f       	add	r20, r24
    34fe:	59 1f       	adc	r21, r25
    3500:	6a 1f       	adc	r22, r26
    3502:	7b 1f       	adc	r23, r27
    3504:	aa 0c       	add	r10, r10
    3506:	bb 1c       	adc	r11, r11
    3508:	cc 1c       	adc	r12, r12
    350a:	dd 1c       	adc	r13, r13
    350c:	97 fe       	sbrs	r9, 7
    350e:	08 c0       	rjmp	.+16     	; 0x3520 <__mulsf3+0x110>
    3510:	81 e0       	ldi	r24, 0x01	; 1
    3512:	90 e0       	ldi	r25, 0x00	; 0
    3514:	a0 e0       	ldi	r26, 0x00	; 0
    3516:	b0 e0       	ldi	r27, 0x00	; 0
    3518:	a8 2a       	or	r10, r24
    351a:	b9 2a       	or	r11, r25
    351c:	ca 2a       	or	r12, r26
    351e:	db 2a       	or	r13, r27
    3520:	31 96       	adiw	r30, 0x01	; 1
    3522:	e0 32       	cpi	r30, 0x20	; 32
    3524:	f1 05       	cpc	r31, r1
    3526:	49 f0       	breq	.+18     	; 0x353a <__mulsf3+0x12a>
    3528:	66 0c       	add	r6, r6
    352a:	77 1c       	adc	r7, r7
    352c:	88 1c       	adc	r8, r8
    352e:	99 1c       	adc	r9, r9
    3530:	56 94       	lsr	r5
    3532:	47 94       	ror	r4
    3534:	37 94       	ror	r3
    3536:	27 94       	ror	r2
    3538:	c3 cf       	rjmp	.-122    	; 0x34c0 <__mulsf3+0xb0>
    353a:	fa 85       	ldd	r31, Y+10	; 0x0a
    353c:	ea 89       	ldd	r30, Y+18	; 0x12
    353e:	2b 89       	ldd	r18, Y+19	; 0x13
    3540:	3c 89       	ldd	r19, Y+20	; 0x14
    3542:	8b 85       	ldd	r24, Y+11	; 0x0b
    3544:	9c 85       	ldd	r25, Y+12	; 0x0c
    3546:	28 0f       	add	r18, r24
    3548:	39 1f       	adc	r19, r25
    354a:	2e 5f       	subi	r18, 0xFE	; 254
    354c:	3f 4f       	sbci	r19, 0xFF	; 255
    354e:	17 c0       	rjmp	.+46     	; 0x357e <__mulsf3+0x16e>
    3550:	ca 01       	movw	r24, r20
    3552:	81 70       	andi	r24, 0x01	; 1
    3554:	90 70       	andi	r25, 0x00	; 0
    3556:	89 2b       	or	r24, r25
    3558:	61 f0       	breq	.+24     	; 0x3572 <__mulsf3+0x162>
    355a:	16 95       	lsr	r17
    355c:	07 95       	ror	r16
    355e:	f7 94       	ror	r15
    3560:	e7 94       	ror	r14
    3562:	80 e0       	ldi	r24, 0x00	; 0
    3564:	90 e0       	ldi	r25, 0x00	; 0
    3566:	a0 e0       	ldi	r26, 0x00	; 0
    3568:	b0 e8       	ldi	r27, 0x80	; 128
    356a:	e8 2a       	or	r14, r24
    356c:	f9 2a       	or	r15, r25
    356e:	0a 2b       	or	r16, r26
    3570:	1b 2b       	or	r17, r27
    3572:	76 95       	lsr	r23
    3574:	67 95       	ror	r22
    3576:	57 95       	ror	r21
    3578:	47 95       	ror	r20
    357a:	2f 5f       	subi	r18, 0xFF	; 255
    357c:	3f 4f       	sbci	r19, 0xFF	; 255
    357e:	77 fd       	sbrc	r23, 7
    3580:	e7 cf       	rjmp	.-50     	; 0x3550 <__mulsf3+0x140>
    3582:	0c c0       	rjmp	.+24     	; 0x359c <__mulsf3+0x18c>
    3584:	44 0f       	add	r20, r20
    3586:	55 1f       	adc	r21, r21
    3588:	66 1f       	adc	r22, r22
    358a:	77 1f       	adc	r23, r23
    358c:	17 fd       	sbrc	r17, 7
    358e:	41 60       	ori	r20, 0x01	; 1
    3590:	ee 0c       	add	r14, r14
    3592:	ff 1c       	adc	r15, r15
    3594:	00 1f       	adc	r16, r16
    3596:	11 1f       	adc	r17, r17
    3598:	21 50       	subi	r18, 0x01	; 1
    359a:	30 40       	sbci	r19, 0x00	; 0
    359c:	40 30       	cpi	r20, 0x00	; 0
    359e:	90 e0       	ldi	r25, 0x00	; 0
    35a0:	59 07       	cpc	r21, r25
    35a2:	90 e0       	ldi	r25, 0x00	; 0
    35a4:	69 07       	cpc	r22, r25
    35a6:	90 e4       	ldi	r25, 0x40	; 64
    35a8:	79 07       	cpc	r23, r25
    35aa:	60 f3       	brcs	.-40     	; 0x3584 <__mulsf3+0x174>
    35ac:	2b 8f       	std	Y+27, r18	; 0x1b
    35ae:	3c 8f       	std	Y+28, r19	; 0x1c
    35b0:	db 01       	movw	r26, r22
    35b2:	ca 01       	movw	r24, r20
    35b4:	8f 77       	andi	r24, 0x7F	; 127
    35b6:	90 70       	andi	r25, 0x00	; 0
    35b8:	a0 70       	andi	r26, 0x00	; 0
    35ba:	b0 70       	andi	r27, 0x00	; 0
    35bc:	80 34       	cpi	r24, 0x40	; 64
    35be:	91 05       	cpc	r25, r1
    35c0:	a1 05       	cpc	r26, r1
    35c2:	b1 05       	cpc	r27, r1
    35c4:	61 f4       	brne	.+24     	; 0x35de <__mulsf3+0x1ce>
    35c6:	47 fd       	sbrc	r20, 7
    35c8:	0a c0       	rjmp	.+20     	; 0x35de <__mulsf3+0x1ce>
    35ca:	e1 14       	cp	r14, r1
    35cc:	f1 04       	cpc	r15, r1
    35ce:	01 05       	cpc	r16, r1
    35d0:	11 05       	cpc	r17, r1
    35d2:	29 f0       	breq	.+10     	; 0x35de <__mulsf3+0x1ce>
    35d4:	40 5c       	subi	r20, 0xC0	; 192
    35d6:	5f 4f       	sbci	r21, 0xFF	; 255
    35d8:	6f 4f       	sbci	r22, 0xFF	; 255
    35da:	7f 4f       	sbci	r23, 0xFF	; 255
    35dc:	40 78       	andi	r20, 0x80	; 128
    35de:	1a 8e       	std	Y+26, r1	; 0x1a
    35e0:	fe 17       	cp	r31, r30
    35e2:	11 f0       	breq	.+4      	; 0x35e8 <__mulsf3+0x1d8>
    35e4:	81 e0       	ldi	r24, 0x01	; 1
    35e6:	8a 8f       	std	Y+26, r24	; 0x1a
    35e8:	4d 8f       	std	Y+29, r20	; 0x1d
    35ea:	5e 8f       	std	Y+30, r21	; 0x1e
    35ec:	6f 8f       	std	Y+31, r22	; 0x1f
    35ee:	78 a3       	std	Y+32, r23	; 0x20
    35f0:	83 e0       	ldi	r24, 0x03	; 3
    35f2:	89 8f       	std	Y+25, r24	; 0x19
    35f4:	ce 01       	movw	r24, r28
    35f6:	49 96       	adiw	r24, 0x19	; 25
    35f8:	0e 94 5a 1d 	call	0x3ab4	; 0x3ab4 <__pack_f>
    35fc:	a0 96       	adiw	r28, 0x20	; 32
    35fe:	e2 e1       	ldi	r30, 0x12	; 18
    3600:	0c 94 3b 1f 	jmp	0x3e76	; 0x3e76 <__epilogue_restores__>

00003604 <__divsf3>:
    3604:	a8 e1       	ldi	r26, 0x18	; 24
    3606:	b0 e0       	ldi	r27, 0x00	; 0
    3608:	e8 e0       	ldi	r30, 0x08	; 8
    360a:	fb e1       	ldi	r31, 0x1B	; 27
    360c:	0c 94 27 1f 	jmp	0x3e4e	; 0x3e4e <__prologue_saves__+0x10>
    3610:	69 83       	std	Y+1, r22	; 0x01
    3612:	7a 83       	std	Y+2, r23	; 0x02
    3614:	8b 83       	std	Y+3, r24	; 0x03
    3616:	9c 83       	std	Y+4, r25	; 0x04
    3618:	2d 83       	std	Y+5, r18	; 0x05
    361a:	3e 83       	std	Y+6, r19	; 0x06
    361c:	4f 83       	std	Y+7, r20	; 0x07
    361e:	58 87       	std	Y+8, r21	; 0x08
    3620:	b9 e0       	ldi	r27, 0x09	; 9
    3622:	eb 2e       	mov	r14, r27
    3624:	f1 2c       	mov	r15, r1
    3626:	ec 0e       	add	r14, r28
    3628:	fd 1e       	adc	r15, r29
    362a:	ce 01       	movw	r24, r28
    362c:	01 96       	adiw	r24, 0x01	; 1
    362e:	b7 01       	movw	r22, r14
    3630:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    3634:	8e 01       	movw	r16, r28
    3636:	0f 5e       	subi	r16, 0xEF	; 239
    3638:	1f 4f       	sbci	r17, 0xFF	; 255
    363a:	ce 01       	movw	r24, r28
    363c:	05 96       	adiw	r24, 0x05	; 5
    363e:	b8 01       	movw	r22, r16
    3640:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    3644:	29 85       	ldd	r18, Y+9	; 0x09
    3646:	22 30       	cpi	r18, 0x02	; 2
    3648:	08 f4       	brcc	.+2      	; 0x364c <__divsf3+0x48>
    364a:	7e c0       	rjmp	.+252    	; 0x3748 <__divsf3+0x144>
    364c:	39 89       	ldd	r19, Y+17	; 0x11
    364e:	32 30       	cpi	r19, 0x02	; 2
    3650:	10 f4       	brcc	.+4      	; 0x3656 <__divsf3+0x52>
    3652:	b8 01       	movw	r22, r16
    3654:	7c c0       	rjmp	.+248    	; 0x374e <__divsf3+0x14a>
    3656:	8a 85       	ldd	r24, Y+10	; 0x0a
    3658:	9a 89       	ldd	r25, Y+18	; 0x12
    365a:	89 27       	eor	r24, r25
    365c:	8a 87       	std	Y+10, r24	; 0x0a
    365e:	24 30       	cpi	r18, 0x04	; 4
    3660:	11 f0       	breq	.+4      	; 0x3666 <__divsf3+0x62>
    3662:	22 30       	cpi	r18, 0x02	; 2
    3664:	31 f4       	brne	.+12     	; 0x3672 <__divsf3+0x6e>
    3666:	23 17       	cp	r18, r19
    3668:	09 f0       	breq	.+2      	; 0x366c <__divsf3+0x68>
    366a:	6e c0       	rjmp	.+220    	; 0x3748 <__divsf3+0x144>
    366c:	60 e0       	ldi	r22, 0x00	; 0
    366e:	72 e0       	ldi	r23, 0x02	; 2
    3670:	6e c0       	rjmp	.+220    	; 0x374e <__divsf3+0x14a>
    3672:	34 30       	cpi	r19, 0x04	; 4
    3674:	39 f4       	brne	.+14     	; 0x3684 <__divsf3+0x80>
    3676:	1d 86       	std	Y+13, r1	; 0x0d
    3678:	1e 86       	std	Y+14, r1	; 0x0e
    367a:	1f 86       	std	Y+15, r1	; 0x0f
    367c:	18 8a       	std	Y+16, r1	; 0x10
    367e:	1c 86       	std	Y+12, r1	; 0x0c
    3680:	1b 86       	std	Y+11, r1	; 0x0b
    3682:	04 c0       	rjmp	.+8      	; 0x368c <__divsf3+0x88>
    3684:	32 30       	cpi	r19, 0x02	; 2
    3686:	21 f4       	brne	.+8      	; 0x3690 <__divsf3+0x8c>
    3688:	84 e0       	ldi	r24, 0x04	; 4
    368a:	89 87       	std	Y+9, r24	; 0x09
    368c:	b7 01       	movw	r22, r14
    368e:	5f c0       	rjmp	.+190    	; 0x374e <__divsf3+0x14a>
    3690:	2b 85       	ldd	r18, Y+11	; 0x0b
    3692:	3c 85       	ldd	r19, Y+12	; 0x0c
    3694:	8b 89       	ldd	r24, Y+19	; 0x13
    3696:	9c 89       	ldd	r25, Y+20	; 0x14
    3698:	28 1b       	sub	r18, r24
    369a:	39 0b       	sbc	r19, r25
    369c:	3c 87       	std	Y+12, r19	; 0x0c
    369e:	2b 87       	std	Y+11, r18	; 0x0b
    36a0:	ed 84       	ldd	r14, Y+13	; 0x0d
    36a2:	fe 84       	ldd	r15, Y+14	; 0x0e
    36a4:	0f 85       	ldd	r16, Y+15	; 0x0f
    36a6:	18 89       	ldd	r17, Y+16	; 0x10
    36a8:	ad 88       	ldd	r10, Y+21	; 0x15
    36aa:	be 88       	ldd	r11, Y+22	; 0x16
    36ac:	cf 88       	ldd	r12, Y+23	; 0x17
    36ae:	d8 8c       	ldd	r13, Y+24	; 0x18
    36b0:	ea 14       	cp	r14, r10
    36b2:	fb 04       	cpc	r15, r11
    36b4:	0c 05       	cpc	r16, r12
    36b6:	1d 05       	cpc	r17, r13
    36b8:	40 f4       	brcc	.+16     	; 0x36ca <__divsf3+0xc6>
    36ba:	ee 0c       	add	r14, r14
    36bc:	ff 1c       	adc	r15, r15
    36be:	00 1f       	adc	r16, r16
    36c0:	11 1f       	adc	r17, r17
    36c2:	21 50       	subi	r18, 0x01	; 1
    36c4:	30 40       	sbci	r19, 0x00	; 0
    36c6:	3c 87       	std	Y+12, r19	; 0x0c
    36c8:	2b 87       	std	Y+11, r18	; 0x0b
    36ca:	20 e0       	ldi	r18, 0x00	; 0
    36cc:	30 e0       	ldi	r19, 0x00	; 0
    36ce:	40 e0       	ldi	r20, 0x00	; 0
    36d0:	50 e0       	ldi	r21, 0x00	; 0
    36d2:	80 e0       	ldi	r24, 0x00	; 0
    36d4:	90 e0       	ldi	r25, 0x00	; 0
    36d6:	a0 e0       	ldi	r26, 0x00	; 0
    36d8:	b0 e4       	ldi	r27, 0x40	; 64
    36da:	60 e0       	ldi	r22, 0x00	; 0
    36dc:	70 e0       	ldi	r23, 0x00	; 0
    36de:	ea 14       	cp	r14, r10
    36e0:	fb 04       	cpc	r15, r11
    36e2:	0c 05       	cpc	r16, r12
    36e4:	1d 05       	cpc	r17, r13
    36e6:	40 f0       	brcs	.+16     	; 0x36f8 <__divsf3+0xf4>
    36e8:	28 2b       	or	r18, r24
    36ea:	39 2b       	or	r19, r25
    36ec:	4a 2b       	or	r20, r26
    36ee:	5b 2b       	or	r21, r27
    36f0:	ea 18       	sub	r14, r10
    36f2:	fb 08       	sbc	r15, r11
    36f4:	0c 09       	sbc	r16, r12
    36f6:	1d 09       	sbc	r17, r13
    36f8:	b6 95       	lsr	r27
    36fa:	a7 95       	ror	r26
    36fc:	97 95       	ror	r25
    36fe:	87 95       	ror	r24
    3700:	ee 0c       	add	r14, r14
    3702:	ff 1c       	adc	r15, r15
    3704:	00 1f       	adc	r16, r16
    3706:	11 1f       	adc	r17, r17
    3708:	6f 5f       	subi	r22, 0xFF	; 255
    370a:	7f 4f       	sbci	r23, 0xFF	; 255
    370c:	6f 31       	cpi	r22, 0x1F	; 31
    370e:	71 05       	cpc	r23, r1
    3710:	31 f7       	brne	.-52     	; 0x36de <__divsf3+0xda>
    3712:	da 01       	movw	r26, r20
    3714:	c9 01       	movw	r24, r18
    3716:	8f 77       	andi	r24, 0x7F	; 127
    3718:	90 70       	andi	r25, 0x00	; 0
    371a:	a0 70       	andi	r26, 0x00	; 0
    371c:	b0 70       	andi	r27, 0x00	; 0
    371e:	80 34       	cpi	r24, 0x40	; 64
    3720:	91 05       	cpc	r25, r1
    3722:	a1 05       	cpc	r26, r1
    3724:	b1 05       	cpc	r27, r1
    3726:	61 f4       	brne	.+24     	; 0x3740 <__divsf3+0x13c>
    3728:	27 fd       	sbrc	r18, 7
    372a:	0a c0       	rjmp	.+20     	; 0x3740 <__divsf3+0x13c>
    372c:	e1 14       	cp	r14, r1
    372e:	f1 04       	cpc	r15, r1
    3730:	01 05       	cpc	r16, r1
    3732:	11 05       	cpc	r17, r1
    3734:	29 f0       	breq	.+10     	; 0x3740 <__divsf3+0x13c>
    3736:	20 5c       	subi	r18, 0xC0	; 192
    3738:	3f 4f       	sbci	r19, 0xFF	; 255
    373a:	4f 4f       	sbci	r20, 0xFF	; 255
    373c:	5f 4f       	sbci	r21, 0xFF	; 255
    373e:	20 78       	andi	r18, 0x80	; 128
    3740:	2d 87       	std	Y+13, r18	; 0x0d
    3742:	3e 87       	std	Y+14, r19	; 0x0e
    3744:	4f 87       	std	Y+15, r20	; 0x0f
    3746:	58 8b       	std	Y+16, r21	; 0x10
    3748:	be 01       	movw	r22, r28
    374a:	67 5f       	subi	r22, 0xF7	; 247
    374c:	7f 4f       	sbci	r23, 0xFF	; 255
    374e:	cb 01       	movw	r24, r22
    3750:	0e 94 5a 1d 	call	0x3ab4	; 0x3ab4 <__pack_f>
    3754:	68 96       	adiw	r28, 0x18	; 24
    3756:	ea e0       	ldi	r30, 0x0A	; 10
    3758:	0c 94 43 1f 	jmp	0x3e86	; 0x3e86 <__epilogue_restores__+0x10>

0000375c <__gtsf2>:
    375c:	a8 e1       	ldi	r26, 0x18	; 24
    375e:	b0 e0       	ldi	r27, 0x00	; 0
    3760:	e4 eb       	ldi	r30, 0xB4	; 180
    3762:	fb e1       	ldi	r31, 0x1B	; 27
    3764:	0c 94 2b 1f 	jmp	0x3e56	; 0x3e56 <__prologue_saves__+0x18>
    3768:	69 83       	std	Y+1, r22	; 0x01
    376a:	7a 83       	std	Y+2, r23	; 0x02
    376c:	8b 83       	std	Y+3, r24	; 0x03
    376e:	9c 83       	std	Y+4, r25	; 0x04
    3770:	2d 83       	std	Y+5, r18	; 0x05
    3772:	3e 83       	std	Y+6, r19	; 0x06
    3774:	4f 83       	std	Y+7, r20	; 0x07
    3776:	58 87       	std	Y+8, r21	; 0x08
    3778:	89 e0       	ldi	r24, 0x09	; 9
    377a:	e8 2e       	mov	r14, r24
    377c:	f1 2c       	mov	r15, r1
    377e:	ec 0e       	add	r14, r28
    3780:	fd 1e       	adc	r15, r29
    3782:	ce 01       	movw	r24, r28
    3784:	01 96       	adiw	r24, 0x01	; 1
    3786:	b7 01       	movw	r22, r14
    3788:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    378c:	8e 01       	movw	r16, r28
    378e:	0f 5e       	subi	r16, 0xEF	; 239
    3790:	1f 4f       	sbci	r17, 0xFF	; 255
    3792:	ce 01       	movw	r24, r28
    3794:	05 96       	adiw	r24, 0x05	; 5
    3796:	b8 01       	movw	r22, r16
    3798:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    379c:	89 85       	ldd	r24, Y+9	; 0x09
    379e:	82 30       	cpi	r24, 0x02	; 2
    37a0:	40 f0       	brcs	.+16     	; 0x37b2 <__gtsf2+0x56>
    37a2:	89 89       	ldd	r24, Y+17	; 0x11
    37a4:	82 30       	cpi	r24, 0x02	; 2
    37a6:	28 f0       	brcs	.+10     	; 0x37b2 <__gtsf2+0x56>
    37a8:	c7 01       	movw	r24, r14
    37aa:	b8 01       	movw	r22, r16
    37ac:	0e 94 a7 1e 	call	0x3d4e	; 0x3d4e <__fpcmp_parts_f>
    37b0:	01 c0       	rjmp	.+2      	; 0x37b4 <__gtsf2+0x58>
    37b2:	8f ef       	ldi	r24, 0xFF	; 255
    37b4:	68 96       	adiw	r28, 0x18	; 24
    37b6:	e6 e0       	ldi	r30, 0x06	; 6
    37b8:	0c 94 47 1f 	jmp	0x3e8e	; 0x3e8e <__epilogue_restores__+0x18>

000037bc <__gesf2>:
    37bc:	a8 e1       	ldi	r26, 0x18	; 24
    37be:	b0 e0       	ldi	r27, 0x00	; 0
    37c0:	e4 ee       	ldi	r30, 0xE4	; 228
    37c2:	fb e1       	ldi	r31, 0x1B	; 27
    37c4:	0c 94 2b 1f 	jmp	0x3e56	; 0x3e56 <__prologue_saves__+0x18>
    37c8:	69 83       	std	Y+1, r22	; 0x01
    37ca:	7a 83       	std	Y+2, r23	; 0x02
    37cc:	8b 83       	std	Y+3, r24	; 0x03
    37ce:	9c 83       	std	Y+4, r25	; 0x04
    37d0:	2d 83       	std	Y+5, r18	; 0x05
    37d2:	3e 83       	std	Y+6, r19	; 0x06
    37d4:	4f 83       	std	Y+7, r20	; 0x07
    37d6:	58 87       	std	Y+8, r21	; 0x08
    37d8:	89 e0       	ldi	r24, 0x09	; 9
    37da:	e8 2e       	mov	r14, r24
    37dc:	f1 2c       	mov	r15, r1
    37de:	ec 0e       	add	r14, r28
    37e0:	fd 1e       	adc	r15, r29
    37e2:	ce 01       	movw	r24, r28
    37e4:	01 96       	adiw	r24, 0x01	; 1
    37e6:	b7 01       	movw	r22, r14
    37e8:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    37ec:	8e 01       	movw	r16, r28
    37ee:	0f 5e       	subi	r16, 0xEF	; 239
    37f0:	1f 4f       	sbci	r17, 0xFF	; 255
    37f2:	ce 01       	movw	r24, r28
    37f4:	05 96       	adiw	r24, 0x05	; 5
    37f6:	b8 01       	movw	r22, r16
    37f8:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    37fc:	89 85       	ldd	r24, Y+9	; 0x09
    37fe:	82 30       	cpi	r24, 0x02	; 2
    3800:	40 f0       	brcs	.+16     	; 0x3812 <__gesf2+0x56>
    3802:	89 89       	ldd	r24, Y+17	; 0x11
    3804:	82 30       	cpi	r24, 0x02	; 2
    3806:	28 f0       	brcs	.+10     	; 0x3812 <__gesf2+0x56>
    3808:	c7 01       	movw	r24, r14
    380a:	b8 01       	movw	r22, r16
    380c:	0e 94 a7 1e 	call	0x3d4e	; 0x3d4e <__fpcmp_parts_f>
    3810:	01 c0       	rjmp	.+2      	; 0x3814 <__gesf2+0x58>
    3812:	8f ef       	ldi	r24, 0xFF	; 255
    3814:	68 96       	adiw	r28, 0x18	; 24
    3816:	e6 e0       	ldi	r30, 0x06	; 6
    3818:	0c 94 47 1f 	jmp	0x3e8e	; 0x3e8e <__epilogue_restores__+0x18>

0000381c <__ltsf2>:
    381c:	a8 e1       	ldi	r26, 0x18	; 24
    381e:	b0 e0       	ldi	r27, 0x00	; 0
    3820:	e4 e1       	ldi	r30, 0x14	; 20
    3822:	fc e1       	ldi	r31, 0x1C	; 28
    3824:	0c 94 2b 1f 	jmp	0x3e56	; 0x3e56 <__prologue_saves__+0x18>
    3828:	69 83       	std	Y+1, r22	; 0x01
    382a:	7a 83       	std	Y+2, r23	; 0x02
    382c:	8b 83       	std	Y+3, r24	; 0x03
    382e:	9c 83       	std	Y+4, r25	; 0x04
    3830:	2d 83       	std	Y+5, r18	; 0x05
    3832:	3e 83       	std	Y+6, r19	; 0x06
    3834:	4f 83       	std	Y+7, r20	; 0x07
    3836:	58 87       	std	Y+8, r21	; 0x08
    3838:	89 e0       	ldi	r24, 0x09	; 9
    383a:	e8 2e       	mov	r14, r24
    383c:	f1 2c       	mov	r15, r1
    383e:	ec 0e       	add	r14, r28
    3840:	fd 1e       	adc	r15, r29
    3842:	ce 01       	movw	r24, r28
    3844:	01 96       	adiw	r24, 0x01	; 1
    3846:	b7 01       	movw	r22, r14
    3848:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    384c:	8e 01       	movw	r16, r28
    384e:	0f 5e       	subi	r16, 0xEF	; 239
    3850:	1f 4f       	sbci	r17, 0xFF	; 255
    3852:	ce 01       	movw	r24, r28
    3854:	05 96       	adiw	r24, 0x05	; 5
    3856:	b8 01       	movw	r22, r16
    3858:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    385c:	89 85       	ldd	r24, Y+9	; 0x09
    385e:	82 30       	cpi	r24, 0x02	; 2
    3860:	40 f0       	brcs	.+16     	; 0x3872 <__ltsf2+0x56>
    3862:	89 89       	ldd	r24, Y+17	; 0x11
    3864:	82 30       	cpi	r24, 0x02	; 2
    3866:	28 f0       	brcs	.+10     	; 0x3872 <__ltsf2+0x56>
    3868:	c7 01       	movw	r24, r14
    386a:	b8 01       	movw	r22, r16
    386c:	0e 94 a7 1e 	call	0x3d4e	; 0x3d4e <__fpcmp_parts_f>
    3870:	01 c0       	rjmp	.+2      	; 0x3874 <__ltsf2+0x58>
    3872:	81 e0       	ldi	r24, 0x01	; 1
    3874:	68 96       	adiw	r28, 0x18	; 24
    3876:	e6 e0       	ldi	r30, 0x06	; 6
    3878:	0c 94 47 1f 	jmp	0x3e8e	; 0x3e8e <__epilogue_restores__+0x18>

0000387c <__fixsfsi>:
    387c:	ac e0       	ldi	r26, 0x0C	; 12
    387e:	b0 e0       	ldi	r27, 0x00	; 0
    3880:	e4 e4       	ldi	r30, 0x44	; 68
    3882:	fc e1       	ldi	r31, 0x1C	; 28
    3884:	0c 94 2f 1f 	jmp	0x3e5e	; 0x3e5e <__prologue_saves__+0x20>
    3888:	69 83       	std	Y+1, r22	; 0x01
    388a:	7a 83       	std	Y+2, r23	; 0x02
    388c:	8b 83       	std	Y+3, r24	; 0x03
    388e:	9c 83       	std	Y+4, r25	; 0x04
    3890:	ce 01       	movw	r24, r28
    3892:	01 96       	adiw	r24, 0x01	; 1
    3894:	be 01       	movw	r22, r28
    3896:	6b 5f       	subi	r22, 0xFB	; 251
    3898:	7f 4f       	sbci	r23, 0xFF	; 255
    389a:	0e 94 2f 1e 	call	0x3c5e	; 0x3c5e <__unpack_f>
    389e:	8d 81       	ldd	r24, Y+5	; 0x05
    38a0:	82 30       	cpi	r24, 0x02	; 2
    38a2:	61 f1       	breq	.+88     	; 0x38fc <__fixsfsi+0x80>
    38a4:	82 30       	cpi	r24, 0x02	; 2
    38a6:	50 f1       	brcs	.+84     	; 0x38fc <__fixsfsi+0x80>
    38a8:	84 30       	cpi	r24, 0x04	; 4
    38aa:	21 f4       	brne	.+8      	; 0x38b4 <__fixsfsi+0x38>
    38ac:	8e 81       	ldd	r24, Y+6	; 0x06
    38ae:	88 23       	and	r24, r24
    38b0:	51 f1       	breq	.+84     	; 0x3906 <__fixsfsi+0x8a>
    38b2:	2e c0       	rjmp	.+92     	; 0x3910 <__fixsfsi+0x94>
    38b4:	2f 81       	ldd	r18, Y+7	; 0x07
    38b6:	38 85       	ldd	r19, Y+8	; 0x08
    38b8:	37 fd       	sbrc	r19, 7
    38ba:	20 c0       	rjmp	.+64     	; 0x38fc <__fixsfsi+0x80>
    38bc:	6e 81       	ldd	r22, Y+6	; 0x06
    38be:	2f 31       	cpi	r18, 0x1F	; 31
    38c0:	31 05       	cpc	r19, r1
    38c2:	1c f0       	brlt	.+6      	; 0x38ca <__fixsfsi+0x4e>
    38c4:	66 23       	and	r22, r22
    38c6:	f9 f0       	breq	.+62     	; 0x3906 <__fixsfsi+0x8a>
    38c8:	23 c0       	rjmp	.+70     	; 0x3910 <__fixsfsi+0x94>
    38ca:	8e e1       	ldi	r24, 0x1E	; 30
    38cc:	90 e0       	ldi	r25, 0x00	; 0
    38ce:	82 1b       	sub	r24, r18
    38d0:	93 0b       	sbc	r25, r19
    38d2:	29 85       	ldd	r18, Y+9	; 0x09
    38d4:	3a 85       	ldd	r19, Y+10	; 0x0a
    38d6:	4b 85       	ldd	r20, Y+11	; 0x0b
    38d8:	5c 85       	ldd	r21, Y+12	; 0x0c
    38da:	04 c0       	rjmp	.+8      	; 0x38e4 <__fixsfsi+0x68>
    38dc:	56 95       	lsr	r21
    38de:	47 95       	ror	r20
    38e0:	37 95       	ror	r19
    38e2:	27 95       	ror	r18
    38e4:	8a 95       	dec	r24
    38e6:	d2 f7       	brpl	.-12     	; 0x38dc <__fixsfsi+0x60>
    38e8:	66 23       	and	r22, r22
    38ea:	b1 f0       	breq	.+44     	; 0x3918 <__fixsfsi+0x9c>
    38ec:	50 95       	com	r21
    38ee:	40 95       	com	r20
    38f0:	30 95       	com	r19
    38f2:	21 95       	neg	r18
    38f4:	3f 4f       	sbci	r19, 0xFF	; 255
    38f6:	4f 4f       	sbci	r20, 0xFF	; 255
    38f8:	5f 4f       	sbci	r21, 0xFF	; 255
    38fa:	0e c0       	rjmp	.+28     	; 0x3918 <__fixsfsi+0x9c>
    38fc:	20 e0       	ldi	r18, 0x00	; 0
    38fe:	30 e0       	ldi	r19, 0x00	; 0
    3900:	40 e0       	ldi	r20, 0x00	; 0
    3902:	50 e0       	ldi	r21, 0x00	; 0
    3904:	09 c0       	rjmp	.+18     	; 0x3918 <__fixsfsi+0x9c>
    3906:	2f ef       	ldi	r18, 0xFF	; 255
    3908:	3f ef       	ldi	r19, 0xFF	; 255
    390a:	4f ef       	ldi	r20, 0xFF	; 255
    390c:	5f e7       	ldi	r21, 0x7F	; 127
    390e:	04 c0       	rjmp	.+8      	; 0x3918 <__fixsfsi+0x9c>
    3910:	20 e0       	ldi	r18, 0x00	; 0
    3912:	30 e0       	ldi	r19, 0x00	; 0
    3914:	40 e0       	ldi	r20, 0x00	; 0
    3916:	50 e8       	ldi	r21, 0x80	; 128
    3918:	b9 01       	movw	r22, r18
    391a:	ca 01       	movw	r24, r20
    391c:	2c 96       	adiw	r28, 0x0c	; 12
    391e:	e2 e0       	ldi	r30, 0x02	; 2
    3920:	0c 94 4b 1f 	jmp	0x3e96	; 0x3e96 <__epilogue_restores__+0x20>

00003924 <__floatunsisf>:
    3924:	a8 e0       	ldi	r26, 0x08	; 8
    3926:	b0 e0       	ldi	r27, 0x00	; 0
    3928:	e8 e9       	ldi	r30, 0x98	; 152
    392a:	fc e1       	ldi	r31, 0x1C	; 28
    392c:	0c 94 27 1f 	jmp	0x3e4e	; 0x3e4e <__prologue_saves__+0x10>
    3930:	7b 01       	movw	r14, r22
    3932:	8c 01       	movw	r16, r24
    3934:	61 15       	cp	r22, r1
    3936:	71 05       	cpc	r23, r1
    3938:	81 05       	cpc	r24, r1
    393a:	91 05       	cpc	r25, r1
    393c:	19 f4       	brne	.+6      	; 0x3944 <__floatunsisf+0x20>
    393e:	82 e0       	ldi	r24, 0x02	; 2
    3940:	89 83       	std	Y+1, r24	; 0x01
    3942:	60 c0       	rjmp	.+192    	; 0x3a04 <__floatunsisf+0xe0>
    3944:	83 e0       	ldi	r24, 0x03	; 3
    3946:	89 83       	std	Y+1, r24	; 0x01
    3948:	8e e1       	ldi	r24, 0x1E	; 30
    394a:	c8 2e       	mov	r12, r24
    394c:	d1 2c       	mov	r13, r1
    394e:	dc 82       	std	Y+4, r13	; 0x04
    3950:	cb 82       	std	Y+3, r12	; 0x03
    3952:	ed 82       	std	Y+5, r14	; 0x05
    3954:	fe 82       	std	Y+6, r15	; 0x06
    3956:	0f 83       	std	Y+7, r16	; 0x07
    3958:	18 87       	std	Y+8, r17	; 0x08
    395a:	c8 01       	movw	r24, r16
    395c:	b7 01       	movw	r22, r14
    395e:	0e 94 0b 1d 	call	0x3a16	; 0x3a16 <__clzsi2>
    3962:	fc 01       	movw	r30, r24
    3964:	31 97       	sbiw	r30, 0x01	; 1
    3966:	f7 ff       	sbrs	r31, 7
    3968:	3b c0       	rjmp	.+118    	; 0x39e0 <__floatunsisf+0xbc>
    396a:	22 27       	eor	r18, r18
    396c:	33 27       	eor	r19, r19
    396e:	2e 1b       	sub	r18, r30
    3970:	3f 0b       	sbc	r19, r31
    3972:	57 01       	movw	r10, r14
    3974:	68 01       	movw	r12, r16
    3976:	02 2e       	mov	r0, r18
    3978:	04 c0       	rjmp	.+8      	; 0x3982 <__floatunsisf+0x5e>
    397a:	d6 94       	lsr	r13
    397c:	c7 94       	ror	r12
    397e:	b7 94       	ror	r11
    3980:	a7 94       	ror	r10
    3982:	0a 94       	dec	r0
    3984:	d2 f7       	brpl	.-12     	; 0x397a <__floatunsisf+0x56>
    3986:	40 e0       	ldi	r20, 0x00	; 0
    3988:	50 e0       	ldi	r21, 0x00	; 0
    398a:	60 e0       	ldi	r22, 0x00	; 0
    398c:	70 e0       	ldi	r23, 0x00	; 0
    398e:	81 e0       	ldi	r24, 0x01	; 1
    3990:	90 e0       	ldi	r25, 0x00	; 0
    3992:	a0 e0       	ldi	r26, 0x00	; 0
    3994:	b0 e0       	ldi	r27, 0x00	; 0
    3996:	04 c0       	rjmp	.+8      	; 0x39a0 <__floatunsisf+0x7c>
    3998:	88 0f       	add	r24, r24
    399a:	99 1f       	adc	r25, r25
    399c:	aa 1f       	adc	r26, r26
    399e:	bb 1f       	adc	r27, r27
    39a0:	2a 95       	dec	r18
    39a2:	d2 f7       	brpl	.-12     	; 0x3998 <__floatunsisf+0x74>
    39a4:	01 97       	sbiw	r24, 0x01	; 1
    39a6:	a1 09       	sbc	r26, r1
    39a8:	b1 09       	sbc	r27, r1
    39aa:	8e 21       	and	r24, r14
    39ac:	9f 21       	and	r25, r15
    39ae:	a0 23       	and	r26, r16
    39b0:	b1 23       	and	r27, r17
    39b2:	00 97       	sbiw	r24, 0x00	; 0
    39b4:	a1 05       	cpc	r26, r1
    39b6:	b1 05       	cpc	r27, r1
    39b8:	21 f0       	breq	.+8      	; 0x39c2 <__floatunsisf+0x9e>
    39ba:	41 e0       	ldi	r20, 0x01	; 1
    39bc:	50 e0       	ldi	r21, 0x00	; 0
    39be:	60 e0       	ldi	r22, 0x00	; 0
    39c0:	70 e0       	ldi	r23, 0x00	; 0
    39c2:	4a 29       	or	r20, r10
    39c4:	5b 29       	or	r21, r11
    39c6:	6c 29       	or	r22, r12
    39c8:	7d 29       	or	r23, r13
    39ca:	4d 83       	std	Y+5, r20	; 0x05
    39cc:	5e 83       	std	Y+6, r21	; 0x06
    39ce:	6f 83       	std	Y+7, r22	; 0x07
    39d0:	78 87       	std	Y+8, r23	; 0x08
    39d2:	8e e1       	ldi	r24, 0x1E	; 30
    39d4:	90 e0       	ldi	r25, 0x00	; 0
    39d6:	8e 1b       	sub	r24, r30
    39d8:	9f 0b       	sbc	r25, r31
    39da:	9c 83       	std	Y+4, r25	; 0x04
    39dc:	8b 83       	std	Y+3, r24	; 0x03
    39de:	12 c0       	rjmp	.+36     	; 0x3a04 <__floatunsisf+0xe0>
    39e0:	30 97       	sbiw	r30, 0x00	; 0
    39e2:	81 f0       	breq	.+32     	; 0x3a04 <__floatunsisf+0xe0>
    39e4:	0e 2e       	mov	r0, r30
    39e6:	04 c0       	rjmp	.+8      	; 0x39f0 <__floatunsisf+0xcc>
    39e8:	ee 0c       	add	r14, r14
    39ea:	ff 1c       	adc	r15, r15
    39ec:	00 1f       	adc	r16, r16
    39ee:	11 1f       	adc	r17, r17
    39f0:	0a 94       	dec	r0
    39f2:	d2 f7       	brpl	.-12     	; 0x39e8 <__floatunsisf+0xc4>
    39f4:	ed 82       	std	Y+5, r14	; 0x05
    39f6:	fe 82       	std	Y+6, r15	; 0x06
    39f8:	0f 83       	std	Y+7, r16	; 0x07
    39fa:	18 87       	std	Y+8, r17	; 0x08
    39fc:	ce 1a       	sub	r12, r30
    39fe:	df 0a       	sbc	r13, r31
    3a00:	dc 82       	std	Y+4, r13	; 0x04
    3a02:	cb 82       	std	Y+3, r12	; 0x03
    3a04:	1a 82       	std	Y+2, r1	; 0x02
    3a06:	ce 01       	movw	r24, r28
    3a08:	01 96       	adiw	r24, 0x01	; 1
    3a0a:	0e 94 5a 1d 	call	0x3ab4	; 0x3ab4 <__pack_f>
    3a0e:	28 96       	adiw	r28, 0x08	; 8
    3a10:	ea e0       	ldi	r30, 0x0A	; 10
    3a12:	0c 94 43 1f 	jmp	0x3e86	; 0x3e86 <__epilogue_restores__+0x10>

00003a16 <__clzsi2>:
    3a16:	ef 92       	push	r14
    3a18:	ff 92       	push	r15
    3a1a:	0f 93       	push	r16
    3a1c:	1f 93       	push	r17
    3a1e:	7b 01       	movw	r14, r22
    3a20:	8c 01       	movw	r16, r24
    3a22:	80 e0       	ldi	r24, 0x00	; 0
    3a24:	e8 16       	cp	r14, r24
    3a26:	80 e0       	ldi	r24, 0x00	; 0
    3a28:	f8 06       	cpc	r15, r24
    3a2a:	81 e0       	ldi	r24, 0x01	; 1
    3a2c:	08 07       	cpc	r16, r24
    3a2e:	80 e0       	ldi	r24, 0x00	; 0
    3a30:	18 07       	cpc	r17, r24
    3a32:	88 f4       	brcc	.+34     	; 0x3a56 <__clzsi2+0x40>
    3a34:	8f ef       	ldi	r24, 0xFF	; 255
    3a36:	e8 16       	cp	r14, r24
    3a38:	f1 04       	cpc	r15, r1
    3a3a:	01 05       	cpc	r16, r1
    3a3c:	11 05       	cpc	r17, r1
    3a3e:	31 f0       	breq	.+12     	; 0x3a4c <__clzsi2+0x36>
    3a40:	28 f0       	brcs	.+10     	; 0x3a4c <__clzsi2+0x36>
    3a42:	88 e0       	ldi	r24, 0x08	; 8
    3a44:	90 e0       	ldi	r25, 0x00	; 0
    3a46:	a0 e0       	ldi	r26, 0x00	; 0
    3a48:	b0 e0       	ldi	r27, 0x00	; 0
    3a4a:	17 c0       	rjmp	.+46     	; 0x3a7a <__clzsi2+0x64>
    3a4c:	80 e0       	ldi	r24, 0x00	; 0
    3a4e:	90 e0       	ldi	r25, 0x00	; 0
    3a50:	a0 e0       	ldi	r26, 0x00	; 0
    3a52:	b0 e0       	ldi	r27, 0x00	; 0
    3a54:	12 c0       	rjmp	.+36     	; 0x3a7a <__clzsi2+0x64>
    3a56:	80 e0       	ldi	r24, 0x00	; 0
    3a58:	e8 16       	cp	r14, r24
    3a5a:	80 e0       	ldi	r24, 0x00	; 0
    3a5c:	f8 06       	cpc	r15, r24
    3a5e:	80 e0       	ldi	r24, 0x00	; 0
    3a60:	08 07       	cpc	r16, r24
    3a62:	81 e0       	ldi	r24, 0x01	; 1
    3a64:	18 07       	cpc	r17, r24
    3a66:	28 f0       	brcs	.+10     	; 0x3a72 <__clzsi2+0x5c>
    3a68:	88 e1       	ldi	r24, 0x18	; 24
    3a6a:	90 e0       	ldi	r25, 0x00	; 0
    3a6c:	a0 e0       	ldi	r26, 0x00	; 0
    3a6e:	b0 e0       	ldi	r27, 0x00	; 0
    3a70:	04 c0       	rjmp	.+8      	; 0x3a7a <__clzsi2+0x64>
    3a72:	80 e1       	ldi	r24, 0x10	; 16
    3a74:	90 e0       	ldi	r25, 0x00	; 0
    3a76:	a0 e0       	ldi	r26, 0x00	; 0
    3a78:	b0 e0       	ldi	r27, 0x00	; 0
    3a7a:	20 e2       	ldi	r18, 0x20	; 32
    3a7c:	30 e0       	ldi	r19, 0x00	; 0
    3a7e:	40 e0       	ldi	r20, 0x00	; 0
    3a80:	50 e0       	ldi	r21, 0x00	; 0
    3a82:	28 1b       	sub	r18, r24
    3a84:	39 0b       	sbc	r19, r25
    3a86:	4a 0b       	sbc	r20, r26
    3a88:	5b 0b       	sbc	r21, r27
    3a8a:	04 c0       	rjmp	.+8      	; 0x3a94 <__clzsi2+0x7e>
    3a8c:	16 95       	lsr	r17
    3a8e:	07 95       	ror	r16
    3a90:	f7 94       	ror	r15
    3a92:	e7 94       	ror	r14
    3a94:	8a 95       	dec	r24
    3a96:	d2 f7       	brpl	.-12     	; 0x3a8c <__clzsi2+0x76>
    3a98:	f7 01       	movw	r30, r14
    3a9a:	e8 5f       	subi	r30, 0xF8	; 248
    3a9c:	fd 4f       	sbci	r31, 0xFD	; 253
    3a9e:	80 81       	ld	r24, Z
    3aa0:	28 1b       	sub	r18, r24
    3aa2:	31 09       	sbc	r19, r1
    3aa4:	41 09       	sbc	r20, r1
    3aa6:	51 09       	sbc	r21, r1
    3aa8:	c9 01       	movw	r24, r18
    3aaa:	1f 91       	pop	r17
    3aac:	0f 91       	pop	r16
    3aae:	ff 90       	pop	r15
    3ab0:	ef 90       	pop	r14
    3ab2:	08 95       	ret

00003ab4 <__pack_f>:
    3ab4:	df 92       	push	r13
    3ab6:	ef 92       	push	r14
    3ab8:	ff 92       	push	r15
    3aba:	0f 93       	push	r16
    3abc:	1f 93       	push	r17
    3abe:	fc 01       	movw	r30, r24
    3ac0:	e4 80       	ldd	r14, Z+4	; 0x04
    3ac2:	f5 80       	ldd	r15, Z+5	; 0x05
    3ac4:	06 81       	ldd	r16, Z+6	; 0x06
    3ac6:	17 81       	ldd	r17, Z+7	; 0x07
    3ac8:	d1 80       	ldd	r13, Z+1	; 0x01
    3aca:	80 81       	ld	r24, Z
    3acc:	82 30       	cpi	r24, 0x02	; 2
    3ace:	48 f4       	brcc	.+18     	; 0x3ae2 <__pack_f+0x2e>
    3ad0:	80 e0       	ldi	r24, 0x00	; 0
    3ad2:	90 e0       	ldi	r25, 0x00	; 0
    3ad4:	a0 e1       	ldi	r26, 0x10	; 16
    3ad6:	b0 e0       	ldi	r27, 0x00	; 0
    3ad8:	e8 2a       	or	r14, r24
    3ada:	f9 2a       	or	r15, r25
    3adc:	0a 2b       	or	r16, r26
    3ade:	1b 2b       	or	r17, r27
    3ae0:	a5 c0       	rjmp	.+330    	; 0x3c2c <__pack_f+0x178>
    3ae2:	84 30       	cpi	r24, 0x04	; 4
    3ae4:	09 f4       	brne	.+2      	; 0x3ae8 <__pack_f+0x34>
    3ae6:	9f c0       	rjmp	.+318    	; 0x3c26 <__pack_f+0x172>
    3ae8:	82 30       	cpi	r24, 0x02	; 2
    3aea:	21 f4       	brne	.+8      	; 0x3af4 <__pack_f+0x40>
    3aec:	ee 24       	eor	r14, r14
    3aee:	ff 24       	eor	r15, r15
    3af0:	87 01       	movw	r16, r14
    3af2:	05 c0       	rjmp	.+10     	; 0x3afe <__pack_f+0x4a>
    3af4:	e1 14       	cp	r14, r1
    3af6:	f1 04       	cpc	r15, r1
    3af8:	01 05       	cpc	r16, r1
    3afa:	11 05       	cpc	r17, r1
    3afc:	19 f4       	brne	.+6      	; 0x3b04 <__pack_f+0x50>
    3afe:	e0 e0       	ldi	r30, 0x00	; 0
    3b00:	f0 e0       	ldi	r31, 0x00	; 0
    3b02:	96 c0       	rjmp	.+300    	; 0x3c30 <__pack_f+0x17c>
    3b04:	62 81       	ldd	r22, Z+2	; 0x02
    3b06:	73 81       	ldd	r23, Z+3	; 0x03
    3b08:	9f ef       	ldi	r25, 0xFF	; 255
    3b0a:	62 38       	cpi	r22, 0x82	; 130
    3b0c:	79 07       	cpc	r23, r25
    3b0e:	0c f0       	brlt	.+2      	; 0x3b12 <__pack_f+0x5e>
    3b10:	5b c0       	rjmp	.+182    	; 0x3bc8 <__pack_f+0x114>
    3b12:	22 e8       	ldi	r18, 0x82	; 130
    3b14:	3f ef       	ldi	r19, 0xFF	; 255
    3b16:	26 1b       	sub	r18, r22
    3b18:	37 0b       	sbc	r19, r23
    3b1a:	2a 31       	cpi	r18, 0x1A	; 26
    3b1c:	31 05       	cpc	r19, r1
    3b1e:	2c f0       	brlt	.+10     	; 0x3b2a <__pack_f+0x76>
    3b20:	20 e0       	ldi	r18, 0x00	; 0
    3b22:	30 e0       	ldi	r19, 0x00	; 0
    3b24:	40 e0       	ldi	r20, 0x00	; 0
    3b26:	50 e0       	ldi	r21, 0x00	; 0
    3b28:	2a c0       	rjmp	.+84     	; 0x3b7e <__pack_f+0xca>
    3b2a:	b8 01       	movw	r22, r16
    3b2c:	a7 01       	movw	r20, r14
    3b2e:	02 2e       	mov	r0, r18
    3b30:	04 c0       	rjmp	.+8      	; 0x3b3a <__pack_f+0x86>
    3b32:	76 95       	lsr	r23
    3b34:	67 95       	ror	r22
    3b36:	57 95       	ror	r21
    3b38:	47 95       	ror	r20
    3b3a:	0a 94       	dec	r0
    3b3c:	d2 f7       	brpl	.-12     	; 0x3b32 <__pack_f+0x7e>
    3b3e:	81 e0       	ldi	r24, 0x01	; 1
    3b40:	90 e0       	ldi	r25, 0x00	; 0
    3b42:	a0 e0       	ldi	r26, 0x00	; 0
    3b44:	b0 e0       	ldi	r27, 0x00	; 0
    3b46:	04 c0       	rjmp	.+8      	; 0x3b50 <__pack_f+0x9c>
    3b48:	88 0f       	add	r24, r24
    3b4a:	99 1f       	adc	r25, r25
    3b4c:	aa 1f       	adc	r26, r26
    3b4e:	bb 1f       	adc	r27, r27
    3b50:	2a 95       	dec	r18
    3b52:	d2 f7       	brpl	.-12     	; 0x3b48 <__pack_f+0x94>
    3b54:	01 97       	sbiw	r24, 0x01	; 1
    3b56:	a1 09       	sbc	r26, r1
    3b58:	b1 09       	sbc	r27, r1
    3b5a:	8e 21       	and	r24, r14
    3b5c:	9f 21       	and	r25, r15
    3b5e:	a0 23       	and	r26, r16
    3b60:	b1 23       	and	r27, r17
    3b62:	00 97       	sbiw	r24, 0x00	; 0
    3b64:	a1 05       	cpc	r26, r1
    3b66:	b1 05       	cpc	r27, r1
    3b68:	21 f0       	breq	.+8      	; 0x3b72 <__pack_f+0xbe>
    3b6a:	81 e0       	ldi	r24, 0x01	; 1
    3b6c:	90 e0       	ldi	r25, 0x00	; 0
    3b6e:	a0 e0       	ldi	r26, 0x00	; 0
    3b70:	b0 e0       	ldi	r27, 0x00	; 0
    3b72:	9a 01       	movw	r18, r20
    3b74:	ab 01       	movw	r20, r22
    3b76:	28 2b       	or	r18, r24
    3b78:	39 2b       	or	r19, r25
    3b7a:	4a 2b       	or	r20, r26
    3b7c:	5b 2b       	or	r21, r27
    3b7e:	da 01       	movw	r26, r20
    3b80:	c9 01       	movw	r24, r18
    3b82:	8f 77       	andi	r24, 0x7F	; 127
    3b84:	90 70       	andi	r25, 0x00	; 0
    3b86:	a0 70       	andi	r26, 0x00	; 0
    3b88:	b0 70       	andi	r27, 0x00	; 0
    3b8a:	80 34       	cpi	r24, 0x40	; 64
    3b8c:	91 05       	cpc	r25, r1
    3b8e:	a1 05       	cpc	r26, r1
    3b90:	b1 05       	cpc	r27, r1
    3b92:	39 f4       	brne	.+14     	; 0x3ba2 <__pack_f+0xee>
    3b94:	27 ff       	sbrs	r18, 7
    3b96:	09 c0       	rjmp	.+18     	; 0x3baa <__pack_f+0xf6>
    3b98:	20 5c       	subi	r18, 0xC0	; 192
    3b9a:	3f 4f       	sbci	r19, 0xFF	; 255
    3b9c:	4f 4f       	sbci	r20, 0xFF	; 255
    3b9e:	5f 4f       	sbci	r21, 0xFF	; 255
    3ba0:	04 c0       	rjmp	.+8      	; 0x3baa <__pack_f+0xf6>
    3ba2:	21 5c       	subi	r18, 0xC1	; 193
    3ba4:	3f 4f       	sbci	r19, 0xFF	; 255
    3ba6:	4f 4f       	sbci	r20, 0xFF	; 255
    3ba8:	5f 4f       	sbci	r21, 0xFF	; 255
    3baa:	e0 e0       	ldi	r30, 0x00	; 0
    3bac:	f0 e0       	ldi	r31, 0x00	; 0
    3bae:	20 30       	cpi	r18, 0x00	; 0
    3bb0:	a0 e0       	ldi	r26, 0x00	; 0
    3bb2:	3a 07       	cpc	r19, r26
    3bb4:	a0 e0       	ldi	r26, 0x00	; 0
    3bb6:	4a 07       	cpc	r20, r26
    3bb8:	a0 e4       	ldi	r26, 0x40	; 64
    3bba:	5a 07       	cpc	r21, r26
    3bbc:	10 f0       	brcs	.+4      	; 0x3bc2 <__pack_f+0x10e>
    3bbe:	e1 e0       	ldi	r30, 0x01	; 1
    3bc0:	f0 e0       	ldi	r31, 0x00	; 0
    3bc2:	79 01       	movw	r14, r18
    3bc4:	8a 01       	movw	r16, r20
    3bc6:	27 c0       	rjmp	.+78     	; 0x3c16 <__pack_f+0x162>
    3bc8:	60 38       	cpi	r22, 0x80	; 128
    3bca:	71 05       	cpc	r23, r1
    3bcc:	64 f5       	brge	.+88     	; 0x3c26 <__pack_f+0x172>
    3bce:	fb 01       	movw	r30, r22
    3bd0:	e1 58       	subi	r30, 0x81	; 129
    3bd2:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd4:	d8 01       	movw	r26, r16
    3bd6:	c7 01       	movw	r24, r14
    3bd8:	8f 77       	andi	r24, 0x7F	; 127
    3bda:	90 70       	andi	r25, 0x00	; 0
    3bdc:	a0 70       	andi	r26, 0x00	; 0
    3bde:	b0 70       	andi	r27, 0x00	; 0
    3be0:	80 34       	cpi	r24, 0x40	; 64
    3be2:	91 05       	cpc	r25, r1
    3be4:	a1 05       	cpc	r26, r1
    3be6:	b1 05       	cpc	r27, r1
    3be8:	39 f4       	brne	.+14     	; 0x3bf8 <__pack_f+0x144>
    3bea:	e7 fe       	sbrs	r14, 7
    3bec:	0d c0       	rjmp	.+26     	; 0x3c08 <__pack_f+0x154>
    3bee:	80 e4       	ldi	r24, 0x40	; 64
    3bf0:	90 e0       	ldi	r25, 0x00	; 0
    3bf2:	a0 e0       	ldi	r26, 0x00	; 0
    3bf4:	b0 e0       	ldi	r27, 0x00	; 0
    3bf6:	04 c0       	rjmp	.+8      	; 0x3c00 <__pack_f+0x14c>
    3bf8:	8f e3       	ldi	r24, 0x3F	; 63
    3bfa:	90 e0       	ldi	r25, 0x00	; 0
    3bfc:	a0 e0       	ldi	r26, 0x00	; 0
    3bfe:	b0 e0       	ldi	r27, 0x00	; 0
    3c00:	e8 0e       	add	r14, r24
    3c02:	f9 1e       	adc	r15, r25
    3c04:	0a 1f       	adc	r16, r26
    3c06:	1b 1f       	adc	r17, r27
    3c08:	17 ff       	sbrs	r17, 7
    3c0a:	05 c0       	rjmp	.+10     	; 0x3c16 <__pack_f+0x162>
    3c0c:	16 95       	lsr	r17
    3c0e:	07 95       	ror	r16
    3c10:	f7 94       	ror	r15
    3c12:	e7 94       	ror	r14
    3c14:	31 96       	adiw	r30, 0x01	; 1
    3c16:	87 e0       	ldi	r24, 0x07	; 7
    3c18:	16 95       	lsr	r17
    3c1a:	07 95       	ror	r16
    3c1c:	f7 94       	ror	r15
    3c1e:	e7 94       	ror	r14
    3c20:	8a 95       	dec	r24
    3c22:	d1 f7       	brne	.-12     	; 0x3c18 <__pack_f+0x164>
    3c24:	05 c0       	rjmp	.+10     	; 0x3c30 <__pack_f+0x17c>
    3c26:	ee 24       	eor	r14, r14
    3c28:	ff 24       	eor	r15, r15
    3c2a:	87 01       	movw	r16, r14
    3c2c:	ef ef       	ldi	r30, 0xFF	; 255
    3c2e:	f0 e0       	ldi	r31, 0x00	; 0
    3c30:	6e 2f       	mov	r22, r30
    3c32:	67 95       	ror	r22
    3c34:	66 27       	eor	r22, r22
    3c36:	67 95       	ror	r22
    3c38:	90 2f       	mov	r25, r16
    3c3a:	9f 77       	andi	r25, 0x7F	; 127
    3c3c:	d7 94       	ror	r13
    3c3e:	dd 24       	eor	r13, r13
    3c40:	d7 94       	ror	r13
    3c42:	8e 2f       	mov	r24, r30
    3c44:	86 95       	lsr	r24
    3c46:	49 2f       	mov	r20, r25
    3c48:	46 2b       	or	r20, r22
    3c4a:	58 2f       	mov	r21, r24
    3c4c:	5d 29       	or	r21, r13
    3c4e:	b7 01       	movw	r22, r14
    3c50:	ca 01       	movw	r24, r20
    3c52:	1f 91       	pop	r17
    3c54:	0f 91       	pop	r16
    3c56:	ff 90       	pop	r15
    3c58:	ef 90       	pop	r14
    3c5a:	df 90       	pop	r13
    3c5c:	08 95       	ret

00003c5e <__unpack_f>:
    3c5e:	fc 01       	movw	r30, r24
    3c60:	db 01       	movw	r26, r22
    3c62:	40 81       	ld	r20, Z
    3c64:	51 81       	ldd	r21, Z+1	; 0x01
    3c66:	22 81       	ldd	r18, Z+2	; 0x02
    3c68:	62 2f       	mov	r22, r18
    3c6a:	6f 77       	andi	r22, 0x7F	; 127
    3c6c:	70 e0       	ldi	r23, 0x00	; 0
    3c6e:	22 1f       	adc	r18, r18
    3c70:	22 27       	eor	r18, r18
    3c72:	22 1f       	adc	r18, r18
    3c74:	93 81       	ldd	r25, Z+3	; 0x03
    3c76:	89 2f       	mov	r24, r25
    3c78:	88 0f       	add	r24, r24
    3c7a:	82 2b       	or	r24, r18
    3c7c:	28 2f       	mov	r18, r24
    3c7e:	30 e0       	ldi	r19, 0x00	; 0
    3c80:	99 1f       	adc	r25, r25
    3c82:	99 27       	eor	r25, r25
    3c84:	99 1f       	adc	r25, r25
    3c86:	11 96       	adiw	r26, 0x01	; 1
    3c88:	9c 93       	st	X, r25
    3c8a:	11 97       	sbiw	r26, 0x01	; 1
    3c8c:	21 15       	cp	r18, r1
    3c8e:	31 05       	cpc	r19, r1
    3c90:	a9 f5       	brne	.+106    	; 0x3cfc <__unpack_f+0x9e>
    3c92:	41 15       	cp	r20, r1
    3c94:	51 05       	cpc	r21, r1
    3c96:	61 05       	cpc	r22, r1
    3c98:	71 05       	cpc	r23, r1
    3c9a:	11 f4       	brne	.+4      	; 0x3ca0 <__unpack_f+0x42>
    3c9c:	82 e0       	ldi	r24, 0x02	; 2
    3c9e:	37 c0       	rjmp	.+110    	; 0x3d0e <__unpack_f+0xb0>
    3ca0:	82 e8       	ldi	r24, 0x82	; 130
    3ca2:	9f ef       	ldi	r25, 0xFF	; 255
    3ca4:	13 96       	adiw	r26, 0x03	; 3
    3ca6:	9c 93       	st	X, r25
    3ca8:	8e 93       	st	-X, r24
    3caa:	12 97       	sbiw	r26, 0x02	; 2
    3cac:	9a 01       	movw	r18, r20
    3cae:	ab 01       	movw	r20, r22
    3cb0:	67 e0       	ldi	r22, 0x07	; 7
    3cb2:	22 0f       	add	r18, r18
    3cb4:	33 1f       	adc	r19, r19
    3cb6:	44 1f       	adc	r20, r20
    3cb8:	55 1f       	adc	r21, r21
    3cba:	6a 95       	dec	r22
    3cbc:	d1 f7       	brne	.-12     	; 0x3cb2 <__unpack_f+0x54>
    3cbe:	83 e0       	ldi	r24, 0x03	; 3
    3cc0:	8c 93       	st	X, r24
    3cc2:	0d c0       	rjmp	.+26     	; 0x3cde <__unpack_f+0x80>
    3cc4:	22 0f       	add	r18, r18
    3cc6:	33 1f       	adc	r19, r19
    3cc8:	44 1f       	adc	r20, r20
    3cca:	55 1f       	adc	r21, r21
    3ccc:	12 96       	adiw	r26, 0x02	; 2
    3cce:	8d 91       	ld	r24, X+
    3cd0:	9c 91       	ld	r25, X
    3cd2:	13 97       	sbiw	r26, 0x03	; 3
    3cd4:	01 97       	sbiw	r24, 0x01	; 1
    3cd6:	13 96       	adiw	r26, 0x03	; 3
    3cd8:	9c 93       	st	X, r25
    3cda:	8e 93       	st	-X, r24
    3cdc:	12 97       	sbiw	r26, 0x02	; 2
    3cde:	20 30       	cpi	r18, 0x00	; 0
    3ce0:	80 e0       	ldi	r24, 0x00	; 0
    3ce2:	38 07       	cpc	r19, r24
    3ce4:	80 e0       	ldi	r24, 0x00	; 0
    3ce6:	48 07       	cpc	r20, r24
    3ce8:	80 e4       	ldi	r24, 0x40	; 64
    3cea:	58 07       	cpc	r21, r24
    3cec:	58 f3       	brcs	.-42     	; 0x3cc4 <__unpack_f+0x66>
    3cee:	14 96       	adiw	r26, 0x04	; 4
    3cf0:	2d 93       	st	X+, r18
    3cf2:	3d 93       	st	X+, r19
    3cf4:	4d 93       	st	X+, r20
    3cf6:	5c 93       	st	X, r21
    3cf8:	17 97       	sbiw	r26, 0x07	; 7
    3cfa:	08 95       	ret
    3cfc:	2f 3f       	cpi	r18, 0xFF	; 255
    3cfe:	31 05       	cpc	r19, r1
    3d00:	79 f4       	brne	.+30     	; 0x3d20 <__unpack_f+0xc2>
    3d02:	41 15       	cp	r20, r1
    3d04:	51 05       	cpc	r21, r1
    3d06:	61 05       	cpc	r22, r1
    3d08:	71 05       	cpc	r23, r1
    3d0a:	19 f4       	brne	.+6      	; 0x3d12 <__unpack_f+0xb4>
    3d0c:	84 e0       	ldi	r24, 0x04	; 4
    3d0e:	8c 93       	st	X, r24
    3d10:	08 95       	ret
    3d12:	64 ff       	sbrs	r22, 4
    3d14:	03 c0       	rjmp	.+6      	; 0x3d1c <__unpack_f+0xbe>
    3d16:	81 e0       	ldi	r24, 0x01	; 1
    3d18:	8c 93       	st	X, r24
    3d1a:	12 c0       	rjmp	.+36     	; 0x3d40 <__unpack_f+0xe2>
    3d1c:	1c 92       	st	X, r1
    3d1e:	10 c0       	rjmp	.+32     	; 0x3d40 <__unpack_f+0xe2>
    3d20:	2f 57       	subi	r18, 0x7F	; 127
    3d22:	30 40       	sbci	r19, 0x00	; 0
    3d24:	13 96       	adiw	r26, 0x03	; 3
    3d26:	3c 93       	st	X, r19
    3d28:	2e 93       	st	-X, r18
    3d2a:	12 97       	sbiw	r26, 0x02	; 2
    3d2c:	83 e0       	ldi	r24, 0x03	; 3
    3d2e:	8c 93       	st	X, r24
    3d30:	87 e0       	ldi	r24, 0x07	; 7
    3d32:	44 0f       	add	r20, r20
    3d34:	55 1f       	adc	r21, r21
    3d36:	66 1f       	adc	r22, r22
    3d38:	77 1f       	adc	r23, r23
    3d3a:	8a 95       	dec	r24
    3d3c:	d1 f7       	brne	.-12     	; 0x3d32 <__unpack_f+0xd4>
    3d3e:	70 64       	ori	r23, 0x40	; 64
    3d40:	14 96       	adiw	r26, 0x04	; 4
    3d42:	4d 93       	st	X+, r20
    3d44:	5d 93       	st	X+, r21
    3d46:	6d 93       	st	X+, r22
    3d48:	7c 93       	st	X, r23
    3d4a:	17 97       	sbiw	r26, 0x07	; 7
    3d4c:	08 95       	ret

00003d4e <__fpcmp_parts_f>:
    3d4e:	1f 93       	push	r17
    3d50:	dc 01       	movw	r26, r24
    3d52:	fb 01       	movw	r30, r22
    3d54:	9c 91       	ld	r25, X
    3d56:	92 30       	cpi	r25, 0x02	; 2
    3d58:	08 f4       	brcc	.+2      	; 0x3d5c <__fpcmp_parts_f+0xe>
    3d5a:	47 c0       	rjmp	.+142    	; 0x3dea <__fpcmp_parts_f+0x9c>
    3d5c:	80 81       	ld	r24, Z
    3d5e:	82 30       	cpi	r24, 0x02	; 2
    3d60:	08 f4       	brcc	.+2      	; 0x3d64 <__fpcmp_parts_f+0x16>
    3d62:	43 c0       	rjmp	.+134    	; 0x3dea <__fpcmp_parts_f+0x9c>
    3d64:	94 30       	cpi	r25, 0x04	; 4
    3d66:	51 f4       	brne	.+20     	; 0x3d7c <__fpcmp_parts_f+0x2e>
    3d68:	11 96       	adiw	r26, 0x01	; 1
    3d6a:	1c 91       	ld	r17, X
    3d6c:	84 30       	cpi	r24, 0x04	; 4
    3d6e:	99 f5       	brne	.+102    	; 0x3dd6 <__fpcmp_parts_f+0x88>
    3d70:	81 81       	ldd	r24, Z+1	; 0x01
    3d72:	68 2f       	mov	r22, r24
    3d74:	70 e0       	ldi	r23, 0x00	; 0
    3d76:	61 1b       	sub	r22, r17
    3d78:	71 09       	sbc	r23, r1
    3d7a:	3f c0       	rjmp	.+126    	; 0x3dfa <__fpcmp_parts_f+0xac>
    3d7c:	84 30       	cpi	r24, 0x04	; 4
    3d7e:	21 f0       	breq	.+8      	; 0x3d88 <__fpcmp_parts_f+0x3a>
    3d80:	92 30       	cpi	r25, 0x02	; 2
    3d82:	31 f4       	brne	.+12     	; 0x3d90 <__fpcmp_parts_f+0x42>
    3d84:	82 30       	cpi	r24, 0x02	; 2
    3d86:	b9 f1       	breq	.+110    	; 0x3df6 <__fpcmp_parts_f+0xa8>
    3d88:	81 81       	ldd	r24, Z+1	; 0x01
    3d8a:	88 23       	and	r24, r24
    3d8c:	89 f1       	breq	.+98     	; 0x3df0 <__fpcmp_parts_f+0xa2>
    3d8e:	2d c0       	rjmp	.+90     	; 0x3dea <__fpcmp_parts_f+0x9c>
    3d90:	11 96       	adiw	r26, 0x01	; 1
    3d92:	1c 91       	ld	r17, X
    3d94:	11 97       	sbiw	r26, 0x01	; 1
    3d96:	82 30       	cpi	r24, 0x02	; 2
    3d98:	f1 f0       	breq	.+60     	; 0x3dd6 <__fpcmp_parts_f+0x88>
    3d9a:	81 81       	ldd	r24, Z+1	; 0x01
    3d9c:	18 17       	cp	r17, r24
    3d9e:	d9 f4       	brne	.+54     	; 0x3dd6 <__fpcmp_parts_f+0x88>
    3da0:	12 96       	adiw	r26, 0x02	; 2
    3da2:	2d 91       	ld	r18, X+
    3da4:	3c 91       	ld	r19, X
    3da6:	13 97       	sbiw	r26, 0x03	; 3
    3da8:	82 81       	ldd	r24, Z+2	; 0x02
    3daa:	93 81       	ldd	r25, Z+3	; 0x03
    3dac:	82 17       	cp	r24, r18
    3dae:	93 07       	cpc	r25, r19
    3db0:	94 f0       	brlt	.+36     	; 0x3dd6 <__fpcmp_parts_f+0x88>
    3db2:	28 17       	cp	r18, r24
    3db4:	39 07       	cpc	r19, r25
    3db6:	bc f0       	brlt	.+46     	; 0x3de6 <__fpcmp_parts_f+0x98>
    3db8:	14 96       	adiw	r26, 0x04	; 4
    3dba:	8d 91       	ld	r24, X+
    3dbc:	9d 91       	ld	r25, X+
    3dbe:	0d 90       	ld	r0, X+
    3dc0:	bc 91       	ld	r27, X
    3dc2:	a0 2d       	mov	r26, r0
    3dc4:	24 81       	ldd	r18, Z+4	; 0x04
    3dc6:	35 81       	ldd	r19, Z+5	; 0x05
    3dc8:	46 81       	ldd	r20, Z+6	; 0x06
    3dca:	57 81       	ldd	r21, Z+7	; 0x07
    3dcc:	28 17       	cp	r18, r24
    3dce:	39 07       	cpc	r19, r25
    3dd0:	4a 07       	cpc	r20, r26
    3dd2:	5b 07       	cpc	r21, r27
    3dd4:	18 f4       	brcc	.+6      	; 0x3ddc <__fpcmp_parts_f+0x8e>
    3dd6:	11 23       	and	r17, r17
    3dd8:	41 f0       	breq	.+16     	; 0x3dea <__fpcmp_parts_f+0x9c>
    3dda:	0a c0       	rjmp	.+20     	; 0x3df0 <__fpcmp_parts_f+0xa2>
    3ddc:	82 17       	cp	r24, r18
    3dde:	93 07       	cpc	r25, r19
    3de0:	a4 07       	cpc	r26, r20
    3de2:	b5 07       	cpc	r27, r21
    3de4:	40 f4       	brcc	.+16     	; 0x3df6 <__fpcmp_parts_f+0xa8>
    3de6:	11 23       	and	r17, r17
    3de8:	19 f0       	breq	.+6      	; 0x3df0 <__fpcmp_parts_f+0xa2>
    3dea:	61 e0       	ldi	r22, 0x01	; 1
    3dec:	70 e0       	ldi	r23, 0x00	; 0
    3dee:	05 c0       	rjmp	.+10     	; 0x3dfa <__fpcmp_parts_f+0xac>
    3df0:	6f ef       	ldi	r22, 0xFF	; 255
    3df2:	7f ef       	ldi	r23, 0xFF	; 255
    3df4:	02 c0       	rjmp	.+4      	; 0x3dfa <__fpcmp_parts_f+0xac>
    3df6:	60 e0       	ldi	r22, 0x00	; 0
    3df8:	70 e0       	ldi	r23, 0x00	; 0
    3dfa:	cb 01       	movw	r24, r22
    3dfc:	1f 91       	pop	r17
    3dfe:	08 95       	ret

00003e00 <__mulsi3>:
    3e00:	62 9f       	mul	r22, r18
    3e02:	d0 01       	movw	r26, r0
    3e04:	73 9f       	mul	r23, r19
    3e06:	f0 01       	movw	r30, r0
    3e08:	82 9f       	mul	r24, r18
    3e0a:	e0 0d       	add	r30, r0
    3e0c:	f1 1d       	adc	r31, r1
    3e0e:	64 9f       	mul	r22, r20
    3e10:	e0 0d       	add	r30, r0
    3e12:	f1 1d       	adc	r31, r1
    3e14:	92 9f       	mul	r25, r18
    3e16:	f0 0d       	add	r31, r0
    3e18:	83 9f       	mul	r24, r19
    3e1a:	f0 0d       	add	r31, r0
    3e1c:	74 9f       	mul	r23, r20
    3e1e:	f0 0d       	add	r31, r0
    3e20:	65 9f       	mul	r22, r21
    3e22:	f0 0d       	add	r31, r0
    3e24:	99 27       	eor	r25, r25
    3e26:	72 9f       	mul	r23, r18
    3e28:	b0 0d       	add	r27, r0
    3e2a:	e1 1d       	adc	r30, r1
    3e2c:	f9 1f       	adc	r31, r25
    3e2e:	63 9f       	mul	r22, r19
    3e30:	b0 0d       	add	r27, r0
    3e32:	e1 1d       	adc	r30, r1
    3e34:	f9 1f       	adc	r31, r25
    3e36:	bd 01       	movw	r22, r26
    3e38:	cf 01       	movw	r24, r30
    3e3a:	11 24       	eor	r1, r1
    3e3c:	08 95       	ret

00003e3e <__prologue_saves__>:
    3e3e:	2f 92       	push	r2
    3e40:	3f 92       	push	r3
    3e42:	4f 92       	push	r4
    3e44:	5f 92       	push	r5
    3e46:	6f 92       	push	r6
    3e48:	7f 92       	push	r7
    3e4a:	8f 92       	push	r8
    3e4c:	9f 92       	push	r9
    3e4e:	af 92       	push	r10
    3e50:	bf 92       	push	r11
    3e52:	cf 92       	push	r12
    3e54:	df 92       	push	r13
    3e56:	ef 92       	push	r14
    3e58:	ff 92       	push	r15
    3e5a:	0f 93       	push	r16
    3e5c:	1f 93       	push	r17
    3e5e:	cf 93       	push	r28
    3e60:	df 93       	push	r29
    3e62:	cd b7       	in	r28, 0x3d	; 61
    3e64:	de b7       	in	r29, 0x3e	; 62
    3e66:	ca 1b       	sub	r28, r26
    3e68:	db 0b       	sbc	r29, r27
    3e6a:	0f b6       	in	r0, 0x3f	; 63
    3e6c:	f8 94       	cli
    3e6e:	de bf       	out	0x3e, r29	; 62
    3e70:	0f be       	out	0x3f, r0	; 63
    3e72:	cd bf       	out	0x3d, r28	; 61
    3e74:	19 94       	eijmp

00003e76 <__epilogue_restores__>:
    3e76:	2a 88       	ldd	r2, Y+18	; 0x12
    3e78:	39 88       	ldd	r3, Y+17	; 0x11
    3e7a:	48 88       	ldd	r4, Y+16	; 0x10
    3e7c:	5f 84       	ldd	r5, Y+15	; 0x0f
    3e7e:	6e 84       	ldd	r6, Y+14	; 0x0e
    3e80:	7d 84       	ldd	r7, Y+13	; 0x0d
    3e82:	8c 84       	ldd	r8, Y+12	; 0x0c
    3e84:	9b 84       	ldd	r9, Y+11	; 0x0b
    3e86:	aa 84       	ldd	r10, Y+10	; 0x0a
    3e88:	b9 84       	ldd	r11, Y+9	; 0x09
    3e8a:	c8 84       	ldd	r12, Y+8	; 0x08
    3e8c:	df 80       	ldd	r13, Y+7	; 0x07
    3e8e:	ee 80       	ldd	r14, Y+6	; 0x06
    3e90:	fd 80       	ldd	r15, Y+5	; 0x05
    3e92:	0c 81       	ldd	r16, Y+4	; 0x04
    3e94:	1b 81       	ldd	r17, Y+3	; 0x03
    3e96:	aa 81       	ldd	r26, Y+2	; 0x02
    3e98:	b9 81       	ldd	r27, Y+1	; 0x01
    3e9a:	ce 0f       	add	r28, r30
    3e9c:	d1 1d       	adc	r29, r1
    3e9e:	0f b6       	in	r0, 0x3f	; 63
    3ea0:	f8 94       	cli
    3ea2:	de bf       	out	0x3e, r29	; 62
    3ea4:	0f be       	out	0x3f, r0	; 63
    3ea6:	cd bf       	out	0x3d, r28	; 61
    3ea8:	ed 01       	movw	r28, r26
    3eaa:	08 95       	ret

00003eac <_exit>:
    3eac:	f8 94       	cli

00003eae <__stop_program>:
    3eae:	ff cf       	rjmp	.-2      	; 0x3eae <__stop_program>
